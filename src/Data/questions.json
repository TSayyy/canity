{
  "Computer Science": [
    {
      "id": "0",
      "question": "Who developed Python Programming Language? \n",
      "answerA": " Wick van Rossum \n",
      "answerB": " Rasmus Lerdorf \n",
      "answerC": " Guido van Rossum \n",
      "answerD": " Niene Stom ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Python language is designed by a Dutch programmer Guido van Rossum in the Netherlands.  \n \n \n \n \n \n "
    },
    {
      "id": "1",
      "question": "Which type of Programming does Python support? \n",
      "answerA": " object-oriented programming \n",
      "answerB": " structured programming \n",
      "answerC": " functional programming \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Python is an interpreted programming language, which supports object-oriented, structured, and functional programming. \n "
    },
    {
      "id": "2",
      "question": "Is Python case sensitive when dealing with identifiers? \n",
      "answerA": " no \n",
      "answerB": " yes \n",
      "answerC": " machine dependent \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Case is always significant while dealing with identifiers in python. \n "
    },
    {
      "id": "3",
      "question": "Which of the following is the correct extension of the Python file? \n",
      "answerA": " .python \n",
      "answerB": " .pl \n",
      "answerC": " .py \n",
      "answerD": " .p ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " \u2018.py\u2019 is the correct extension of the Python file. Python programs can be written in any text editor. To save these programs we need to save in files with file extension \u2018.py\u2019. \n "
    },
    {
      "id": "4",
      "question": "Is Python code compiled or interpreted? \n",
      "answerA": " Python code is both compiled and interpreted \n",
      "answerB": " Python code is neither compiled nor interpreted \n",
      "answerC": " Python code is only compiled \n",
      "answerD": " Python code is only interpreted ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Many languages have been implemented using both compilers and interpreters, including C, Pascal, and Python. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "5",
      "question": "All keywords in Python are in _________ \n",
      "answerA": " Capitalized \n",
      "answerB": " lower case \n",
      "answerC": " UPPER CASE \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": "none explanation"
    },
    {
      "id": "6",
      "question": "What will be the value of the following Python expression? \n 4  +  3  %  5 \n ",
      "answerA": " 7 \n",
      "answerB": " 2 \n",
      "answerC": " 4 \n",
      "answerD": " 1 ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The order of precedence is: %, +. Hence the expression above, on simplification results in   4 + 3 = "
    },
    {
      "id": "7",
      "question": "Which of the following is used to define a block of code in Python language? \n",
      "answerA": " Indentation \n",
      "answerB": " Key \n",
      "answerC": " Brackets \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " In Python, to define a block of code we use indentation. Indentation refers to whitespaces at the beginning of the line. \n "
    },
    {
      "id": "8",
      "question": "Which keyword is used for function in Python language? \n",
      "answerA": " Function \n",
      "answerB": " def \n",
      "answerC": " Fun \n",
      "answerD": " Define ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The def keyword is used to create, (or define) a function in python. \n \n "
    },
    {
      "id": "9",
      "question": "Which of the following character is used to give single-line comments in Python? \n",
      "answerA": " // \n",
      "answerB": " # \n",
      "answerC": " ! \n",
      "answerD": " /* ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " To write single-line comments in Python use the Hash character (#) at the beginning of the line. It is also called number sign or pound sign. To write multi-line comments, close the text between triple quotes. \nExample: \u201c\u201d\u201d comment \ntext \u201c\u201d\u201d \n \n "
    },
    {
      "id": "10",
      "question": "What will be the output of the following Python code? \n i  =   1 \n while   True :\n     if  i% 3   ==   0 :\n         break \n     print ( i ) \n\u00a0\n    i +  =   1 \n ",
      "answerA": " 1 2 3 \n",
      "answerB": " error \n",
      "answerC": " 1 2 \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " SyntaxError, there shouldn\u2019t be a space between + and = in +=. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "11",
      "question": "Which of the following functions can help us to find the version of python that we are currently working on? \n",
      "answerA": " sys.version(1) \n",
      "answerB": " sys.version(0) \n",
      "answerC": " sys.version() \n",
      "answerD": " sys.version ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The function sys.version can help us to find the version of python that we are currently working on. It also contains information on the build number and compiler used. For example, 3.5.2, 2.7.3 etc. this function also returns the current date, time, bits etc along with the version. \n "
    },
    {
      "id": "12",
      "question": "Python supports the creation of anonymous functions at runtime, using a construct called __________ \n",
      "answerA": " pi \n",
      "answerB": " anonymous \n",
      "answerC": " lambda \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Python supports the creation of anonymous functions (i.e. functions that are not bound to a name) at runtime, using a construct called lambda. Lambda functions are restricted to a single expression. They can be used wherever normal functions can be used.  \n "
    },
    {
      "id": "13",
      "question": "What is the order of precedence in python? \n",
      "answerA": " Exponential, Parentheses, Multiplication, Division, Addition, Subtraction \n",
      "answerB": " Exponential, Parentheses, Division, Multiplication, Addition, Subtraction \n",
      "answerC": " Parentheses, Exponential, Multiplication, Division, Subtraction, Addition \n",
      "answerD": " Parentheses, Exponential, Multiplication, Division, Addition, Subtraction ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " For order of precedence, just remember this PEMDAS (similar to BODMAS). \n \n "
    },
    {
      "id": "14",
      "question": "What will be the output of the following Python code snippet if x=1? \n \n advertisement \n \n \n \n \n x << 2 \n ",
      "answerA": " 4 \n",
      "answerB": " 2 \n",
      "answerC": " 1 \n",
      "answerD": " 8 ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The binary form of 1 is "
    },
    {
      "id": "15",
      "question": "What does pip stand for python? \n",
      "answerA": " Pip Installs Python \n",
      "answerB": " Pip Installs Packages \n",
      "answerC": " Preferred Installer Program \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " pip is a package manager for python. Which is also called Preferred Installer Program. \n \n "
    },
    {
      "id": "16",
      "question": "Which of the following is true for variable names in Python? \n",
      "answerA": " underscore and ampersand are the only two special characters allowed \n",
      "answerB": " unlimited length \n",
      "answerC": " all private members must have leading and trailing underscores \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Variable names can be of any length. \n "
    },
    {
      "id": "17",
      "question": "What are the values of the following Python expressions? \n   2 ** ( 3 ** 2 ) \n  ( 2 ** 3 ) ** 2 \n  2 ** 3 ** 2 \n ",
      "answerA": " 512, 64, 512 \n",
      "answerB": " 512, 512, 512 \n",
      "answerC": " 64, 512, 64 \n",
      "answerD": " 64, 64, 64 ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Expression 1 is evaluated as: 2**9, which is equal to "
    },
    {
      "id": "18",
      "question": "Which of the following is the truncation division operator in Python? \n",
      "answerA": " | \n",
      "answerB": " // \n",
      "answerC": " / \n",
      "answerD": " % ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " // is the operator for truncation division. It is called so because it returns only the integer part of the quotient, truncating the decimal part. For example: 20//3 = "
    },
    {
      "id": "19",
      "question": "What will be the output of the following Python code? \n l = [ 1 ,   0 ,   2 ,   0 ,   'hello' ,   '' ,   [ ] ] \n list ( filter ( bool ,  l ) ) \n ",
      "answerA": " [1, 0, 2, \u2018hello\u2019, \u201d, []]  \n",
      "answerB": " Error \n",
      "answerC": " [1, 2, \u2018hello\u2019]  \n",
      "answerD": " [1, 0, 2, 0, \u2018hello\u2019, \u201d, []]  ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above returns a new list containing only those elements of the list l which do not amount to zero. Hence the output is: [1, 2, \u2018hello\u2019]. \n "
    },
    {
      "id": "20",
      "question": "Which of the following functions is a built-in function in python? \n",
      "answerA": " factorial() \n",
      "answerB": " print() \n",
      "answerC": " seed() \n",
      "answerD": " sqrt() ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The function seed is a function which is present in the random module. The functions sqrt and factorial are a part of the math module. The print function is a built-in function which prints a value directly to the system output. \n "
    },
    {
      "id": "21",
      "question": "Which of the following is the use of id() function in python? \n",
      "answerA": " Every object doesn\u2019t have a unique id \n",
      "answerB": " Id  returns the identity of the object \n",
      "answerC": " All of the mentioned \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Each object in Python has a unique id. The id() function returns the object\u2019s id.  \n "
    },
    {
      "id": "22",
      "question": "The following python program can work with ____ parameters. \n def  f ( x ) :\n     def  f1 ( *args ,  **kwargs ) :\n            print ( \"Sanfoundry\" ) \n            return  x ( *args ,  **kwargs ) \n     return  f1 \n ",
      "answerA": " any number of \n",
      "answerB": " 0 \n",
      "answerC": " 1 \n",
      "answerD": " 2 ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above shows a general decorator which can work with any number of arguments. \n "
    },
    {
      "id": "23",
      "question": "What will be the output of the following Python function? \n min ( max ( False , - 3 , - 4 ) ,   2 , 7 ) \n ",
      "answerA": " -4 \n",
      "answerB": " -3 \n",
      "answerC": " 2 \n",
      "answerD": " False ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The function max() is being used to find the maximum value from among -3, -4 and false. Since false amounts to the value zero, hence we are left with min(0, 2, 7) Hence the output is 0 (false). \n "
    },
    {
      "id": "24",
      "question": "Which of the following is not a core data type in Python programming? \n",
      "answerA": " Tuples \n",
      "answerB": " Lists \n",
      "answerC": " Class \n",
      "answerD": " Dictionary ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Class is a user-defined data type.  \n "
    },
    {
      "id": "25",
      "question": "What will be the output of the following Python expression if x=56.236? \n print ( \"%.2f\" %x ) \n ",
      "answerA": " 56.236 \n",
      "answerB": " 56.23 \n",
      "answerC": " 56.0000 \n",
      "answerD": " 56.24 ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The expression shown above rounds off the given number to the number of decimal places specified. Since the expression given specifies rounding off to two decimal places, the output of this expression will be 56."
    },
    {
      "id": "26",
      "question": "Which of these is the definition for packages in Python? \n",
      "answerA": " A set of main modules \n",
      "answerB": " A folder of python modules \n",
      "answerC": " A number of files containing Python definitions and statements \n",
      "answerD": " A set of programs making use of Python modules ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " A folder of python programs is called as a package of modules. \n "
    },
    {
      "id": "27",
      "question": "What will be the output of the following Python function? \n len ( [ \"hello\" , 2 ,   4 ,   6 ] ) \n ",
      "answerA": " Error \n",
      "answerB": " 6 \n",
      "answerC": " 4 \n",
      "answerD": " 3 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The function len() returns the length of the number of elements in the iterable. Therefore the output of the function shown above is "
    },
    {
      "id": "28",
      "question": "What will be the output of the following Python code? \n x  =   'abcd' \n for  i  in  x:\n     print ( i. upper ( ) ) \n ",
      "answerA": "  \n a\r\nB\r\nC\r\nD \n ",
      "answerB": " a b c d \n",
      "answerC": " error \n",
      "answerD": "  ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The instance of the string returned by upper() is being printed. \n "
    },
    {
      "id": "29",
      "question": " What is the order of namespaces in which Python looks for an identifier? \n",
      "answerA": " Python first searches the built-in namespace, then the global namespace and finally the local namespace \n",
      "answerB": " Python first searches the built-in namespace, then the local namespace and finally the global namespace \n",
      "answerC": " Python first searches the local namespace, then the global namespace and finally the built-in namespace \n",
      "answerD": " Python first searches the global namespace, then the local namespace and finally the built-in namespace ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Python first searches for the local, then the global and finally the built-in namespace. \n "
    },
    {
      "id": "30",
      "question": "What will be the output of the following Python code snippet? \n for  i  in   [ 1 ,   2 ,   3 ,   4 ] [ ::- 1 ] :\n     print ( i ,  end = ' ' ) \n ",
      "answerA": " 4 3 2 1 \n",
      "answerB": " error \n",
      "answerC": " 1 2 3 4 \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " [::-1] reverses the list. \n "
    },
    {
      "id": "31",
      "question": "What will be the output of the following Python statement? \n >>> \"a\" + \"bc\" \n ",
      "answerA": " bc \n",
      "answerB": " abc \n",
      "answerC": " a \n",
      "answerD": " bca ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " + operator is concatenation operator.  \n "
    },
    {
      "id": "32",
      "question": "Which function is called when the following Python program is executed? \n f  =  foo ( ) \nformat ( f ) \n ",
      "answerA": " str() \n",
      "answerB": " format() \n",
      "answerC": " __str__() \n",
      "answerD": " __format__() ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Both str(f) and format(f) call f.__str__(). \n "
    },
    {
      "id": "33",
      "question": "Which one of the following is not a keyword in Python language? \n",
      "answerA": " pass \n",
      "answerB": " eval \n",
      "answerC": " assert \n",
      "answerD": " nonlocal ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " eval can be used as a variable. \n "
    },
    {
      "id": "34",
      "question": "What will be the output of the following Python code? \n class  tester :     def __init__ ( self, id ) :         self. id   =  str ( id )         id = \"224\" \u00a0 >>> temp  =  tester ( 12 ) >>> print ( temp. id ) \n ",
      "answerA": " 12 \n",
      "answerB": " 224 \n",
      "answerC": " None \n",
      "answerD": " Error ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Id in this case will be the attribute of the instance.  \n "
    },
    {
      "id": "35",
      "question": "What will be the output of the following Python program? \n def  foo ( x ) :\n    x [ 0 ]   =   [ 'def' ] \n    x [ 1 ]   =   [ 'abc' ] \n     return   id ( x ) \nq  =   [ 'abc' ,   'def' ] \n print ( id ( q )   ==  foo ( q ) ) \n ",
      "answerA": " Error \n",
      "answerB": " None \n",
      "answerC": " False \n",
      "answerD": " True ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The same object is modified in the function. \n "
    },
    {
      "id": "36",
      "question": "Which module in the python standard library parses options received from the command line? \n",
      "answerA": " getarg \n",
      "answerB": " getopt \n",
      "answerC": " main \n",
      "answerD": " os ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " getopt parses options received from the command line. \n "
    },
    {
      "id": "37",
      "question": "What will be the output of the following Python program? \n z = set ( 'abc' ) \nz. add ( 'san' ) \nz. update ( set ( [ 'p' ,   'q' ] ) ) \nz \n ",
      "answerA": " {\u2018a\u2019, \u2018c\u2019, \u2018c\u2019, \u2018p\u2019, \u2018q\u2019, \u2018s\u2019, \u2018a\u2019, \u2018n\u2019} \n",
      "answerB": " {\u2018abc\u2019, \u2018p\u2019, \u2018q\u2019, \u2018san\u2019} \n",
      "answerC": " {\u2018a\u2019, \u2018b\u2019, \u2018c\u2019, \u2018p\u2019, \u2018q\u2019, \u2018san\u2019} \n",
      "answerD": " {\u2018a\u2019, \u2018b\u2019, \u2018c\u2019, [\u2018p\u2019, \u2018q\u2019], \u2018san} ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The code shown first adds the element \u2018san\u2019 to the set z. The set z is then updated and two more elements, namely, \u2018p\u2019 and \u2018q\u2019 are added to it. Hence the output is: {\u2018a\u2019, \u2018b\u2019, \u2018c\u2019, \u2018p\u2019, \u2018q\u2019, \u2018san\u2019} \n "
    },
    {
      "id": "38",
      "question": "What arithmetic operators cannot be used with strings in Python? \n",
      "answerA": " * \n",
      "answerB": " \u2013 \n",
      "answerC": " + \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " + is used to concatenate and * is used to multiply strings. \n "
    },
    {
      "id": "39",
      "question": "What will be the output of the following Python code? \n print ( \"abc. DEF\" . capitalize ( ) ) \n ",
      "answerA": " Abc. def \n",
      "answerB": " abc. def \n",
      "answerC": " Abc. Def \n",
      "answerD": " ABC. DEF ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The first letter of the string is converted to uppercase and the others are converted to lowercase. \n "
    },
    {
      "id": "40",
      "question": "Which of the following statements is used to create an empty set in Python? \n",
      "answerA": " ( ) \n",
      "answerB": " [ ]  \n",
      "answerC": " { } \n",
      "answerD": " set() ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " { } creates a dictionary not a set. Only set() creates an empty set.  \n "
    },
    {
      "id": "41",
      "question": "What will be the value of \u2018result\u2019 in following Python program? \n list1  =   [ 1 , 2 , 3 , 4 ] \nlist2  =   [ 2 , 4 , 5 , 6 ] \nlist3  =   [ 2 , 6 , 7 , 8 ] \nresult  =   list ( ) \nresult. extend ( i  for  i  in  list1  if  i  not   in   ( list2+list3 )   and  i  not   in  result ) \nresult. extend ( i  for  i  in  list2  if  i  not   in   ( list1+list3 )   and  i  not   in  result ) \nresult. extend ( i  for  i  in  list3  if  i  not   in   ( list1+list2 )   and  i  not   in  result ) \n ",
      "answerA": " [1, 3, 5, 7, 8]  \n",
      "answerB": " [1, 7, 8]  \n",
      "answerC": " [1, 2, 4, 7, 8]  \n",
      "answerD": " error ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Here, \u2018result\u2019 is a list which is extending three times. When first time \u2018extend\u2019 function is called for \u2018result\u2019, the inner code generates a generator object, which is further used in \u2018extend\u2019 function. This generator object contains the values which are in \u2018list1\u2019 only (not in \u2018list2\u2019 and \u2018list3\u2019). \nSame is happening in second and third call of \u2018extend\u2019 function in these generator object contains values only in \u2018list2\u2019 and \u2018list3\u2019 respectively. \nSo, \u2018result\u2019 variable will contain elements which are only in one list (not more than 1 list). \n "
    },
    {
      "id": "42",
      "question": "To add a new element to a list we use which Python command? \n",
      "answerA": " list1.addEnd(5) \n",
      "answerB": " list1.addLast(5) \n",
      "answerC": " list1.append(5) \n",
      "answerD": " list1.add(5) ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " We use the function append to add an element to the list.  \n "
    },
    {
      "id": "43",
      "question": "What will be the output of the following Python code? \n print ( '*' ,   \"abcde\" . center ( 6 ) ,   '*' ,  sep = '' ) \n ",
      "answerA": " *  abcde * \n",
      "answerB": " *abcde * \n",
      "answerC": " * abcde* \n",
      "answerD": " * abcde  * ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Padding is done towards the right-hand-side first when the final string is of even length. \n "
    },
    {
      "id": "44",
      "question": "What will be the output of the following Python code? \n >>> list1  =   [ 1 ,  3 ] >>> list2  =  list1 >>> list1 [ 0 ]   =   4 >>> print ( list2 ) \n ",
      "answerA": " [1, 4]  \n",
      "answerB": " [1, 3, 4]  \n",
      "answerC": " [4, 3]  \n",
      "answerD": " [1, 3]  ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Lists should be copied by executing [:] operation. \n "
    },
    {
      "id": "45",
      "question": "Which one of the following is the use of function in python? \n",
      "answerA": " Functions don\u2019t provide better modularity for your application \n",
      "answerB": " you can\u2019t also create your own functions \n",
      "answerC": " Functions are reusable pieces of programs \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Functions are reusable pieces of programs. They allow you to give a name to a block of statements, allowing you to run that block using the specified name anywhere in your program and any number of times.  \n "
    },
    {
      "id": "46",
      "question": "Which of the following Python statements will result in the output: 6? \n A  =   [ [ 1 ,   2 ,   3 ] , \n      [ 4 ,   5 ,   6 ] , \n      [ 7 ,   8 ,   9 ] ] \n ",
      "answerA": " A[2][1]  \n",
      "answerB": " A[1][2]  \n",
      "answerC": " A[3][2]  \n",
      "answerD": " A[2][3]  ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The output that is required is 6, that is, row 2, item "
    },
    {
      "id": "47",
      "question": "What is the maximum possible length of an identifier in Python? \n",
      "answerA": " 79 characters \n",
      "answerB": " 31 characters \n",
      "answerC": " 63 characters \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Identifiers can be of any length. \n "
    },
    {
      "id": "48",
      "question": "What will be the output of the following Python program? \n i  =   0 \n while  i  <   5 :\n     print ( i ) \n    i + =   1 \n     if  i  ==   3 :\n         break \n else :\n     print ( 0 ) \n ",
      "answerA": " error \n",
      "answerB": " 0 1 2 0 \n",
      "answerC": " 0 1 2 \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The else part is not executed if control breaks out of the loop. \n "
    },
    {
      "id": "49",
      "question": "What will be the output of the following Python code? \n x  =   'abcd' \n for  i  in   range ( len ( x ) ) :\n     print ( i ) \n ",
      "answerA": " error \n",
      "answerB": " 1 2 3 4 \n",
      "answerC": " a b c d \n",
      "answerD": " 0 1 2 3 ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " i takes values 0, 1, 2 and "
    },
    {
      "id": "50",
      "question": "What are the two main types of functions in Python? \n",
      "answerA": " System function \n",
      "answerB": " Custom function \n",
      "answerC": " Built-in function & User defined function \n",
      "answerD": " User function ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Built-in functions and user defined ones. The built-in functions are part of the Python language. Examples are: dir(), len() or abs(). The user defined functions are functions created with the def keyword.  \n "
    },
    {
      "id": "51",
      "question": "What will be the output of the following Python program? \n def addItem ( listParam ) :     listParam  + =   [ 1 ] \u00a0 mylist  =   [ 1 ,  2 ,  3 ,  4 ] addItem ( mylist ) print ( len ( mylist ) ) \n ",
      "answerA": " 5 \n",
      "answerB": " 8 \n",
      "answerC": " 2 \n",
      "answerD": " 1 ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " + will append the element to the list. \n "
    },
    {
      "id": "52",
      "question": "Which of the following is a Python tuple? \n",
      "answerA": " {1, 2, 3} \n",
      "answerB": " {} \n",
      "answerC": " [1, 2, 3]  \n",
      "answerD": " (1, 2, 3) ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Tuples are represented with round brackets. \n "
    },
    {
      "id": "53",
      "question": "What will be the output of the following Python code snippet? \n z = set ( 'abc$de' ) \n 'a'   in  z \n ",
      "answerA": " Error \n",
      "answerB": " True \n",
      "answerC": " False \n",
      "answerD": " No output ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above is used to check whether a particular item is a part of a given set or not. Since \u2018a\u2019 is a part of the set z, the output is true. Note that this code would result in an error in the absence of the quotes. \n "
    },
    {
      "id": "54",
      "question": "What will be the output of the following Python expression? \n round ( 4.576 ) \n ",
      "answerA": " 4 \n",
      "answerB": " 4.6 \n",
      "answerC": " 5 \n",
      "answerD": " 4.5 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " This is a built-in function which rounds a number to give precision in decimal digits. In the above case, since the number of decimal places has not been specified, the decimal number is rounded off to a whole number. Hence the output will be "
    },
    {
      "id": "55",
      "question": "Which of the following is a feature of Python DocString? \n",
      "answerA": " In Python all functions should have a docstring \n",
      "answerB": " Docstrings can be accessed by the __doc__ attribute on objects \n",
      "answerC": " It provides a convenient way of associating documentation with Python modules, functions, classes, and methods \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Python has a nifty feature called documentation strings, usually referred to by its shorter name docstrings. DocStrings are an important tool that you should make use of since it helps to document the program better and makes it easier to understand.  \n "
    },
    {
      "id": "56",
      "question": "What will be the output of the following Python code? \n print ( \"Hello {0[0]} and {0[1]}\" . format ( ( 'foo' ,   'bin' ) ) ) \n ",
      "answerA": " Hello (\u2018foo\u2019, \u2018bin\u2019) and (\u2018foo\u2019, \u2018bin\u2019) \n",
      "answerB": " Error \n",
      "answerC": " Hello foo and bin \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The elements of the tuple are accessed by their indices. \n "
    },
    {
      "id": "57",
      "question": "What is output of print(math.pow(3, 2))? \n",
      "answerA": " 9.0 \n",
      "answerB": " None \n",
      "answerC": " 9 \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " math.pow() returns a floating point number. \n "
    },
    {
      "id": "58",
      "question": "Which of the following is the use of id() function in python? \n",
      "answerA": " Every object in Python doesn\u2019t have a unique id \n",
      "answerB": " In Python Id function returns the identity of the object \n",
      "answerC": " None of the mentioned \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Each object in Python has a unique id. The id() function returns the object\u2019s id.  \n "
    },
    {
      "id": "59",
      "question": "What will be the output of the following Python code? \n x  =   [ [ 0 ] ,   [ 1 ] ] \n print ( ( ' ' . join ( list ( map ( str ,  x ) ) ) , ) ) \n ",
      "answerA": " 01 \n",
      "answerB": " [0] [1]  \n",
      "answerC": " (\u201901\u2019) \n",
      "answerD": " (\u2018[0] [1]\u2019,) ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " (element,) is not the same as element. It is a tuple with one item. \n "
    },
    {
      "id": "60",
      "question": "The process of pickling in Python includes ____________ \n",
      "answerA": " conversion of a Python object hierarchy into byte stream \n",
      "answerB": " conversion of a datatable into a list \n",
      "answerC": " conversion of a byte stream into Python object hierarchy \n",
      "answerD": " conversion of a list into a datatable ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Pickling is the process of serializing a Python object, that is, conversion of a Python object hierarchy into a byte stream. The reverse of this process is known as unpickling. \n "
    },
    {
      "id": "61",
      "question": "What will be the output of the following Python code? \n def  foo ( ) :\n     try :\n         return   1 \n     finally :\n         return   2 \nk  =  foo ( ) \n print ( k ) \n ",
      "answerA": " error, there is more than one return statement in a single try-finally block \n",
      "answerB": " 3 \n",
      "answerC": " 2 \n",
      "answerD": " 1 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The finally block is executed even there is a return statement in the try block. \n \n \n \n Chapterwise Multiple Choice Questions on Python \n \n \n \nOur 1000+ MCQs focus on all topics of the Python Programming subject, covering 100+ topics. This will help you to prepare for exams, contests, online tests, quizzes, viva-voce, interviews, and certifications. You can also download the PDF of Python MCQs by applying below.\n \n \n \n Python Variable Names & Operators \n Python Data Types & Numeric Types \n Python Precedence and Associativity \n Python Bitwise & Boolean \n Python Formatting & Decorators \n Python While and For Loops \n Python Strings \n Python Lists \n Python List Comprehension \n Python Tuples \n Python Sets \n Python Dictionary \n Python Built-in Functions \n Python Functions \n Python Argument Passing, Variables and Recursion \n Python Mapping Functions \n Python Modules \n Python Regular Expressions \n Python Files \n Python Classes and Objects \n Python OOPs \n Python Exception Handling \n \n \n \n "
    },
    {
      "id": "62",
      "question": "Is Python case sensitive when dealing with identifiers? \n",
      "answerA": " yes \n",
      "answerB": " no \n",
      "answerC": " machine dependent \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Case is always significant while dealing with identifiers in python. \n \n \n \n \n \n "
    },
    {
      "id": "63",
      "question": "What is the maximum possible length of an identifier? \n",
      "answerA": " 31 characters \n",
      "answerB": " 63 characters \n",
      "answerC": " 79 characters \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Identifiers can be of any length. \n "
    },
    {
      "id": "64",
      "question": "Which of the following is invalid? \n",
      "answerA": " _a = 1 \n",
      "answerB": " __a = 1 \n",
      "answerC": " __str__ = 1 \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " All the statements will execute successfully but at the cost of reduced readability. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "65",
      "question": "Which of the following is an invalid variable? \n",
      "answerA": " my_string_1 \n",
      "answerB": " 1st_string \n",
      "answerC": " foo \n",
      "answerD": " _ ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Variable names should not start with a number. \n "
    },
    {
      "id": "66",
      "question": "Why are local variable names beginning with an underscore discouraged? \n",
      "answerA": " they are used to indicate a private variables of a class \n",
      "answerB": " they confuse the interpreter \n",
      "answerC": " they are used to indicate global variables \n",
      "answerD": " they slow down execution ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " As Python has no concept of private variables, leading underscores are used to indicate variables that must not be accessed from outside the class. \n \n \n    \nSubscribe Now:  Python Newsletter  |  Important Subjects Newsletters \n \n \n \n \n \n \n \n "
    },
    {
      "id": "67",
      "question": "Which of the following is not a keyword? \n",
      "answerA": " eval \n",
      "answerB": " assert \n",
      "answerC": " nonlocal \n",
      "answerD": " pass ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " eval can be used as a variable. \n "
    },
    {
      "id": "68",
      "question": "All keywords in Python are in _________ \n",
      "answerA": " lower case \n",
      "answerB": " UPPER CASE \n",
      "answerC": " Capitalized \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": "none explanation"
    },
    {
      "id": "69",
      "question": "Which of the following is true for variable names in Python? \n",
      "answerA": " unlimited length \n",
      "answerB": " all private members must have leading and trailing underscores \n",
      "answerC": " underscore and ampersand are the only two special characters allowed \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Variable names can be of any length. \n "
    },
    {
      "id": "70",
      "question": "Which of the following is an invalid statement? \n",
      "answerA": " abc = 1,000,000 \n",
      "answerB": " a b c = 1000 2000 3000 \n",
      "answerC": " a,b,c = 1000, 2000, 3000 \n",
      "answerD": " a_b_c = 1,000,000 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Spaces are not allowed in variable names. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "71",
      "question": "Which of the following cannot be a variable? \n",
      "answerA": " __init__ \n",
      "answerB": " in \n",
      "answerC": " it \n",
      "answerD": " on ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " in is a keyword. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00bb  Next - Python Questions and Answers \u2013 Basic Operators   Related Posts: Check  Information Technology Books \n Apply for  Programming Internship \n Practice  Programming MCQs \n Apply for  Python Internship \n Check  Python Books \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n C Programming Questions and Answers \u2013 Variable Names \u2013 1  \n Python Program to Check String is Palindrome using Stack  \n C Programming Questions and Answers \u2013 Variable Names \u2013 2  \n Python Program to Swap Two Numbers without using Third Variable  \n Python Program to Implement Stack  \n Python MCQ \u2013 String \u2013 8  \n Python Program to Reverse a Stack using Recursion  \n Python Program to Calculate the Length of a String Without using Library Functions  \n Python Questions and Answers \u2013 Python Modules  \n Python MCQ \u2013 String \u2013 11  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python MCQ Questions Linked List Programs in Python Searching and Sorting in Python Python Programs on Trees Python Programs on Graphs Popular Pages: Python Programming Examples C# String Programs String Programs in C++ String Programs in C Visual Basic MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python MCQ Questions Linked List Programs in Python Searching and Sorting in Python Python Programs on Trees Python Programs on Graphs \n   \n \n \n \n \n \n \n   Popular Pages Python Programming Examples C# String Programs String Programs in C++ String Programs in C Visual Basic MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.375 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 07:09:05  \n  Compression = gzip "
    },
    {
      "id": "72",
      "question": "Which is the correct operator for power(x y )? \n",
      "answerA": " X^y \n",
      "answerB": " X**y \n",
      "answerC": " X^^y \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " In python, power operator is x**y i.e. 2**3="
    },
    {
      "id": "73",
      "question": "Which one of these is floor division? \n",
      "answerA": " / \n",
      "answerB": " // \n",
      "answerC": " % \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " When both of the operands are integer then python chops out the fraction part and gives you the round off value, to get the accurate answer use floor division. This is floor division. For ex, 5/2 = 2.5 but both of the operands are integer so answer of this expression in python is "
    },
    {
      "id": "74",
      "question": "What is the order of precedence in python? \ni) Parentheses \nii) Exponential \niii) Multiplication \niv) Division \nv) Addition \nvi) Subtraction \n",
      "answerA": " i,ii,iii,iv,v,vi \n",
      "answerB": " ii,i,iii,iv,v,vi \n",
      "answerC": " ii,i,iv,iii,v,vi \n",
      "answerD": " i,ii,iii,iv,vi,v ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " For order of precedence, just remember this PEMDAS (similar to BODMAS). \n \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "75",
      "question": "What is the answer to this expression, 22 % 3 is? \n",
      "answerA": " 7 \n",
      "answerB": " 1 \n",
      "answerC": " 0 \n",
      "answerD": " 5 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Modulus operator gives the remainder. So, 22%3 gives the remainder, that is, "
    },
    {
      "id": "76",
      "question": "Mathematical operations can be performed on a string. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " You can\u2019t perform mathematical operation on string even if the string is in the form: \u20181234\u2026\u2019. \n \n \n \n    \nSubscribe Now:  Python Newsletter  |  Important Subjects Newsletters \n \n \n \n \n \n \n \n "
    },
    {
      "id": "77",
      "question": "Operators with the same precedence are evaluated in which manner? \n",
      "answerA": " Left to Right \n",
      "answerB": " Right to Left \n",
      "answerC": " Can\u2019t say \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": "none explanation"
    },
    {
      "id": "78",
      "question": "What is the output of this expression, 3*1**3? \n",
      "answerA": " 27 \n",
      "answerB": " 9 \n",
      "answerC": " 3 \n",
      "answerD": " 1 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " First this expression will solve 1**3 because exponential has higher precedence than multiplication, so 1**3 = 1 and 3*1 = "
    },
    {
      "id": "79",
      "question": "Which one of the following has the same precedence level? \n",
      "answerA": " Addition and Subtraction \n",
      "answerB": " Multiplication, Division and Addition \n",
      "answerC": " Multiplication, Division, Addition and Subtraction \n",
      "answerD": " Addition and Multiplication ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " \u201cAddition and Subtraction\u201d are at the same precedence level. Similarly, \u201cMultiplication and Division\u201d are at the same precedence level. However, Multiplication and Division operators are at a higher precedence level than Addition and Subtraction operators. \n \n "
    },
    {
      "id": "80",
      "question": "The expression Int(x) implies that the variable x is converted to integer. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Int(x) converts the datatype of the variable to integer and is the example of explicit data conversion. \n \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "81",
      "question": "Which one of the following has the highest precedence in the expression? \n",
      "answerA": " Exponential \n",
      "answerB": " Addition \n",
      "answerC": " Multiplication \n",
      "answerD": " Parentheses ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Just remember: PEMDAS, that is, Parenthesis, Exponentiation, Division, Multiplication, Addition, Subtraction. Note that the precedence order of Division and Multiplication is the same. Likewise, the order of Addition and Subtraction is also the same. \n \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 Variable Names \u00bb  Next - Python Questions and Answers \u2013 Core Data types   Related Posts: Check  Information Technology Books \n Apply for  Programming Internship \n Practice  Programming MCQs \n Check  Python Books \n Apply for  Python Internship \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 Precedence and Associativity \u2013 1  \n Arithmetic Operators in C  \n Visual Basic Questions and Answers \u2013 Writing Arithmetic Expressions  \n Java Questions & Answers \u2013 Assignment Operators and Operator Precedence  \n Python Questions and Answers \u2013 Precedence and Associativity \u2013 2  \n Assignment Operators in C with Examples  \n Python Multiple Choice Questions \u2013 Math  \n Python Program to Create a Class which Performs Basic Calculator Operations  \n Python Questions and Answers \u2013 Decorators  \n Python Questions and Answers \u2013 Operator Overloading  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Bitwise Operators in C Python MCQ Questions Searching and Sorting in Python Python Programs on Trees Linked List Programs in Python Popular Pages: Python Programs on Graphs Python Programming Examples Visual Basic MCQ Questions Basic Civil Engineering MCQ Questions C Programming Interview Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Bitwise Operators in C Python MCQ Questions Searching and Sorting in Python Python Programs on Trees Linked List Programs in Python \n   \n \n \n \n \n \n \n   Popular Pages Python Programs on Graphs Python Programming Examples Visual Basic MCQ Questions Basic Civil Engineering MCQ Questions C Programming Interview Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.438 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 18:48:29  \n  Compression = gzip "
    },
    {
      "id": "82",
      "question": "Which of these in not a core data type? \n",
      "answerA": " Lists \n",
      "answerB": " Dictionary \n",
      "answerC": " Tuples \n",
      "answerD": " Class ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Class is a user defined data type. \n \n \n \n \n \n "
    },
    {
      "id": "83",
      "question": "Given a function that does not return any value, What value is thrown by default when executed in shell. \n",
      "answerA": " int \n",
      "answerB": " bool \n",
      "answerC": " void \n",
      "answerD": " None ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": "none explanation"
    },
    {
      "id": "84",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n >>> str = \"hello\" >>> str [ : 2 ] >>> \n ",
      "answerA": " he \n",
      "answerB": " lo \n",
      "answerC": " olleh \n",
      "answerD": " hello ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " We are printing only the 1st two bytes of string and hence the answer is \u201che\u201d.  \n \n \n    \nNote: Join free Sanfoundry classes at  Telegram  or  Youtube \n \n \n \n \n \n \n \n "
    },
    {
      "id": "85",
      "question": "Which of the following will run without errors? \n",
      "answerA": " round(45.8) \n",
      "answerB": " round(6352.898,2,5) \n",
      "answerC": " round() \n",
      "answerD": " round(7463.123,2,1) ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Execute help(round) in the shell to get details of the parameters that are passed into the round function. \n "
    },
    {
      "id": "86",
      "question": "What is the return type of function id? \n",
      "answerA": " int \n",
      "answerB": " float \n",
      "answerC": " bool \n",
      "answerD": " dict ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Execute help(id) to find out details in python shell.id returns a integer value that is unique. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "87",
      "question": "In python we do not specify types, it is directly interpreted by the compiler, so consider the following operation to be performed. \n >>> x  =   13   ?   2 \n objective is to make sure x has a integer value, select all that apply (python 3.xx) \n",
      "answerA": " x = 13 // 2 \n",
      "answerB": " x = int(13 / 2) \n",
      "answerC": " x = 13 % 2 \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " // is integer operation in python 3.0 and int(..) is a type cast operator. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "88",
      "question": "What error occurs when you execute the following Python code snippet? \n apple = mango \n ",
      "answerA": " SyntaxError \n",
      "answerB": " NameError \n",
      "answerC": " ValueError \n",
      "answerD": " TypeError ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Mango is not defined hence name error. \n "
    },
    {
      "id": "89",
      "question": "What will be the output of the following Python code snippet? \n def example ( a ) :     a  =  a  +   '2'      a  =  a * 2      return  a >>> example ( \"hello\" ) \n ",
      "answerA": " indentation Error \n",
      "answerB": " cannot perform mathematical operation on strings \n",
      "answerC": " hello2 \n",
      "answerD": " hello2hello2 ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Python codes have to be indented properly. \n "
    },
    {
      "id": "90",
      "question": "What data type is the object below? \n L = [1, 23, 'hello', 1] \n ",
      "answerA": " list \n",
      "answerB": " dictionary \n",
      "answerC": " array \n",
      "answerD": " tuple ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " List data type can store any values within it. \n "
    },
    {
      "id": "91",
      "question": "In order to store values in terms of key and value we use what core data type. \n",
      "answerA": " list \n",
      "answerB": " tuple \n",
      "answerC": " class \n",
      "answerD": " dictionary ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Dictionary stores values in terms of keys and values. \n "
    },
    {
      "id": "92",
      "question": "Which of the following results in a SyntaxError? \n",
      "answerA": " \u2018\u201dOnce upon a time\u2026\u201d, she said.\u2019 \n",
      "answerB": " \u201cHe said, \u2018Yes!'\u201d \n",
      "answerC": " \u20183\\\u2019 \n",
      "answerD": " \u201d\u2019That\u2019s okay\u201d\u2019 ",
      "correctAnswer": " c \n",
      "trackName": "Computer Science",
      "explanation": " Carefully look at the colons. \n "
    },
    {
      "id": "93",
      "question": "The following is displayed by a print function call. Select all of the function calls that result in this output. \n tom dick harry \n ",
      "answerA": "  \n print('''tom\r\n\\ndick\r\n\\nharry''') \n ",
      "answerB": " print(\u201d\u2019tomdickharry\u201d\u2019) \n",
      "answerC": " print(\u2018tom\\ndick\\nharry\u2019) \n",
      "answerD": "  ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The \\n adds a new line. \n\u00a0 \u00a0 \n "
    },
    {
      "id": "94",
      "question": "What is the average value of the following Python code snippet? \n >>> grade1  =   80 >>> grade2  =   90 >>> average  =   ( grade1  +  grade2 )   /   2 \n ",
      "answerA": " 85.0 \n",
      "answerB": " 85.1 \n",
      "answerC": " 95.0 \n",
      "answerD": " 95.1 ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Cause a decimal value of 0 to appear as output. \n "
    },
    {
      "id": "95",
      "question": "Select all options that print. \n hello-how-are-you \n ",
      "answerA": " print(\u2018hello\u2019, \u2018how\u2019, \u2018are\u2019, \u2018you\u2019) \n",
      "answerB": " print(\u2018hello\u2019, \u2018how\u2019, \u2018are\u2019, \u2018you\u2019 + \u2018-\u2018 * 4) \n",
      "answerC": " print(\u2018hello-\u2018 + \u2018how-are-you\u2019) \n",
      "answerD": " print(\u2018hello\u2019 + \u2018-\u2018 + \u2018how\u2019 + \u2018-\u2018 + \u2018are\u2019 + \u2018you\u2019) ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Execute in the shell. \n "
    },
    {
      "id": "96",
      "question": "What is the return value of trunc()? \n",
      "answerA": " int \n",
      "answerB": " bool \n",
      "answerC": " float \n",
      "answerD": " None ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Execute help(math.trunc) to get details. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 Basic Operators \u00bb  Next - Python Questions and Answers \u2013 Numeric Types   Related Posts: Check  Information Technology Books \n Check  Python Books \n Apply for  Python Internship \n Apply for  Programming Internship \n Practice  Programming MCQs \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Program to Find the Sum of All the Items in a Dictionary  \n Python Program to Map Two Lists into a Dictionary  \n Python Questions and Answers \u2013 Dictionary \u2013 2  \n Python Questions and Answers \u2013 Function \u2013 4  \n Python Questions and Answers \u2013 Dictionary \u2013 4  \n Python Program to Concatenate Two Dictionaries  \n Python Program to Multiply All the Items in a Dictionary  \n Python Program to Add a Key-Value Pair to the Dictionary  \n Python Program to Create Dictionary that Contains Number  \n Python Questions and Answers \u2013 Dictionary \u2013 3  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python Programs on Trees Searching and Sorting in Python Python Programs on Graphs Linked List Programs in Python Python MCQ Questions Popular Pages: Python Programming Examples Data Structures in Java Data Science MCQ Questions Data Structures in C Data Structures in C++    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Linked List Programs in Python Python Programs on Trees Searching and Sorting in Python Python Programs on Graphs Python MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Python Programming Examples Data Structures in Java Data Science MCQ Questions Data Structures in C Data Structures in C++ \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.588 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 22:59:35  \n  Compression = gzip "
    },
    {
      "id": "97",
      "question": "What is the output of print 0.1 + 0.2 == 0.3? \n",
      "answerA": " True \n",
      "answerB": " False \nc) Machine dependent \nd) Error ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Neither of 0.1, 0.2 and 0.3 can be represented accurately in binary. The round off errors from 0.1 and 0.2 accumulate and hence there is a difference of 5.5511e-17 between (0.1 + 0.2) and 0."
    },
    {
      "id": "98",
      "question": "Which of the following is not a complex number? \n",
      "answerA": " k = 2 + 3j \n",
      "answerB": " k = complex(2, 3) \n",
      "answerC": " k = 2 + 3l \n",
      "answerD": " k = 2 + 3J ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " l (or L) stands for long. \n "
    },
    {
      "id": "99",
      "question": "What is the type of inf? \n",
      "answerA": " Boolean \n",
      "answerB": " Integer \n",
      "answerC": " Float \n",
      "answerD": " Complex ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Infinity is a special case of floating point numbers. It can be obtained by float(\u2018inf\u2019). \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "100",
      "question": "What does ~4 evaluate to? \n",
      "answerA": " -5 \n",
      "answerB": " -4 \n",
      "answerC": " -3 \n",
      "answerD": " +3 ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " ~x is equivalent to -(x+1). \n "
    },
    {
      "id": "101",
      "question": "What does ~~~~~~5 evaluate to? \n",
      "answerA": " +5 \n",
      "answerB": " -11 \n",
      "answerC": " +11 \n",
      "answerD": " -5 ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " ~x is equivalent to -(x+1). \n~~x = \u2013 (-(x+1) + 1) = (x+1) \u2013 1 = x \n~~x is equivalent to x \nExtrapolating further ~~~~~~x would be same as x in the final result. \nIn the question, x value is given as 5 and \u201c~\u201d is repeated 6 times. So, the correct answer for \u201c~~~~~~5\u201d is "
    },
    {
      "id": "102",
      "question": "Which of the following is incorrect? \n",
      "answerA": " x = 30963 \n",
      "answerB": " x = 0x4f5 \n",
      "answerC": " x = 19023 \n",
      "answerD": " x = 03964 ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Numbers starting with a 0 are octal numbers but 9 isn\u2019t allowed in octal numbers. \n "
    },
    {
      "id": "103",
      "question": "What is the result of cmp(3, 1)? \n",
      "answerA": " 1 \n",
      "answerB": " 0 \n",
      "answerC": " True \n",
      "answerD": " False ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " cmp(x, y) returns 1 if x > y, 0 if x == y and -1 if x < y. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "104",
      "question": "Which of the following is incorrect? \n",
      "answerA": " float(\u2018inf\u2019) \n",
      "answerB": " float(\u2018nan\u2019) \n",
      "answerC": " float(\u201956\u2019+\u201978\u2019) \n",
      "answerD": " float(\u201912+34\u2032) ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " \u2018+\u2019 cannot be converted to a float. \n "
    },
    {
      "id": "105",
      "question": "What is the result of round(0.5) \u2013 round(-0.5)? \n",
      "answerA": " 1.0 \n",
      "answerB": " 2.0 \n",
      "answerC": " 0.0 \n",
      "answerD": " Value depends on Python version ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The behavior of the  round()  function is different in Python 2 and Python "
    },
    {
      "id": "106",
      "question": "What does 3 ^ 4 evaluate to? \n",
      "answerA": " 81 \n",
      "answerB": " 12 \n",
      "answerC": " 0.75 \n",
      "answerD": " 7 ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " ^ is the Binary XOR operator. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 Core Data types \u00bb  Next - Python Questions and Answers \u2013 Precedence and Associativity \u2013 1   Related Posts: Apply for  Programming Internship \n Practice  Programming MCQs \n Check  Information Technology Books \n Apply for  Python Internship \n Check  Python Books \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 Core Data types  \n Python Multiple Choice Questions \u2013 Built-in Functions  \n Python Question and Answers \u2013 Built-in Functions \u2013 2  \n Python Question and Answers \u2013 Built-in Functions \u2013 3  \n Python Questions and Answers \u2013 Global vs Local Variables \u2013 1  \n Python Questions and Answers \u2013 Function \u2013 2  \n Python Questions and Answers \u2013 Lists \u2013 6  \n Python Questions and Answers \u2013 Sets \u2013 4  \n Python Questions and Answers \u2013 List Comprehension \u2013 1  \n Python Questions and Answers \u2013 Boolean  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python Programs on Trees Python Programs on Graphs Linked List Programs in Python Searching and Sorting in Python Python MCQ Questions Popular Pages: Python Programming Examples C++ Algorithm Library Bitwise Operators in C Programming MCQ Questions Books on Engineering, Science and Technology    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python Programs on Trees Searching and Sorting in Python Linked List Programs in Python Python Programs on Graphs Python MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Python Programming Examples C++ Algorithm Library Bitwise Operators in C Programming MCQ Questions Books on Engineering, Science and Technology \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.483 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-02 23:56:13  \n  Compression = gzip "
    },
    {
      "id": "107",
      "question": "The value of the expressions 4/(3*(2-1)) and 4/3*(2-1) is the same. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Although the presence of parenthesis does affect the order of precedence, in the case shown above, it is not making a difference. The result of both of these expressions is 1."
    },
    {
      "id": "108",
      "question": "What will be the value of the following Python expression? \n 4  +  3  %  5 \n ",
      "answerA": " 4 \n",
      "answerB": " 7 \n",
      "answerC": " 2 \n",
      "answerD": " 0 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The order of precedence is: %, +. Hence the expression above, on simplification results in   4 + 3 = "
    },
    {
      "id": "109",
      "question": "\n \n \n    \nNote: Join free Sanfoundry classes at  Telegram  or  Youtube \n \n \n \n \n \n \n \n A % B // A \n ",
      "answerA": " 0.0 \n",
      "answerB": " 0 \n",
      "answerC": " 1.0 \n",
      "answerD": " 1 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The above expression is evaluated as 16%15//16, which is equal to 1//16, which results in "
    },
    {
      "id": "110",
      "question": "Which of the following operators has its associativity from right to left? \n",
      "answerA": " + \n",
      "answerB": " // \n",
      "answerC": " % \n",
      "answerD": " ** ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " All of the operators shown above have associativity from left to right, except exponentiation operator (**) which has its associativity from right to left. \n "
    },
    {
      "id": "111",
      "question": " What will be the value of x in the following Python expression? \n \n advertisement \n \n \n \n \n x  =   int ( 43.55 + 2 / 2 ) \n ",
      "answerA": " 43 \n",
      "answerB": " 44 \n",
      "answerC": " 22 \n",
      "answerD": " 23 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The expression shown above is an example of explicit conversion. It is evaluated as int(43.55+1) = int(44.55) = "
    },
    {
      "id": "112",
      "question": "What is the value of the following expression? \n 2 + 4.00 ,   2 ** 4.0 \n ",
      "answerA": " (6.0, 16.0) \n",
      "answerB": " (6.00, 16.00) \n",
      "answerC": " (6, 16) \n",
      "answerD": " (6.00, 16.0) ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The result of the expression shown above is (6.0, 16.0). This is because the result is automatically rounded off to one decimal place.   \n "
    },
    {
      "id": "113",
      "question": "Which of the following is the truncation division operator? \n",
      "answerA": " / \n",
      "answerB": " % \n",
      "answerC": " // \n",
      "answerD": " | ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " // is the operator for truncation division. It is called so because it returns only the integer part of the quotient, truncating the decimal part. For example: 20//3 = "
    },
    {
      "id": "114",
      "question": "What are the values of the following Python expressions? \n   2 ** ( 3 ** 2 ) \n  ( 2 ** 3 ) ** 2 \n  2 ** 3 ** 2 \n ",
      "answerA": " 64, 512, 64 \n",
      "answerB": " 64, 64, 64 \n",
      "answerC": " 512, 512, 512 \n",
      "answerD": " 512, 64, 512 ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Expression 1 is evaluated as 2**9, which is equal to "
    },
    {
      "id": "115",
      "question": "What is the value of the following expression? \n float ( 22 // 3 + 3 / 3 ) \n ",
      "answerA": " 8 \n",
      "answerB": " 8.0 \n",
      "answerC": " 8.3 \n",
      "answerD": " 8.33 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The expression shown above is evaluated as: float( 7+1) = float(8) = 8."
    },
    {
      "id": "116",
      "question": "What will be the output of the following Python code snippet if x=1? \n \n \n \n \n \n x << 2 \n ",
      "answerA": " 8 \n",
      "answerB": " 1 \n",
      "answerC": " 2 \n",
      "answerD": " 4 ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The binary form of 1 is "
    },
    {
      "id": "117",
      "question": "What will be the output of the following Python expression? \n bin ( 29 ) \n ",
      "answerA": " \u20180b10111\u2019 \n",
      "answerB": " \u20180b11101\u2019 \n",
      "answerC": " \u20180b11111\u2019 \n",
      "answerD": " \u20180b11011\u2019 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The binary form of the number 29 is "
    },
    {
      "id": "118",
      "question": "What will be the value of x in the following Python expression, if the result of that expression is 2? \n \n advertisement \n \n \n \n \n x >> 2 \n ",
      "answerA": " 8 \n",
      "answerB": " 4 \n",
      "answerC": " 2 \n",
      "answerD": " 1 ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " When the value of x is equal to 8 (1000), then x>>2 (bitwise right shift) yields the value 0010, which is equal to "
    },
    {
      "id": "119",
      "question": "What will be the output of the following Python expression? \n int ( 1011 ) ? \n ",
      "answerA": " 1011 \n",
      "answerB": " 11 \n",
      "answerC": " 13 \n",
      "answerD": " 1101 ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The result of the expression shown will be "
    },
    {
      "id": "120",
      "question": " To find the decimal value of 1111, that is 15, we can use the function: \n",
      "answerA": " int(1111,10) \n",
      "answerB": " int(\u20181111\u2019,10) \n",
      "answerC": " int(1111,2) \n",
      "answerD": " int(\u20181111\u2019,2) ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The expression int(\u20181111\u2019,2) gives the result "
    },
    {
      "id": "121",
      "question": "What will be the output of the following Python expression if x=15 and y=12? \n x & y \n ",
      "answerA": " b1101 \n",
      "answerB": " 0b1101 \n",
      "answerC": " 12 \n",
      "answerD": " 1101 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The symbol \u2018&\u2019 represents bitwise AND. This gives 1 if both the bits are equal to 1, else it gives "
    },
    {
      "id": "122",
      "question": "Which of the following expressions results in an error? \n",
      "answerA": " int(1011) \n",
      "answerB": " int(\u20181011\u2019,23) \n",
      "answerC": " int(1011,2) \n",
      "answerD": " int(\u20181011\u2019) ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The expression int(1011,2) results in an error. Had we written this expression as int(\u20181011\u2019,2), then there would not be an error. \n "
    },
    {
      "id": "123",
      "question": " Which of the following represents the bitwise XOR operator? \n",
      "answerA": " & \n",
      "answerB": " ^ \n",
      "answerC": " | \n",
      "answerD": " ! ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The ^ operator represent bitwise XOR operation. &: bitwise AND, | : bitwise OR and ! represents bitwise NOT. \n "
    },
    {
      "id": "124",
      "question": "What is the value of the following Python expression? \n bin ( 0x8 ) \n ",
      "answerA": " \u20180bx1000\u2019 \n",
      "answerB": " 8 \n",
      "answerC": " 1000 \n",
      "answerD": " \u20180b1000\u2019 ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The prefix 0x specifies that the value is hexadecimal in nature. When we convert this hexadecimal value to binary form, we get the result as: \u20180b1000\u2019. \n "
    },
    {
      "id": "125",
      "question": "What will be the output of the following Python expression? \n 0x35  |  0x75 \n ",
      "answerA": " 115 \n",
      "answerB": " 116 \n",
      "answerC": " 117 \n",
      "answerD": " 118 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The binary value of 0x35 is 110101 and that of 0x75 is "
    },
    {
      "id": "126",
      "question": "What will be the output of the following Python code? \n \n \n \n \n \n def  mk ( x ) :\n     def  mk1 ( ) :\n         print ( \"Decorated\" ) \n        x ( ) \n     return  mk1\n def  mk2 ( ) :\n     print ( \"Ordinary\" ) \np  =  mk ( mk2 ) \np ( ) \n ",
      "answerA": "  \n     Decorated\r\n    Decorated \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n ",
      "answerB": "  \n     Ordinary\r\n    Ordinary \n ",
      "answerC": "  \n     Ordinary\r\n    Decorated \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n ",
      "answerD": "  ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above first prints the word \u201cDecorated\u201d and then \u201cordinary\u201d. Hence the output of this code is: \nDecorated \nOrdinary. \n\u00a0 \u00a0 \n "
    },
    {
      "id": "127",
      "question": "In the following Python code, which function is the decorator? \n \n advertisement \n \n \n \n \n def  mk ( x ) :\n     def  mk1 ( ) :\n         print ( \"Decorated\" ) \n        x ( ) \n     return  mk1\n def  mk2 ( ) :\n     print ( \"Ordinary\" ) \np  =  mk ( mk2 ) \np ( ) \n ",
      "answerA": " p() \n",
      "answerB": " mk() \n",
      "answerC": " mk1() \n",
      "answerD": " mk2() ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " In the code shown above, the function mk() is the decorator. The function which is getting decorated is mk2(). The return function is given the name p(). \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "128",
      "question": "The ______ symbol along with the name of the decorator function can be placed above the definition of the function to be decorated works as an alternate way for decorating a function. \n",
      "answerA": " # \n",
      "answerB": " $ \n",
      "answerC": " @ \n",
      "answerD": " & ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The @ symbol along with the name of the decorator function can be placed above the definition of the function to be decorated works as an alternate way for decorating a function. \n "
    },
    {
      "id": "129",
      "question": "What will be the output of the following Python code? \n def  ordi ( ) :\n\t print ( \"Ordinary\" ) \nordi\nordi ( ) \n ",
      "answerA": "  \n     Address\r\n    Ordinary \n ",
      "answerB": "  \n     Error\r\n    Address \n ",
      "answerC": "  \n     Ordinary\r\n    Ordinary \n ",
      "answerD": "  ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above returns the address on the function ordi first, after which the word \u201cOrdinary\u201d is printed. Hence the output of this code is: \nAddress \nOrdinary. \n\u00a0 \u00a0 \n "
    },
    {
      "id": "130",
      "question": " The two snippets of the following Python codes are equivalent. \n CODE  1 \n   @ f\n def  f1 ( ) :\n         print ( \u201cHello\u201d ) \nCODE  2 \n   def  f1 ( ) :\n          print ( \u201cHello\u201d ) \nf1  =  f ( f1 ) \n ",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The @ symbol can be used as an alternate way to specify a function that needs to be decorated. The output of the codes shown above is the same. Hence they are equivalent. Therefore this statement is true. \n "
    },
    {
      "id": "131",
      "question": "What will be the output of the following Python function? \n def  f ( p ,  q ) :\n\t return  p%q\nf ( 0 ,   2 ) \nf ( 2 ,   0 ) \n ",
      "answerA": "  \n     0\r\n    0 \n ",
      "answerB": "  \n     Zero Division Error\r\n    Zero Division Error \n ",
      "answerC": "  \n     0\r\n    Zero Division Error \n ",
      "answerD": "  ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The output of f(0, 2) is 0, since o%2 is equal to "
    },
    {
      "id": "132",
      "question": "What will be the output of the following Python code? \n def  f ( x ) :\n     def  f1 ( a ,  b ) :\n         print ( \"hello\" ) \n         if  b == 0 :\n             print ( \"NO\" ) \n             return \n         return  f ( a ,  b ) \n     return  f1\n @ f\n def  f ( a ,  b ) :\n     return  a%b\nf ( 4 , 0 ) \n ",
      "answerA": "  \n     hello\r\n    NO \n ",
      "answerB": "  \n     hello\r\n    Zero Division Error \n ",
      "answerC": " NO \n",
      "answerD": " hello ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " In the code shown above, we have used a decorator in order to avoid the Zero Division Error. Hence the output of this code is: \n     hello\r\n    NO \n \n "
    },
    {
      "id": "133",
      "question": "What will be the output of the following Python code? \n def  f ( x ) :\n     def  f1 ( *args ,  **kwargs ) :\n         print ( \"*\" *  5 ) \n        x ( *args ,  **kwargs ) \n         print ( \"*\" *  5 ) \n     return  f1\n def  a ( x ) :\n     def  f1 ( *args ,  **kwargs ) :\n         print ( \"%\" *  5 ) \n        x ( *args ,  **kwargs ) \n         print ( \"%\" *  5 ) \n     return  f1\n @ f\n @ a\n def  p ( m ) :\n     print ( m ) \np ( \"hello\" ) \n ",
      "answerA": "  \n     *****\r\n    %%%%%\r\n    hello\r\n    %%%%%\r\n    ***** \n ",
      "answerB": " Error \n",
      "answerC": " *****%%%%%hello%%%%%***** \n",
      "answerD": " hello ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above uses multiple decorators. The output of this code is: \n \r\n    *****\r\n    %%%%%\r\n    hello\r\n    %%%%%\r\n    ***** \n \n "
    },
    {
      "id": "134",
      "question": "The following python code can work with ____ parameters. \n def  f ( x ) :\n     def  f1 ( *args ,  **kwargs ) :\n            print ( \"Sanfoundry\" ) \n            return  x ( *args ,  **kwargs ) \n     return  f1 \n ",
      "answerA": " 2 \n",
      "answerB": " 1 \n",
      "answerC": " any number of \n",
      "answerD": " 0 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above shows a general decorator which can work with any number of arguments. \n "
    },
    {
      "id": "135",
      "question": "What will be the output of the following Python code? \n def  f ( x ) :\n     def  f1 ( *args ,  **kwargs ) :\n         print ( \"*\" ,   5 ) \n        x ( *args ,  **kwargs ) \n         print ( \"*\" ,   5 ) \n     return  f1\n @ f\n def  p ( m ) :\n    p ( m ) \n print ( \"hello\" ) \n ",
      "answerA": "  \n     *****\r\n    hello \n ",
      "answerB": "  \n     *****\r\n    *****\r\n    hello \n ",
      "answerC": " ***** \n",
      "answerD": " hello ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " In the code shown above, we have not passed any parameter to the function p. Hence the output of this code is: hello. \n "
    },
    {
      "id": "136",
      "question": "A function with parameters cannot be decorated. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Any function, irrespective of whether or not it has parameters can be decorated. Hence the statement is false. \n "
    },
    {
      "id": "137",
      "question": "Identify the decorator in the snippet of code shown below. \n def  sf ( ) :\n      pass \nsf  =  mk ( sf ) \n @ f\n def  sf ( ) :\n      return \n ",
      "answerA": " @f \n",
      "answerB": " f \n",
      "answerC": " sf() \n",
      "answerD": " mk ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " In the code shown above, @sf is not a decorator but only a decorator line. The \u2018@\u2019 symbol represents the application of a decorator. The decorator here is the function mk. \n "
    },
    {
      "id": "214",
      "question": "What will be the output of the following Python code snippet? \n for  i  in   'abcd' [ ::- 1 ] :\n     print   ( i ) \n ",
      "answerA": " a b c d \n",
      "answerB": " d c b a \n",
      "answerC": " error \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " [::-1] reverses the string. \n "
    },
    {
      "id": "138",
      "question": "What will be the output of the following Python code? \n class  A:\n     @ staticmethod \n     def  a ( x ) :\n         print ( x ) \nA. a ( 100 ) \n ",
      "answerA": " Error \n",
      "answerB": " Warning \n",
      "answerC": " 100 \n",
      "answerD": " No output ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above demonstrates rebinding using a static method. This can be done with or without a decorator. The output of this code will be "
    },
    {
      "id": "139",
      "question": "What will be the output of the following Python code? \n def  d ( f ) :\n     def  n ( *args ) :\n         return   '$'  +  str ( f ( *args ) ) \n     return  n\n @ d\n def  p ( a ,  t ) :\n     return  a + a*t \n print ( p ( 100 , 0 ) ) \n ",
      "answerA": " 100 \n",
      "answerB": " $100 \n",
      "answerC": " $0 \n",
      "answerD": " 0 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " In the code shown above, the decorator helps us to prefix the dollar sign along with the value. Since the  second argument is zero, the output of the code is: $"
    },
    {
      "id": "140",
      "question": "What will be the output of the following Python code? \n def  c ( f ) :\n     def  inner ( *args ,  **kargs ) :\n        inner. co  + =   1 \n         return  f ( *args ,  **kargs ) \n    inner. co   =   0 \n     return  inner\n @ c\n def  fnc ( ) :\n     pass \n if  __name__  ==   '__main__' :\n    fnc ( ) \n    fnc ( ) \n    fnc ( ) \n     print ( fnc. co ) \n ",
      "answerA": " 4 \n",
      "answerB": " 3 \n",
      "answerC": " 0 \n",
      "answerD": " 1 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above returns the number of times a given function has been called. Hence the output of this code is: 3 \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 Advanced Formatting Tools \u00bb  Next - Python Multiple Choice Questions \u2013 While and For Loops   Related Posts: Practice  Programming MCQs \n Check  Information Technology Books \n Apply for  Programming Internship \n Apply for  Python Internship \n Check  Python Books \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Program to Implement Stack  \n Python Program to Reverse a Stack using Recursion  \n Python Program to Implement Stack using Linked List  \n Python Program to Implement Stack using Queue  \n Python Program to Implement Stack using Two Queues  \n Python Questions and Answers \u2013 Global vs Local Variables \u2013 1  \n Python Questions and Answers \u2013 Lists \u2013 6  \n Python MCQ \u2013 String \u2013 8  \n Python Questions and Answers \u2013 Function \u2013 4  \n Python Questions and Answers \u2013 Mapping Functions \u2013 2  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python Programs on Trees Linked List Programs in Python Python Programs on Graphs Searching and Sorting in Python Python MCQ Questions Popular Pages: Python Programming Examples C++ Algorithm Library C# Programs on Functions Event Handling in Java with Examples C# String Programs    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python Programs on Trees Linked List Programs in Python Python Programs on Graphs Searching and Sorting in Python Python MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Python Programming Examples C++ Algorithm Library C# Programs on Functions Event Handling in Java with Examples C# String Programs \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.497 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-02 22:10:54  \n  Compression = gzip "
    },
    {
      "id": "141",
      "question": "It is not possible for the two\u2019s complement value to be equal to the original value in any case. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " In most cases the value of two\u2019s complement is different from the original value. However, there are cases in which the two\u2019s complement value may be equal to the original value. For example, the two\u2019s complement of 10000000 is also equal to "
    },
    {
      "id": "142",
      "question": "The one\u2019s complement of 110010101 is: \n",
      "answerA": " 001101010 \n",
      "answerB": " 110010101 \n",
      "answerC": " 001101011 \n",
      "answerD": " 110010100 ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The one\u2019s complement of a value is obtained by simply changing all the 1\u2019s to 0\u2019s and all the 0\u2019s to 1\u2019s. Hence the one\u2019s complement of 110010101 is "
    },
    {
      "id": "143",
      "question": "\n",
      "answerA": " OR \n",
      "answerB": " AND \n",
      "answerC": " XOR \n",
      "answerD": " NOT ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Bitwise XOR gives 1 if either of the bits is 1 and 0 when both of the bits are "
    },
    {
      "id": "144",
      "question": "What will be the output of the following Python expression? \n 4 ^ 12 \n ",
      "answerA": " 2 \n",
      "answerB": " 4 \n",
      "answerC": " 8 \n",
      "answerD": " 12 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": "  ^ is the XOR operator. The binary form of 4 is 0100 and that of 12 is "
    },
    {
      "id": "145",
      "question": "\n",
      "answerA": " 10 \n",
      "answerB": " 2 \n",
      "answerC": " 1 \n",
      "answerD": " 0 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Any odd number on being AND-ed with 1 always gives "
    },
    {
      "id": "146",
      "question": "What will be the value of the following Python expression? \n  bin ( 10 - 2 ) +bin ( 12 ^ 4 ) \n ",
      "answerA": " 0b10000 \n",
      "answerB": " 0b10001000 \n",
      "answerC": " 0b1000b1000 \n",
      "answerD": " 0b10000b1000 ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The output of bin(10-2) = 0b1000 and that of bin(12^4) is ob"
    },
    {
      "id": "147",
      "question": "Which of the following expressions can be used to multiply a given number \u2018a\u2019 by 4? \n",
      "answerA": " a<<2 \n",
      "answerB": " a<<4 \n",
      "answerC": " a>>2 \n",
      "answerD": " a>>4 ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Let us consider an example wherein a="
    },
    {
      "id": "148",
      "question": "What will be the output of the following Python code if a=10 and b =20? \n a = 10 \nb = 20 \na = a^b\nb = a^b\na = a^b\n print ( a , b ) \n ",
      "answerA": " 10 20 \n",
      "answerB": " 10 10 \n",
      "answerC": " 20 10 \n",
      "answerD": " 20 20 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above is used to swap the contents of two memory locations using bitwise X0R operator. Hence the output of the code shown above is: 20 "
    },
    {
      "id": "149",
      "question": "What is the two\u2019s complement of -44? \n",
      "answerA": " 1011011 \n",
      "answerB": " 11010100 \n",
      "answerC": " 11101011 \n",
      "answerD": " 10110011 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The binary form of -44 is "
    },
    {
      "id": "150",
      "question": "What will be the output of the following Python expression? \n ~ 100 ? \n ",
      "answerA": " 101 \n",
      "answerB": " -101 \n",
      "answerC": " 100 \n",
      "answerD": " -100 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Suppose we have an expression ~A. This is evaluated as: -A \u2013 "
    },
    {
      "id": "151",
      "question": "What will be the output of the following Python code snippet? \n \n \n \n \n \n bool ( \u2018 False \u2019 ) \n bool ( ) \n ",
      "answerA": "  \n    True \r\n   True \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n ",
      "answerB": "  ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The Boolean function returns true if the argument passed to the bool function does not amount to zero. In the first example, the string \u2018False\u2019 is passed to the function bool. This does not amount to zero and hence the output is true. In the second function, an empty list is passed to the function bool. Hence the output is false. \n\u00a0 \u00a0 \n "
    },
    {
      "id": "152",
      "question": "What will be the output of the following Python code snippet? \n \n advertisement \n \n \n \n \n [ 'hello' ,   'morning' ] [ bool ( '' ) ] \n ",
      "answerA": " error \n",
      "answerB": " no output \n",
      "answerC": " hello \n",
      "answerD": " morning ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The line of code shown above can be simplified to state that \u2018hello\u2019 should be printed if the argument passed to the Boolean function amounts to zero, else \u2018morning\u2019 will be printed. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "153",
      "question": "What will be the output of the following Python code snippet? \n not ( 3 > 4 ) \n not ( 1 & 1 ) \n ",
      "answerA": "  \n    True\r\n   True \n ",
      "answerB": "  ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The function not returns true if the argument amounts to false, and false if the argument amounts to true. Hence the first function returns false, and the second function returns false. \n\u00a0 \u00a0 \n "
    },
    {
      "id": "154",
      "question": "What will be the output of the following Python code? \n [ 'f' ,   't' ] [ bool ( 'spam' ) ] \n ",
      "answerA": " t \n",
      "answerB": " f \n",
      "answerC": " No output \n",
      "answerD": " Error ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The line of code can be translated to state that \u2018f\u2019 is printed if the argument passed to the Boolean function amount to zero. Else \u2018t\u2019 is printed. The argument given to the Boolean function in the above case is \u2018spam\u2019, which does not amount to zero. Hence the output is t. \n "
    },
    {
      "id": "155",
      "question": "What will be the output of the following Python code? \n l = [ 1 ,   0 ,   2 ,   0 ,   'hello' ,   '' ,   [ ] ] \n list ( filter ( bool ,  l ) ) \n ",
      "answerA": " Error \n",
      "answerB": " [1, 0, 2, 0, \u2018hello\u2019, \u201d, []]  \n",
      "answerC": " [1, 0, 2, \u2018hello\u2019, \u201d, []]  \n",
      "answerD": " [1, 2, \u2018hello\u2019]  ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above returns a new list containing only those elements of the list l which do not amount to zero. Hence the output is: [1, 2, \u2018hello\u2019]. \n "
    },
    {
      "id": "156",
      "question": "What will be the output of the following Python code if the system date is 21st June, 2017 (Wednesday)? \n [ ]   or   { } \n { }   or   [ ] \n ",
      "answerA": "  \n    []\r\n   {} \n ",
      "answerB": "  \n    []\r\n   [] \n ",
      "answerC": "  \n    {}\r\n   [] \n ",
      "answerD": "  ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above shows two functions. In both the cases the right operand is returned. This is because each function is evaluated from left to right. Since the left operand is false, it is assumed that the right operand must be true and hence the right operand is returned in each of the above case. \n\u00a0 \u00a0 \n "
    },
    {
      "id": "157",
      "question": "What will be the output of the following Python code? \n class  Truth:\n\t pass \nx = Truth ( ) \n bool ( x ) \n ",
      "answerA": " pass \n",
      "answerB": " true \n",
      "answerC": " false \n",
      "answerD": " error ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " If the truth method is not defined, the object is considered true. Hence the output of the code shown above is true. \n "
    },
    {
      "id": "158",
      "question": "What will be the output of the following Python code? \n if   ( 9   <   0 )   and   ( 0   <  - 9 ) :\n     print ( \"hello\" ) \n elif   ( 9   >   0 )   or   False :\n     print ( \"good\" ) \n else :\n     print ( \"bad\" ) \n ",
      "answerA": " error \n",
      "answerB": " hello \n",
      "answerC": " good \n",
      "answerD": " bad ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above prints the appropriate option depending on the conditions given. The condition which matches is (9>0), and hence the output is: good. \n "
    },
    {
      "id": "215",
      "question": "What will be the output of the following Python code snippet? \n for  i  in   '' :\n     print   ( i ) \n ",
      "answerA": " None \n",
      "answerB": " (nothing is printed) \n",
      "answerC": " error \n",
      "answerD": " \nc) error \n",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The string does not have any character to loop over. \n "
    },
    {
      "id": "159",
      "question": "Which of the following Boolean expressions is not logically equivalent to the other three? \n",
      "answerA": " not(-6<0 or-6>10) \n",
      "answerB": " -6>=0 and -6<=10 \n",
      "answerC": " not(-6<10 or-6==10) \n",
      "answerD": " not(-6>10 or-6==10) ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The expression not(-6<0 or -6>10) returns the output False. \nThe expression -6>=0 and -6<=10 returns the output False. \nThe expression not(-6<10 or -6==10) returns the output False. \nThe expression  not(-6>10 or -6==10) returns the output True. \n "
    },
    {
      "id": "160",
      "question": "What will be the output of the following Python code snippet? \n not ( 10 < 20 )   and   not ( 10 > 30 ) \n ",
      "answerA": " True \n",
      "answerB": " False \nc) Error \nd) No output ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The expression not(10<20) returns false. The expression not(10>30) returns true. The and operation between false and true returns false. Hence the output is false. \n   Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 Bitwise \u2013 2 \u00bb  Next - Python Question and Answers \u2013 Formatting \u2013 1   Related Posts: Apply for  Programming Internship \n Check  Information Technology Books \n Check  Python Books \n Apply for  Python Internship \n Practice  Programming MCQs \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python MCQ \u2013 String \u2013 10  \n Python Questions and Answers \u2013 Sets \u2013 4  \n Python MCQ \u2013 String \u2013 13  \n Python MCQ \u2013 String \u2013 9  \n Python MCQ \u2013 String \u2013 8  \n Python MCQ \u2013 String \u2013 12  \n Python Questions and Answers \u2013 Core Data types  \n Python Questions and Answers \u2013 While and For Loops \u2013 5  \n Python Questions and Answers \u2013 Dictionary \u2013 3  \n Python Program to Implement Stack  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python Programs on Trees Searching and Sorting in Python Linked List Programs in Python Python Programs on Graphs Python MCQ Questions Popular Pages: Python Programming Examples JavaScript MCQ Questions C++ Algorithm Library C++ Programming MCQ Questions Automata Theory MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python Programs on Trees Searching and Sorting in Python Linked List Programs in Python Python Programs on Graphs Python MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Python Programming Examples JavaScript MCQ Questions C++ Algorithm Library C++ Programming MCQ Questions Automata Theory MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.464 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-04 00:17:37  \n  Compression = gzip "
    },
    {
      "id": "161",
      "question": "What will be the output of the following Python code? \n \n \n \n \n \n l = list ( 'HELLO' ) \n 'first={0[0]}, third={0[2]}' . format ( l ) \n ",
      "answerA": " \u2018first=H, third=L\u2019 \n",
      "answerB": " \u2018first=0, third=2\u2019 \n",
      "answerC": " Error \n",
      "answerD": " \u2018first=0, third=L\u2019 ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " In the code shown above, the value for first is substituted by l[0], that is H and the value for third is substituted by l[2], that is L. Hence the output of the code shown above is: \u2018first=H, third=L\u2019. The list l= [\u2018H\u2019, \u2018E\u2019, \u2018L\u2019, \u2018L\u2019, \u2018O\u2019]. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "162",
      "question": "What will be the output of the following Python code? \n l = list ( 'HELLO' ) \np = l [ 0 ] ,  l [ - 1 ] ,  l [ 1 : 3 ] \n 'a={0}, b={1}, c={2}' . format ( *p ) \n ",
      "answerA": " Error \n",
      "answerB": " \u201ca=\u2019H\u2019, b=\u2019O\u2019, c=(E, L)\u201d \n",
      "answerC": " \u201ca=H, b=O, c=[\u2018E\u2019, \u2018L\u2019]\u201d \n",
      "answerD": " Junk value ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " In the code shown above, the value for a is substituted by l[0], that is \u2018H\u2019, the value of b is substituted by l[-1], that is \u2018O\u2019 and the value for c is substituted by l[1:3]. Here the use of *p is to unpack a tuple items into individual function arguments. \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n "
    },
    {
      "id": "163",
      "question": "The formatting method {1:<10} represents the ___________ positional argument, _________ justified in a 10 character wide field. \n",
      "answerA": " first, right \n",
      "answerB": " second, left \n",
      "answerC": " first, left \n",
      "answerD": " second, right ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The formatting method {1:<10} represents the second positional argument, left justified in a 10 character wide field. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "164",
      "question": "What will be the output of the following Python code? \n hex ( 255 ) ,   int ( 'FF' ,   16 ) ,   0xFF \n ",
      "answerA": " [0xFF, 255, 16, 255] \n",
      "answerB": " (\u20180xff\u2019, 155, 16, 255) \n",
      "answerC": " Error \n",
      "answerD": " (\u20180xff\u2019, 255, 255) ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above converts the value 255 into hexadecimal, that is, 0xff. The value \u2018FF\u2019  into integer. Hence the output of the code shown is: (\u20180xff\u2019, 255, 255). \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "165",
      "question": "The output of the two codes shown below is the same. \n i.  bin ( ( 2 ** 16 ) - 1 ) \nii.  '{}' . format ( bin ( ( 2 ** 16 ) - 1 ) ) \n ",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The output of both of the codes shown above is \u20180b1111111111111111\u2019. Hence the statement is true. \n "
    },
    {
      "id": "166",
      "question": "What will be the output of the following Python code? \n '{a}{b}{a}' . format ( a = 'hello' ,  b = 'world' ) \n ",
      "answerA": " \u2018hello world\u2019 \n",
      "answerB": " \u2018hello\u2019 \u2018world\u2019 \u2018hello\u2019 \n",
      "answerC": " \u2018helloworldhello\u2019 \n",
      "answerD": " \u2018hello\u2019 \u2018hello\u2019 \u2018world\u2019 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above prints the values substituted for a, b, a, in the same order. This operation is performed using the format function. Hence the output of the code is: \u2018helloworldhello\u2019. \n "
    },
    {
      "id": "167",
      "question": "What will be the output of the following Python code? \n  D = dict ( p = 'san' ,  q = 'foundry' ) \n '{p}{q}' . format ( **D ) \n ",
      "answerA": " Error \n",
      "answerB": " sanfoundry \n",
      "answerC": " san foundry \n",
      "answerD": " {\u2018san\u2019, \u2018foundry\u2019} ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above prints the values substituted for p and q in the same order. Note that there is no blank space between p and q. Hence the output is: sanfoundry. \n "
    },
    {
      "id": "168",
      "question": "What will be the output of the following Python code? \n 'The {} side {1} {2}' . format ( 'bright' ,   'of' ,   'life' ) \n ",
      "answerA": " Error \n",
      "answerB": " \u2018The bright side of life\u2019 \n",
      "answerC": " \u2018The {bright} side {of} {life}\u2019 \n",
      "answerD": " No output ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above results in an error. This is because we have switched from automatic field numbering to manual field numbering, that is, from {} to {1}. Hence this code results in an error. \n "
    },
    {
      "id": "169",
      "question": "What will be the output of the following Python code? \n '{0:f}, {1:2f}, {2:05.2f}' . format ( 1.23456 ,   1.23456 ,   1.23456 ) \n ",
      "answerA": " Error \n",
      "answerB": " \u20181.234560, 1.22345, 1.23\u2019 \n",
      "answerC": " No output \n",
      "answerD": " \u20181.234560, 1.234560, 01.23\u2019 ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " In the code shown above, various formatting options are displayed using the format option. Hence the output of this code is: \u20181.234560, 1.234560, 01.23\u2019 \n "
    },
    {
      "id": "170",
      "question": "What will be the output of the following Python code? \n '%.2f%s'  %  ( 1.2345 ,   99 ) \n ",
      "answerA": " \u20181.2345\u2019, \u201899\u2019 \n",
      "answerB": " \u20181.2399\u2019 \n",
      "answerC": " \u20181.234599\u2019 \n",
      "answerD": " 1.23, 99 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " In this code, we must notice that since multiple values haven been given, they should be enclosed in a tuple. Since the formatting format is %.2f, the value 1.2345 is reduced to two decimal places. Hence the output of the code shown above: \u20181.2399\u2019. \n "
    },
    {
      "id": "171",
      "question": "What will be the output of the following Python code? \n '%s'  % ( ( 1.23 , ) , ) \n ",
      "answerA": " \u2018(1.23,)\u2019 \n",
      "answerB": " 1.23, \n",
      "answerC": " (,1.23) \n",
      "answerD": " \u20181.23\u2019 ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The formatting expression accepts either a single substitution value, or a tuple of one or more items. Since single item can be given either by itself or within the tuple, a tuple to be formatted must be provided as a tested tuple. Hence the output of the code is: >>> \u2018%s\u2019 %((1.23,),). \n "
    },
    {
      "id": "172",
      "question": "What will be the output of the following two codes? \n i.  '{0}' . format ( 4.56 ) \nii.  '{0}' . format ( [ 4.56 , ] ) \n ",
      "answerA": " \u20184.56\u2019, \u20184.56,\u2019 \n",
      "answerB": " \u20184.56\u2019, \u2018[4.56]\u2019 \n",
      "answerC": " 4.56, [4.56,] \n",
      "answerD": " 4.56, [4.56,] ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above shows the formatting option on the same value, that is 4.56, where in the second case, the value is enclosed in a list. Hence the output of the code shown above is: \n \u20184.56\u2019, \u2018[4.56]\u2019 \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Question and Answers \u2013 Formatting \u2013 2 \u00bb  Next - Python Questions and Answers \u2013 Decorators   Related Posts: Apply for  Python Internship \n Practice  Programming MCQs \n Apply for  Programming Internship \n Check  Information Technology Books \n Check  Python Books \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Question and Answers \u2013 Formatting \u2013 2  \n Python Question and Answers \u2013 Formatting \u2013 1  \n Python Questions and Answers \u2013 Functional Programming Tools  \n C++ Program to Demonstrate Use of Formatting Flags on Integer Output  \n C++ Program to Demonstrate Use of Formatting Flags on Float Output  \n Python Questions and Answers \u2013 List Comprehension \u2013 1  \n Python MCQ \u2013 String \u2013 8  \n Python Questions and Answers \u2013 Sets \u2013 4  \n Python Questions and Answers \u2013 Matrix List Comprehension  \n Python Questions and Answers \u2013 Shallow copy vs Deep copy  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Searching and Sorting in Python Linked List Programs in Python Python MCQ Questions Python Programs on Trees Python Programs on Graphs Popular Pages: Python Programming Examples Advanced C Programming Machine Tools MCQ Questions Advanced Machining Processes MCQ Questions C# MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Searching and Sorting in Python Linked List Programs in Python Python MCQ Questions Python Programs on Trees Python Programs on Graphs \n   \n \n \n \n \n \n \n   Popular Pages Python Programming Examples Advanced C Programming Machine Tools MCQ Questions Advanced Machining Processes MCQ Questions C# MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.608 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 01:22:29  \n  Compression = gzip "
    },
    {
      "id": "173",
      "question": "What will be the output of the following Python code snippet? \n \n \n \n \n \n '%d %s %g you'  % ( 1 ,   'hello' ,   4.0 ) \n ",
      "answerA": " Error \n",
      "answerB": " 1 hello you 4.0 \n",
      "answerC": " 1 hello 4 you \n",
      "answerD": " 1 4 hello you ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " In the snippet of code shown above, three values are inserted into the target string. When we insert more than one value, we should group the values on the right in a tuple. The % formatting expression operator expects either a single item or a tuple of one or more items on its right side. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "174",
      "question": "The output of which of the codes shown below will be: \u201cThere are 4 blue birds.\u201d? \n",
      "answerA": " \u2018There are %g %d birds.\u2019 %4 %blue \n",
      "answerB": " \u2018There are %d %s birds.\u2019 %(4, blue) \n",
      "answerC": " \u2018There are %s %d birds.\u2019 %[4, blue]  \n",
      "answerD": " \u2018There are %d %s birds.\u2019 4, blue ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The code \u2018There are %d %s birds.\u2019 %(4, blue) results in the output: There are 4 blue birds. When we insert more than one value, we should group the values on the right in a tuple. \n "
    },
    {
      "id": "216",
      "question": "What will be the output of the following Python code snippet? \n x  =   2 \n for  i  in   range ( x ) :\n    x + =   1 \n     print   ( x ) \n ",
      "answerA": " 0 1 2 3 4 \u2026 \n",
      "answerB": " 0 1 \n",
      "answerC": " 3 4 \n",
      "answerD": " 0 1 2 3 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Variable x is incremented and printed twice. \n "
    },
    {
      "id": "217",
      "question": "What will be the output of the following Python code snippet? \n x  =   2 \n for  i  in   range ( x ) :\n    x - =   2 \n     print   ( x ) \n ",
      "answerA": " 0 1 2 3 4 \u2026 \n",
      "answerB": " 0 -2 \n",
      "answerC": " 0 \n",
      "answerD": " error ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The loop is entered twice. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all questions on Python for experienced people,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 While and For Loops \u2013 4 \u00bb  Next - Python Questions and Answers \u2013 While and For Loops \u2013 6   Related Posts: Apply for  Python Internship \n Check  Information Technology Books \n Check  Python Books \n Practice  Programming MCQs \n Apply for  Programming Internship \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 While and For Loops \u2013 3  \n Python Questions and Answers \u2013 While and For Loops \u2013 4  \n Python Questions and Answers \u2013 While and For Loops \u2013 6  \n Python Questions and Answers \u2013 While and For Loops \u2013 2  \n Python Multiple Choice Questions \u2013 While and For Loops  \n Python Program to Print Numbers in a Range Without using Loops  \n Python Questions and Answers \u2013 Mapping Functions \u2013 3  \n Python Questions and Answers \u2013 Global vs Local Variables \u2013 1  \n Python MCQ \u2013 String \u2013 8  \n Python Questions and Answers \u2013 Lists \u2013 6  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python Programs on Trees Linked List Programs in Python Python MCQ Questions Python Programs on Graphs Python Programming Examples Popular Pages: Searching and Sorting in Python C++ Algorithm Library C Programs on Recursion C# Programs on Functions Bitwise Operators in C    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python Programs on Trees Linked List Programs in Python Python MCQ Questions Python Programs on Graphs Python Programming Examples \n   \n \n \n \n \n \n \n   Popular Pages Searching and Sorting in Python C++ Algorithm Library C Programs on Recursion C# Programs on Functions Bitwise Operators in C \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.494 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 00:25:48  \n  Compression = gzip "
    },
    {
      "id": "175",
      "question": "What will be the output of the python code shown below for various styles of format specifiers? \n \n \n    \nSubscribe Now:  Python Newsletter  |  Important Subjects Newsletters \n \n \n \n \n \n \n \n x = 1234 \nres = 'integers:...%d...%-6d...%06d'  % ( x ,  x ,  x ) \nres \n ",
      "answerA": " \u2018integers:\u20261234\u20261234\u00a0\u00a0\u2026001234\u2019 \n",
      "answerB": " \u2018integers\u20261234\u20261234\u2026123400\u2019 \n",
      "answerC": " \u2018integers:\u2026  1234\u20261234\u2026001234\u2019 \n",
      "answerD": " \u2018integers:\u20261234\u20261234\u2026001234\u2019 ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above prints 1234 for the format specified %d, \u20181234\u00a0\u00a0\u2019 for the format specifier %-6d (minus \u2018-\u2018 sign signifies left justification), and 001234 for the format specifier %06d. Hence the output of this code is: \u2018integers:\u20261234\u20261234\u00a0\u00a0\u2026001234\u2019 \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "176",
      "question": "What will be the output of the following Python code snippet? \n x = 3.3456789 \n '%f | %e | %g'  % ( x ,  x ,  x ) \n ",
      "answerA": " Error \n",
      "answerB": " \u20183.3456789 | 3.3456789+00 | 3.345678\u2019 \n",
      "answerC": " \u20183.345678 | 3.345678e+0 | 3.345678\u2019 \n",
      "answerD": " \u20183.345679 | 3.345679e+00 | 3.34568\u2019 ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The %f %e and %g format specifiers represent floating point numbers in different ways.  %e and %E are the same, except that the exponent is in lowercase. %g chooses the format by number content. Hence the output of this code is: \u20183.345679 | 3.345679e+00 | 3.34568\u2019. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "177",
      "question": "What will be the output of the following Python code snippet? \n x = 3.3456789 \n '%-6.2f | %05.2f | %+06.1f'  % ( x ,  x ,  x ) \n ",
      "answerA": " \u20183.35   | 03.35 | +003.3\u2019 \n",
      "answerB": " \u20183.3456789 | 03.3456789 | +03.3456789\u2019 \n",
      "answerC": " Error \n",
      "answerD": " \u20183.34 | 03.34 | 03.34+\u2019 ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above rounds the floating point value to two decimal places. In this code, a variety of addition formatting features such as zero padding, total field width etc. Hence the output of this code is: \u20183.35   | 03.35 | +003.3\u2019. \n "
    },
    {
      "id": "178",
      "question": "What will be the output of the following Python code snippet? \n x = 3.3456789 \n '%s'  %x ,   str ( x ) \n ",
      "answerA": " Error \n",
      "answerB": " (\u20183.3456789\u2019, \u20183.3456789\u2019) \n",
      "answerC": " (3.3456789, 3.3456789) \n",
      "answerD": " (\u20183.3456789\u2019, 3.3456789) ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " We can simply convert strings with a %s format expression or the str built-in function. Both of these methods have been shown in this code. Hence the output is: ) (\u20183.3456789\u2019, \u20183.3456789\u2019) \n "
    },
    {
      "id": "179",
      "question": "What will be the output of the following Python code snippet? \n '%(qty)d more %(food)s'  % { 'qty' : 1 ,   'food' :  'spam' } \n ",
      "answerA": " Error \n",
      "answerB": " No output \n",
      "answerC": " \u20181 more foods\u2019 \n",
      "answerD": "s'  % { 'qty' : 1 ,   'food' :  'spam' } ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " String formatting also allows conversion targets on the left to refer to the keys in a dictionary coded on the right and fetch the corresponding values. In the code shown above, (qty) and (food) in the format string on the left refers to keys in the dictionary literal on the right and fetch their assorted values. Hence the output of the code shown above is: 1 more spam. \n "
    },
    {
      "id": "180",
      "question": "What will be the output of the following Python code snippet? \n a = 'hello' \nq = 10 \n vars ( ) \n ",
      "answerA": " {\u2018a\u2019 : \u2018hello\u2019, \u2018q\u2019 : 10,  \u2026\u2026..plus built-in names set by Python\u2026.} \n",
      "answerB": " {\u2026\u2026Built in names set by Python\u2026\u2026} \n",
      "answerC": " {\u2018a\u2019 : \u2018hello\u2019, \u2018q\u2019 : 10} \n",
      "answerD": " Error ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The built in function vars() returns a dictionary containing all the variables that exist in the place. Hence the output of the code shown above is: {\u2018a\u2019 : \u2018hello\u2019, \u2018q\u2019 : 10,  \u2026\u2026..plus built-in names set by Python\u2026.} \n "
    },
    {
      "id": "181",
      "question": "What will be the output of the following Python code? \n s = '{0}, {1}, and {2}' \ns. format ( 'hello' ,   'good' ,   'morning' ) \n ",
      "answerA": " \u2018hello good and morning\u2019 \n",
      "answerB": " \u2018hello, good, morning\u2019 \n",
      "answerC": " \u2018hello, good, and morning\u2019 \n",
      "answerD": " Error ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Within the subject string, curly braces designate substitution targets and arguments to be inserted either by position or keyword. Hence the output of the code shown above:\u2019hello, good,and morning\u2019. \n "
    },
    {
      "id": "182",
      "question": "What will be the output of the following Python code? \n s = '%s, %s & %s' \ns% ( 'mumbai' ,   'kolkata' ,   'delhi' ) \n ",
      "answerA": " mumbai kolkata & delhi \n",
      "answerB": " Error \n",
      "answerC": " No output \n",
      "answerD": " \u2018mumbai, kolkata & delhi\u2019 ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " In the code shown above, the format specifier %s is replaced by the designated substitution. Hence the output of the code shown above is:  \u2018mumbai, kolkata & delhi\u2019. \n "
    },
    {
      "id": "183",
      "question": "What will be the output of the following Python code? \n t  =   '%(",
      "answerA": "s, %(",
      "answerB": "s, %(",
      "answerC": "s' \nt %  dict ( a = 'hello' ,  b = 'world' ,  c = 'universe' ) \n a) \u2018hello, world, universe\u2019 \nb) \u2018hellos, worlds, universes\u2019 \n",
      "answerD": " hellos, world, universe ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Within the subject string, curly braces represent substitution targets and arguments to be inserted. Hence the output of the code shown above: \n\u2018hello, world, universe\u2019. \n "
    },
    {
      "id": "184",
      "question": "What will be the output of the following Python code? \n '{a}, {0}, {abc}' . format ( 10 ,  a = 2.5 ,  abc = [ 1 ,   2 ] ) \n ",
      "answerA": " Error \n",
      "answerB": " \u20182.5, 10, [1, 2]\u2019 \n",
      "answerC": " 2.5, 10, 1, 2 \n",
      "answerD": " \u201910, 2.5, [1, 2]\u2019 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Since we have specified that the order of the output be: {a}, {0}, {abc}, hence the value of associated with {a} is printed first followed by that of {0} and {abc}. Hence the output of the code shown above is: \u20182.5, 10, [1, 2]\u2019. \n "
    },
    {
      "id": "185",
      "question": "What will be the output of the following Python code? \n '{0:.2f}' . format ( 1.234 ) \n ",
      "answerA": " \u20181\u2019 \n",
      "answerB": " \u20181.234\u2019 \n",
      "answerC": " \u20181.23\u2019 \n",
      "answerD": " \u20181.2\u2019 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above displays the string method to round off a given decimal number to two decimal places. Hence the output of the code is: \u20181.23\u2019. \n "
    },
    {
      "id": "186",
      "question": "What will be the output of the following Python code? \n '%x %d'  % ( 255 ,   255 ) \n ",
      "answerA": " \u2018ff, 255\u2019 \n",
      "answerB": " \u2018255, 255\u2019 \n",
      "answerC": " \u201815f, 15f\u2019 \n",
      "answerD": " Error ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above converts the given arguments to hexadecimal and decimal values and prints the result. This is done using the format specifiers %x and %d respectively. Hence the output of the code shown above is: \u2018ff, 255\u2019. \n "
    },
    {
      "id": "187",
      "question": "The output of the two codes shown below is the same. \n i.  '{0:.2f}' . format ( 1 / 3.0 ) \nii.  '%.2f' % ( 1 / 3.0 ) \n ",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The two codes shown above represent the same operation but in different formats. The output of both of these functions is: \u20180.33\u2019. Hence the statement is true. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Question and Answers \u2013 Formatting \u2013 1 \u00bb  Next - Python Questions and Answers \u2013 Advanced Formatting Tools   Related Posts: Practice  Programming MCQs \n Check  Information Technology Books \n Apply for  Programming Internship \n Apply for  Python Internship \n Check  Python Books \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 Advanced Formatting Tools  \n Python Question and Answers \u2013 Formatting \u2013 1  \n Python Question and Answers \u2013 Sys Module  \n Python Question and Answers \u2013 Built-in Functions \u2013 2  \n Python Question and Answers \u2013 Random module \u2013 1  \n Python Question and Answers \u2013 Datetime Module \u2013 1  \n Python Question and Answers \u2013 Datetime Module \u2013 2  \n Python Questions and Answers \u2013 Tuples \u2013 2  \n Python Questions and Answers \u2013 Regular Expressions \u2013 5  \n Python Questions and Answers \u2013 Tuples-3  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Searching and Sorting in Python Python MCQ Questions Python Programs on Trees Linked List Programs in Python Python Programs on Graphs Popular Pages: Python Programming Examples RDBMS MCQ Questions C Programs on Arrays JavaScript MCQ Questions Online Trainings by CTO    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Searching and Sorting in Python Python MCQ Questions Python Programs on Trees Linked List Programs in Python Python Programs on Graphs \n   \n \n \n \n \n \n \n   Popular Pages Python Programming Examples RDBMS MCQ Questions C Programs on Arrays JavaScript MCQ Questions Online Trainings by CTO \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.612 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 01:22:29  \n  Compression = gzip "
    },
    {
      "id": "188",
      "question": "What will be the output of the following Python code snippet? \n \n \n \n \n \n X = \u201dhi\u201d\n print ( \u201c05d\u201d%X ) \n ",
      "answerA": " 00000hi \n",
      "answerB": " 000hi \n",
      "answerC": " hi000 \n",
      "answerD": " error ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The code snippet shown above results in an error because the above formatting option works only if \u2018X\u2019 is a number. Since in the above case \u2018X\u2019 is a string, an error is thrown. \n "
    },
    {
      "id": "189",
      "question": "What will be the output of the following Python code snippet? \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n X = \u201dsan-foundry\u201d\n print ( \u201c%56s\u201d , X ) \n ",
      "answerA": " 56 blank spaces before san-foundry \n",
      "answerB": " 56 blank spaces before san and foundry \n",
      "answerC": " 56 blank spaces after san-foundry \n",
      "answerD": " no change ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The formatting option print(\u201c%Ns\u201d,X) helps us add \u2018N\u2019 number of spaces before a given string \u2018X\u2019. Hence the output for the code snippet shown above will be 56 blank spaces before the string \u201csan-foundry\u201d. \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n "
    },
    {
      "id": "190",
      "question": "What will be the output of the following Python expression if x=456? \n \n advertisement \n \n \n \n \n print ( \"%-06d\" %x ) \n ",
      "answerA": " 000456 \n",
      "answerB": " 456000 \n",
      "answerC": " 456 \n",
      "answerD": " error ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The expression shown above results in the output "
    },
    {
      "id": "191",
      "question": "What will be the output of the following Python expression if X=345? \n print ( \u201c%06d\u201d%X ) \n ",
      "answerA": " 345000 \n",
      "answerB": " 000345 \n",
      "answerC": " 000000345 \n",
      "answerD": " 345000000 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The above expression returns the output "
    },
    {
      "id": "192",
      "question": "Which of the following formatting options can be used in order to add \u2018n\u2019 blank spaces after a given string \u2018S\u2019? \n",
      "answerA": " print(\u201c-ns\u201d%S) \n",
      "answerB": " print(\u201c-ns\u201d%S) \n",
      "answerC": " print(\u201c%ns\u201d%S) \n",
      "answerD": " print(\u201c%-ns\u201d%S) ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " In order to add \u2018n\u2019 blank spaces after a given string \u2018S\u2019, we use the formatting option:(\u201c%-ns\u201d%S). \n "
    },
    {
      "id": "193",
      "question": "What will be the output of the following Python expression if X = -122? \n print ( \"-%06d\" %x ) \n ",
      "answerA": " -000122 \n",
      "answerB": " 000122 \n",
      "answerC": " \u201300122 \n",
      "answerD": " -00122 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The given number is -"
    },
    {
      "id": "194",
      "question": "What will be the output of the following Python expression if the value of x is 34? \n print ( \u201c%f\u201d%x ) \n ",
      "answerA": " 34.00 \n",
      "answerB": " 34.0000 \n",
      "answerC": " 34.000000 \n",
      "answerD": " 34.00000000 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The expression shown above normally returns the value with 6 decimal points if it is not specified with any number. Hence the output of this expression will be: 34.000000 (6 decimal points). \n "
    },
    {
      "id": "195",
      "question": "What will be the output of the following Python expression if x=56.236? \n print ( \"%.2f\" %x ) \n ",
      "answerA": " 56.00 \n",
      "answerB": " 56.24 \n",
      "answerC": " 56.23 \n",
      "answerD": " 0056.236 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The expression shown above rounds off the given number to the number of decimal places specified. Since the expression given specifies rounding off to two decimal places, the output of this expression will be 56."
    },
    {
      "id": "196",
      "question": "What will be the output of the following Python expression if x=22.19? \n print ( \"%5.2f\" %x ) \n ",
      "answerA": " 22.1900 \n",
      "answerB": " 22.00000 \n",
      "answerC": " 22.19 \n",
      "answerD": " 22.20 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The output of the expression above will be 22."
    },
    {
      "id": "197",
      "question": "The expression shown below results in an error. \n print ( \"-%5d0\" , 989 ) \n ",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The expression shown above does not result in an error. The output of this expression is -%5d0 "
    },
    {
      "id": "198",
      "question": "What will be the output of the following Python code? \n \n \n \n \n \n for  i  in   range ( 10 ) :\n     if  i  ==   5 :\n         break \n     else :\n         print ( i ) \n else :\n     print ( \"Here\" ) \n ",
      "answerA": " 0 1 2 3 4 Here \n",
      "answerB": " 0 1 2 3 4 5 Here \n",
      "answerC": " 0 1 2 3 4 \n",
      "answerD": " 1 2 3 4 5 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The else part is executed if control doesn\u2019t break out of the loop. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "199",
      "question": "What will be the output of the following Python code? \n for  i  in   range ( 5 ) :\n     if  i  ==   5 :\n         break \n     else :\n         print ( i ) \n else :\n     print ( \"Here\" ) \n ",
      "answerA": " 0 1 2 3 4 Here \n",
      "answerB": " 0 1 2 3 4 5 Here \n",
      "answerC": " 0 1 2 3 4 \n",
      "answerD": " 1 2 3 4 5 ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The else part is executed if control doesn\u2019t break out of the loop. \n \n \n    \nSubscribe Now:  Python Newsletter  |  Important Subjects Newsletters \n \n \n \n \n \n \n \n "
    },
    {
      "id": "200",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n x  =   ( i  for  i  in   range ( 3 ) ) \n for  i  in  x:\n     print ( i ) \n ",
      "answerA": " 0 1 2 \n",
      "answerB": " error \n",
      "answerC": " 0 1 2 0 1 2 \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The first statement creates a generator object. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "201",
      "question": "What will be the output of the following Python code? \n x  =   ( i  for  i  in   range ( 3 ) ) \n for  i  in  x:\n     print ( i ) \n for  i  in  x:\n     print ( i ) \n ",
      "answerA": " 0 1 2 \n",
      "answerB": " error \n",
      "answerC": " 0 1 2 0 1 2 \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " We can loop over a generator object only once. \n "
    },
    {
      "id": "202",
      "question": "What will be the output of the following Python code? \n string   =   \"my name is x\" \n for  i  in   string :\n     print   ( i ,  end = \", \" ) \n ",
      "answerA": " m, y,  , n, a, m, e,  , i, s,  , x, \n",
      "answerB": " m, y,  , n, a, m, e,  , i, s,  , x \n",
      "answerC": " my, name, is, x, \n",
      "answerD": " error ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Variable i takes the value of one character at a time. \n "
    },
    {
      "id": "203",
      "question": "What will be the output of the following Python code? \n string   =   \"my name is x\" \n for  i  in   string . split ( ) :\n     print   ( i ,  end = \", \" ) \n ",
      "answerA": " m, y,  , n, a, m, e,  , i, s,  , x, \n",
      "answerB": " m, y,  , n, a, m, e,  , i, s,  , x \n",
      "answerC": " my, name, is, x, \n",
      "answerD": " error ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Variable i takes the value of one word at a time. \n "
    },
    {
      "id": "204",
      "question": "What will be the output of the following Python code snippet? \n a  =   [ 0 ,   1 ,   2 ,   3 ] \n for  a [ - 1 ]   in  a:\n     print ( a [ - 1 ] ) \n ",
      "answerA": " 0 1 2 3 \n",
      "answerB": " 0 1 2 2 \n",
      "answerC": " 3 3 3 3 \n",
      "answerD": " error ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The value of a[-1] changes in each iteration. \n "
    },
    {
      "id": "205",
      "question": "What will be the output of the following Python code snippet? \n a  =   [ 0 ,   1 ,   2 ,   3 ] \n for  a [ 0 ]   in  a:\n     print ( a [ 0 ] ) \n ",
      "answerA": " 0 1 2 3 \n",
      "answerB": " 0 1 2 2 \n",
      "answerC": " 3 3 3 3 \n",
      "answerD": " error ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The value of a[0] changes in each iteration. Since the first value that it takes is itself, there is no visible error in the current example. \n "
    },
    {
      "id": "206",
      "question": "What will be the output of the following Python code snippet? \n a  =   [ 0 ,   1 ,   2 ,   3 ] \ni  =  - 2 \n for  i  not   in  a:\n     print ( i ) \n    i + =   1 \n ",
      "answerA": " -2 -1 \n",
      "answerB": " 0 \n",
      "answerC": " error \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " SyntaxError, not in isn\u2019t allowed in for loops. \n "
    },
    {
      "id": "207",
      "question": "What will be the output of the following Python code snippet? \n string   =   \"my name is x\" \n for  i  in   ' ' . join ( string . split ( ) ) :\n     print   ( i ,  end = \", \" ) \n ",
      "answerA": " m, y,  , n, a, m, e,  , i, s,  , x, \n",
      "answerB": " m, y,  , n, a, m, e,  , i, s,  , x \n",
      "answerC": " my, name, is, x, \n",
      "answerD": " error ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Variable i takes the value of one character at a time. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all technical questions on Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 While and For Loops \u2013 5 \u00bb  Next - Python Multiple Choice Questions \u2013 String   Related Posts: Apply for  Python Internship \n Check  Python Books \n Apply for  Programming Internship \n Check  Information Technology Books \n Practice  Programming MCQs \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 While and For Loops \u2013 2  \n Python Multiple Choice Questions \u2013 While and For Loops  \n Python Questions and Answers \u2013 While and For Loops \u2013 3  \n Python Questions and Answers \u2013 While and For Loops \u2013 5  \n Python Questions and Answers \u2013 While and For Loops \u2013 4  \n Python Program to Print Numbers in a Range Without using Loops  \n Python Program to Implement Stack  \n Python Questions and Answers \u2013 Lists \u2013 6  \n Python Questions and Answers \u2013 Global vs Local Variables \u2013 1  \n Python MCQ \u2013 String \u2013 8  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python Programs on Trees Linked List Programs in Python Python Programs on Graphs Python MCQ Questions Searching and Sorting in Python Popular Pages: Python Programming Examples C++ Algorithm Library PHP MCQ Questions C# Programs on Functions Event Handling in Java with Examples    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python Programs on Trees Linked List Programs in Python Python Programs on Graphs Python MCQ Questions Searching and Sorting in Python \n   \n \n \n \n \n \n \n   Popular Pages Python Programming Examples C++ Algorithm Library PHP MCQ Questions C# Programs on Functions Event Handling in Java with Examples \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.344 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 00:24:33  \n  Compression = gzip "
    },
    {
      "id": "208",
      "question": "What will be the output of the following Python code? \n \n \n \n \n \n for  i  in   range ( 2.0 ) :\n     print ( i ) \n ",
      "answerA": " 0.0 1.0 \n",
      "answerB": " 0 1 \n",
      "answerC": " error \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Object of type float cannot be interpreted as an integer. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "209",
      "question": "What will be the output of the following Python code? \n for  i  in   range ( int ( 2.0 ) ) :\n     print ( i ) \n ",
      "answerA": " 0.0 1.0 \n",
      "answerB": " 0 1 \n",
      "answerC": " error \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " range(int(2.0)) is the same as range(2). \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n "
    },
    {
      "id": "210",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n for  i  in   range ( float ( 'inf' ) ) :\n     print   ( i ) \n ",
      "answerA": " 0.0 0.1 0.2 0.3 \u2026 \n",
      "answerB": " 0 1 2 3 \u2026 \n",
      "answerC": " 0.0 1.0 2.0 3.0 \u2026 \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Error, objects of type float cannot be interpreted as an integer. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "211",
      "question": "What will be the output of the following Python code? \n for  i  in   range ( int ( float ( 'inf' ) ) ) :\n     print   ( i ) \n ",
      "answerA": " 0.0 0.1 0.2 0.3 \u2026 \n",
      "answerB": " 0 1 2 3 \u2026 \n",
      "answerC": " 0.0 1.0 2.0 3.0 \u2026 \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " OverflowError, cannot convert float infinity to integer. \n "
    },
    {
      "id": "212",
      "question": "What will be the output of the following Python code snippet? \n for  i  in   [ 1 ,   2 ,   3 ,   4 ] [ ::- 1 ] :\n     print ( i ,  end = ' ' ) \n ",
      "answerA": " 1 2 3 4 \n",
      "answerB": " 4 3 2 1 \n",
      "answerC": " error \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " [::-1] reverses the list. \n "
    },
    {
      "id": "213",
      "question": "What will be the output of the following Python code snippet? \n for  i  in   '' . join ( reversed ( list ( 'abcd' ) ) ) :\n     print   ( i ) \n ",
      "answerA": " a b c d \n",
      "answerB": " d c b a \n",
      "answerC": " error \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " \u2018 \u2018.join(reversed(list(\u2018abcd\u2019))) reverses a string. \n "
    },
    {
      "id": "218",
      "question": "What will be the output of the following Python code? \n \n \n \n \n \n x  =   123 \n for  i  in  x:\n     print ( i ) \n ",
      "answerA": " 1 2 3 \n",
      "answerB": " 123 \n",
      "answerC": " error \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Objects of type int are not iterable. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "219",
      "question": "What will be the output of the following Python code? \n d  =   { 0 :  'a' ,   1 :  'b' ,   2 :  'c' } \n for  i  in  d:\n     print ( i ) \n ",
      "answerA": " 0 1 2 \n",
      "answerB": " a b c \n",
      "answerC": " 0 a\u20031 b\u20032 c \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Loops over the keys of the dictionary. \n \n \n    \nNote: Join free Sanfoundry classes at  Telegram  or  Youtube \n \n \n \n \n \n \n \n "
    },
    {
      "id": "220",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n d  =   { 0 :  'a' ,   1 :  'b' ,   2 :  'c' } \n for  x ,  y  in  d:\n     print ( x ,  y ) \n ",
      "answerA": " 0 1 2 \n",
      "answerB": " a b c \n",
      "answerC": " 0 a\u20031 b\u20032 c \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Error, objects of type int aren\u2019t iterable. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "221",
      "question": "What will be the output of the following Python code? \n d  =   { 0 :  'a' ,   1 :  'b' ,   2 :  'c' } \n for  x ,  y  in  d. items ( ) :\n     print ( x ,  y ) \n ",
      "answerA": " 0 1 2 \n",
      "answerB": " a b c \n",
      "answerC": " 0 a\u20031 b\u20032 c \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Loops over key, value pairs. \n "
    },
    {
      "id": "222",
      "question": "What will be the output of the following Python code? \n d  =   { 0 :  'a' ,   1 :  'b' ,   2 :  'c' } \n for  x  in  d. keys ( ) :\n     print ( d [ x ] ) \n ",
      "answerA": " 0 1 2 \n",
      "answerB": " a b c \n",
      "answerC": " 0 a\u20031 b\u20032 c \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Loops over the keys and prints the values. \n "
    },
    {
      "id": "223",
      "question": "What will be the output of the following Python code? \n d  =   { 0 :  'a' ,   1 :  'b' ,   2 :  'c' } \n for  x  in  d. values ( ) :\n     print ( x ) \n ",
      "answerA": " 0 1 2 \n",
      "answerB": " a b c \n",
      "answerC": " 0 a\u20031 b\u20032 c \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Loops over the values. \n "
    },
    {
      "id": "224",
      "question": "What will be the output of the following Python code? \n d  =   { 0 :  'a' ,   1 :  'b' ,   2 :  'c' } \n for  x  in  d. values ( ) :\n     print ( d [ x ] ) \n ",
      "answerA": " 0 1 2 \n",
      "answerB": " a b c \n",
      "answerC": " 0 a\u20031 b\u20032 c \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Causes a KeyError. \n "
    },
    {
      "id": "225",
      "question": "What will be the output of the following Python code? \n d  =   { 0 ,   1 ,   2 } \n for  x  in  d. values ( ) :\n     print ( x ) \n ",
      "answerA": " 0 1 2 \n",
      "answerB": " None None None \n",
      "answerC": " error \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Objects of type set have no attribute values. \n "
    },
    {
      "id": "226",
      "question": "What will be the output of the following Python code? \n d  =   { 0 ,   1 ,   2 } \n for  x  in  d:\n     print ( x ) \n ",
      "answerA": " 0 1 2 \n",
      "answerB": " {0, 1, 2} {0, 1, 2} {0, 1, 2} \n",
      "answerC": " error \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Loops over the elements of the set and prints them. \n "
    },
    {
      "id": "227",
      "question": "What will be the output of the following Python code? \n d  =   { 0 ,   1 ,   2 } \n for  x  in  d:\n     print ( d. add ( x ) ) \n ",
      "answerA": " 0 1 2 \n",
      "answerB": " 0 1 2 0 1 2 0 1 2 \u2026 \n",
      "answerC": " None None None \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Variable x takes the values 0, 1 and "
    },
    {
      "id": "228",
      "question": "What will be the output of the following Python code? \n for  i  in   range ( 0 ) :\n     print ( i ) \n ",
      "answerA": " 0 \n",
      "answerB": " no output \n",
      "answerC": " error \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " range(0) is empty. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all questions on Python for freshers,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 While and For Loops \u2013 3 \u00bb  Next - Python Questions and Answers \u2013 While and For Loops \u2013 5   Related Posts: Check  Python Books \n Practice  Programming MCQs \n Apply for  Programming Internship \n Check  Information Technology Books \n Apply for  Python Internship \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 While and For Loops \u2013 2  \n Python Multiple Choice Questions \u2013 While and For Loops  \n Python Questions and Answers \u2013 While and For Loops \u2013 6  \n Python Questions and Answers \u2013 While and For Loops \u2013 5  \n Python Questions and Answers \u2013 While and For Loops \u2013 3  \n Python Program to Print Numbers in a Range Without using Loops  \n Python Multiple Choice Questions \u2013 Built-in Functions  \n Python Questions and Answers \u2013 Mapping Functions \u2013 3  \n Python Questions and Answers \u2013 Global vs Local Variables \u2013 1  \n Python Question and Answers \u2013 Sys Module  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python Programs on Trees Linked List Programs in Python Python Programs on Graphs Searching and Sorting in Python Python MCQ Questions Popular Pages: Python Programming Examples C++ Algorithm Library C# Programs on Functions PHP MCQ Questions Event Handling in Java with Examples    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python Programs on Trees Linked List Programs in Python Python Programs on Graphs Searching and Sorting in Python Python MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Python Programming Examples C++ Algorithm Library C# Programs on Functions PHP MCQ Questions Event Handling in Java with Examples \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.374 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 17:18:56  \n  Compression = gzip "
    },
    {
      "id": "229",
      "question": "What will be the output of the following Python code? \n \n \n \n \n \n x  =   'abcd' \n for  i  in  x:\n     print ( i ) \n    x. upper ( ) \n ",
      "answerA": " a B C D \n",
      "answerB": " a b c d \n",
      "answerC": " A B C D \n",
      "answerD": " error ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Changes do not happen in-place, rather a new instance of the string is returned. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "230",
      "question": "What will be the output of the following Python code? \n x  =   'abcd' \n for  i  in  x:\n     print ( i. upper ( ) ) \n ",
      "answerA": " a b c d \n",
      "answerB": " A B C D \n",
      "answerC": " a B C D \n",
      "answerD": " error ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The instance of the string returned by upper() is being printed. \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n "
    },
    {
      "id": "231",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n x  =   'abcd' \n for  i  in   range ( x ) :\n     print ( i ) \n ",
      "answerA": " a b c d \n",
      "answerB": " 0 1 2 3 \n",
      "answerC": " error \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " range(str) is not allowed. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "232",
      "question": "What will be the output of the following Python code? \n x  =   'abcd' \n for  i  in   range ( len ( x ) ) :\n     print ( i ) \n ",
      "answerA": " a b c d \n",
      "answerB": " 0 1 2 3 \n",
      "answerC": " error \n",
      "answerD": " 1 2 3 4 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " i takes values 0, 1, 2 and "
    },
    {
      "id": "233",
      "question": "What will be the output of the following Python code? \n x  =   'abcd' \n for  i  in   range ( len ( x ) ) :\n     print ( i. upper ( ) ) \n ",
      "answerA": " a b c d \n",
      "answerB": " 0 1 2 3 \n",
      "answerC": " error \n",
      "answerD": " 1 2 3 4 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Objects of type int have no attribute upper(). \n "
    },
    {
      "id": "234",
      "question": "What will be the output of the following Python code snippet? \n x  =   'abcd' \n for  i  in   range ( len ( x ) ) :\n    i. upper ( ) \n print   ( x ) \n ",
      "answerA": " a b c d \n",
      "answerB": " 0 1 2 3 \n",
      "answerC": " error \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Objects of type int have no attribute upper(). \n "
    },
    {
      "id": "235",
      "question": "What will be the output of the following Python code snippet? \n x  =   'abcd' \n for  i  in   range ( len ( x ) ) :\n    x [ i ] . upper ( ) \n print   ( x ) \n ",
      "answerA": " abcd \n",
      "answerB": " ABCD \n",
      "answerC": " error \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Changes do not happen in-place, rather a new instance of the string is returned. \n "
    },
    {
      "id": "236",
      "question": "What will be the output of the following Python code snippet? \n x  =   'abcd' \n for  i  in   range ( len ( x ) ) :\n    i [ x ] . upper ( ) \n print   ( x ) \n ",
      "answerA": " abcd \n",
      "answerB": " ABCD \n",
      "answerC": " error \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Objects of type int aren\u2019t subscriptable. However, if the statement was x[i], an error would not have been thrown. \n "
    },
    {
      "id": "237",
      "question": "What will be the output of the following Python code snippet? \n x  =   'abcd' \n for  i  in   range ( len ( x ) ) :\n    x  =   'a' \n     print ( x ) \n ",
      "answerA": " a \n",
      "answerB": " abcd abcd abcd \n",
      "answerC": " a a a a \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " range() is computed only at the time of entering the loop. \n "
    },
    {
      "id": "238",
      "question": "What will be the output of the following Python code snippet? \n x  =   'abcd' \n for  i  in   range ( len ( x ) ) :\n     print ( x ) \n    x  =   'a' \n ",
      "answerA": " a \n",
      "answerB": " abcd abcd abcd abcd \n",
      "answerC": " a a a a \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " abcd a a a is the output as x is modified only after \u2018abcd\u2019 has been printed once. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all tough questions on Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 While and For Loops \u2013 2 \u00bb  Next - Python Questions and Answers \u2013 While and For Loops \u2013 4   Related Posts: Apply for  Programming Internship \n Practice  Programming MCQs \n Check  Information Technology Books \n Apply for  Python Internship \n Check  Python Books \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 While and For Loops \u2013 5  \n Python Multiple Choice Questions \u2013 While and For Loops  \n Python Questions and Answers \u2013 While and For Loops \u2013 2  \n Python Questions and Answers \u2013 While and For Loops \u2013 6  \n Python Program to Print Numbers in a Range Without using Loops  \n Python MCQ \u2013 String \u2013 13  \n Python Questions and Answers \u2013 While and For Loops \u2013 4  \n Python Questions and Answers \u2013 Mapping Functions \u2013 3  \n Python MCQ \u2013 String \u2013 11  \n Python MCQ \u2013 String \u2013 12  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python Programs on Trees Linked List Programs in Python Python MCQ Questions Python Programs on Graphs Searching and Sorting in Python Popular Pages: Python Programming Examples C# String Programs C++ Algorithm Library C Programs on Recursion C# Programs on Functions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python Programs on Trees Linked List Programs in Python Python MCQ Questions Python Programs on Graphs Searching and Sorting in Python \n   \n \n \n \n \n \n \n   Popular Pages Python Programming Examples C# String Programs C++ Algorithm Library C Programs on Recursion C# Programs on Functions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.419 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 12:57:56  \n  Compression = gzip "
    },
    {
      "id": "239",
      "question": "What will be the output of the following Python code? \n \n \n \n \n \n i  =   0 \n while  i  <   5 :\n     print ( i ) \n    i + =   1 \n     if  i  ==   3 :\n         break \n else :\n     print ( 0 ) \n ",
      "answerA": " 0 1 2 0 \n",
      "answerB": " 0 1 2 \n",
      "answerC": " error \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The else part is not executed if control breaks out of the loop. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "240",
      "question": "What will be the output of the following Python code? \n i  =   0 \n while  i  <   3 :\n     print ( i ) \n    i + =   1 \n else :\n     print ( 0 ) \n ",
      "answerA": " 0 1 2 3 0 \n",
      "answerB": " 0 1 2 0 \n",
      "answerC": " 0 1 2 \n",
      "answerD": " error ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The else part is executed when the condition in the while statement is false. \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n "
    },
    {
      "id": "241",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n x  =   \"abcdef\" \n while  i  in  x:\n     print ( i ,  end = \" \" ) \n ",
      "answerA": " a b c d e f \n",
      "answerB": " abcdef \n",
      "answerC": " i i i i i i \u2026 \n",
      "answerD": " error ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " NameError, i is not defined. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "242",
      "question": "What will be the output of the following Python code? \n x  =   \"abcdef\" \ni  =   \"i\" \n while  i  in  x:\n     print ( i ,  end = \" \" ) \n ",
      "answerA": " no output \n",
      "answerB": " i i i i i i \u2026 \n",
      "answerC": " a b c d e f \n",
      "answerD": " abcdef ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " \u201ci\u201d is not in \u201cabcdef\u201d. \n "
    },
    {
      "id": "243",
      "question": "What will be the output of the following Python code? \n x  =   \"abcdef\" \ni  =   \"a\" \n while  i  in  x:\n     print ( i ,  end  =   \" \" ) \n ",
      "answerA": " no output \n",
      "answerB": " i i i i i i \u2026 \n",
      "answerC": " a a a a a a \u2026 \n",
      "answerD": " a b c d e f ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " As the value of i or x isn\u2019t changing, the condition will always evaluate to True. \n "
    },
    {
      "id": "244",
      "question": "What will be the output of the following Python code? \n x  =   \"abcdef\" \ni  =   \"a\" \n while  i  in  x:\n     print ( 'i' ,  end  =   \" \" ) \n ",
      "answerA": " no output \n",
      "answerB": " i i i i i i \u2026 \n",
      "answerC": " a a a a a a \u2026 \n",
      "answerD": " a b c d e f ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Here i i i i i \u2026 printed continuously because as the value of i or x isn\u2019t changing, the condition will always evaluate to True. But also here we use a citation marks on \u201ci\u201d, so, here i treated as a string, not like a variable. \n "
    },
    {
      "id": "245",
      "question": "What will be the output of the following Python code? \n x  =   \"abcdef\" \ni  =   \"a\" \n while  i  in  x:\n    x  =  x [ :- 1 ] \n     print ( i ,  end  =   \" \" ) \n ",
      "answerA": " i i i i i i \n",
      "answerB": " a a a a a a \n",
      "answerC": " a a a a a \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The string x is being shortened by one character in each iteration. \n "
    },
    {
      "id": "246",
      "question": "What will be the output of the following Python code? \n x  =   \"abcdef\" \ni  =   \"a\" \n while  i  in  x [ :- 1 ] :\n     print ( i ,  end  =   \" \" ) \n ",
      "answerA": " a a a a a \n",
      "answerB": " a a a a a a \n",
      "answerC": " a a a a a a \u2026 \n",
      "answerD": " a ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " String x is not being altered and i is in x[:-1]. \n "
    },
    {
      "id": "247",
      "question": "What will be the output of the following Python code? \n x  =   \"abcdef\" \ni  =   \"a\" \n while  i  in  x:\n    x  =  x [ 1 : ] \n     print ( i ,  end  =   \" \" ) \n ",
      "answerA": " a a a a a a \n",
      "answerB": " a \n",
      "answerC": " no output \n",
      "answerD": " error ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The string x is being shortened by one character in each iteration. \n "
    },
    {
      "id": "248",
      "question": "What will be the output of the following Python code? \n x  =   \"abcdef\" \ni  =   \"a\" \n while  i  in  x [ 1 : ] :\n     print ( i ,  end  =   \" \" ) \n ",
      "answerA": " a a a a a a \n",
      "answerB": " a \n",
      "answerC": " no output \n",
      "answerD": " error ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " i is not in x[1:]. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all advanced questions on Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Multiple Choice Questions \u2013 While and For Loops \u00bb  Next - Python Questions and Answers \u2013 While and For Loops \u2013 3   Related Posts: Check  Python Books \n Practice  Programming MCQs \n Apply for  Python Internship \n Check  Information Technology Books \n Apply for  Programming Internship \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Multiple Choice Questions \u2013 While and For Loops  \n Python Questions and Answers \u2013 While and For Loops \u2013 6  \n Python Questions and Answers \u2013 While and For Loops \u2013 5  \n Python Questions and Answers \u2013 While and For Loops \u2013 3  \n Python Questions and Answers \u2013 While and For Loops \u2013 4  \n Python Program to Print Numbers in a Range Without using Loops  \n Python Questions and Answers \u2013 Mapping Functions \u2013 2  \n Python Questions and Answers \u2013 Global vs Local Variables \u2013 1  \n Python Question and Answers \u2013 Sys Module  \n Python Program to Implement Stack  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python Programs on Trees Linked List Programs in Python Python Programs on Graphs Python MCQ Questions Searching and Sorting in Python Popular Pages: Python Programming Examples PHP MCQ Questions C++ Algorithm Library Java Programming MCQ Questions C# Programs on Functions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python Programs on Trees Linked List Programs in Python Python Programs on Graphs Python MCQ Questions Searching and Sorting in Python \n   \n \n \n \n \n \n \n   Popular Pages Python Programming Examples PHP MCQ Questions C++ Algorithm Library Java Programming MCQ Questions C# Programs on Functions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.523 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 02:02:57  \n  Compression = gzip "
    },
    {
      "id": "249",
      "question": "What will be the output of the following Python code? \n \n \n \n \n \n x  =   [ 'ab' ,   'cd' ] \n for  i  in  x:\n    i. upper ( ) \n print ( x ) \n ",
      "answerA": " [\u2018ab\u2019, \u2018cd\u2019]  \n",
      "answerB": " [\u2018AB\u2019, \u2018CD\u2019]  \n",
      "answerC": " [None, None]  \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The function upper() does not modify a string in place, it returns a new string which isn\u2019t being stored anywhere. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "250",
      "question": "What will be the output of the following Python code? \n x  =   [ 'ab' ,   'cd' ] \n for  i  in  x:\n    x. append ( i. upper ( ) ) \n print ( x ) \n ",
      "answerA": " [\u2018AB\u2019, \u2018CD\u2019]  \n",
      "answerB": " [\u2018ab\u2019, \u2018cd\u2019, \u2018AB\u2019, \u2018CD\u2019]  \n",
      "answerC": " [\u2018ab\u2019, \u2018cd\u2019]  \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The loop does not terminate as new elements are being added to the list in each iteration. \n \n \n    \nNote: Join free Sanfoundry classes at  Telegram  or  Youtube \n \n \n \n \n \n \n \n "
    },
    {
      "id": "251",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n i  =   1 \n while   True :\n     if  i% 3   ==   0 :\n         break \n     print ( i ) \n\u00a0\n    i +  =   1 \n ",
      "answerA": " 1 2 \n",
      "answerB": " 1 2 3 \n",
      "answerC": " error \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " SyntaxError, there shouldn\u2019t be a space between + and = in +=. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "252",
      "question": "What will be the output of the following Python code? \n i  =   1 \n while   True :\n     if  i%0O7  ==   0 :\n         break \n     print ( i ) \n    i + =   1 \n ",
      "answerA": " 1 2 3 4 5 6 \n",
      "answerB": " 1 2 3 4 5 6 7 \n",
      "answerC": " error \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Control exits the loop when i becomes "
    },
    {
      "id": "253",
      "question": "What will be the output of the following Python code? \n i  =   5 \n while   True :\n     if  i%0O11  ==   0 :\n         break \n     print ( i ) \n    i + =   1 \n ",
      "answerA": " 5 6 7 8 9 10 \n",
      "answerB": " 5 6 7 8 \n",
      "answerC": " 5 6 \n",
      "answerD": " error ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " 0O11 is an octal number. \n "
    },
    {
      "id": "254",
      "question": "What will be the output of the following Python code? \n i  =   5 \n while   True :\n     if  i%0O9  ==   0 :\n         break \n     print ( i ) \n    i + =   1 \n ",
      "answerA": " 5 6 7 8 \n",
      "answerB": " 5 6 7 8 9 \n",
      "answerC": " 5 6 7 8 9 10 11 12 13 14 15 \u2026. \n",
      "answerD": " error ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " 9 isn\u2019t allowed in an octal number. \n "
    },
    {
      "id": "255",
      "question": "What will be the output of the following Python code? \n i  =   1 \n while   True :\n     if  i% 2   ==   0 :\n         break \n     print ( i ) \n    i + =   2 \n ",
      "answerA": " 1 \n",
      "answerB": " 1 2 \n",
      "answerC": " 1 2 3 4 5 6 \u2026 \n",
      "answerD": " 1 3 5 7 9 11 \u2026 ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The loop does not terminate since i is never an even number. \n "
    },
    {
      "id": "256",
      "question": "What will be the output of the following Python code? \n i  =   2 \n while   True :\n     if  i% 3   ==   0 :\n         break \n     print ( i ) \n    i + =   2 \n ",
      "answerA": " 2 4 6 8 10 \u2026 \n",
      "answerB": " 2 4 \n",
      "answerC": " 2 3 \n",
      "answerD": " error ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The numbers 2 and 4 are printed. The next value of i is 6 which is divisible by 3 and hence control exits the loop. \n "
    },
    {
      "id": "257",
      "question": "What will be the output of the following Python code? \n i  =   1 \n while   False :\n     if  i% 2   ==   0 :\n         break \n     print ( i ) \n    i + =   2 \n ",
      "answerA": " 1 \n",
      "answerB": " 1 3 5 7 \u2026 \n",
      "answerC": " 1 2 3 4 \u2026 \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Control does not enter the loop because of False. \n "
    },
    {
      "id": "258",
      "question": "What will be the output of the following Python code? \n True   =   False \n while   True :\n     print ( True ) \n     break \n ",
      "answerA": " True \n",
      "answerB": " False \nc) None \nd) none of the mentioned ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " SyntaxError, True is a keyword and it\u2019s value cannot be changed. \n More MCQs on While and For Loops in Python: \n \n Python While and For Loops MCQ (Set 2) \n Python While and For Loops MCQ (Set 3) \n Python While and For Loops MCQ (Set 4) \n Python While and For Loops MCQ (Set 5) \n Python While and For Loops MCQ (Set 6) \n \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 Decorators \u00bb  Next - Python Questions and Answers \u2013 While and For Loops \u2013 2   Related Posts: Practice  Programming MCQs \n Check  Python Books \n Apply for  Programming Internship \n Check  Information Technology Books \n Apply for  Python Internship \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 While and For Loops \u2013 3  \n Python Multiple Choice Questions \u2013 Mapping Functions  \n Python Questions and Answers \u2013 While and For Loops \u2013 2  \n Python Questions and Answers \u2013 While and For Loops \u2013 6  \n Python Program to Print Numbers in a Range Without using Loops  \n Python Questions and Answers \u2013 While and For Loops \u2013 5  \n Python Multiple Choice Questions \u2013 String  \n Python Multiple Choice Questions \u2013 List Comprehension  \n Python Questions and Answers \u2013 While and For Loops \u2013 4  \n Python Multiple Choice Questions \u2013 Argument Parsing  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python MCQ Questions Python Programs on Trees Linked List Programs in Python Python Programs on Graphs PHP MCQ Questions Popular Pages: Visual Basic MCQ Questions Searching and Sorting in Python JavaScript MCQ Questions Python Programming Examples Java Programming MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python MCQ Questions Python Programs on Trees Linked List Programs in Python Python Programs on Graphs PHP MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Visual Basic MCQ Questions Searching and Sorting in Python JavaScript MCQ Questions Python Programming Examples Java Programming MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.393 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 00:24:48  \n  Compression = gzip "
    },
    {
      "id": "259",
      "question": "What will be the output of the following Python statement? \n \n \n \n \n \n >>> \"a\" + \"bc\" \n ",
      "answerA": " a \n",
      "answerB": " bc \n",
      "answerC": " bca \n",
      "answerD": " abc ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " + operator is concatenation operator.  \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "260",
      "question": "What will be the output of the following Python statement? \n >>> \"abcd\" [ 2 : ] \n ",
      "answerA": " a \n",
      "answerB": " ab \n",
      "answerC": " cd \n",
      "answerD": " dc ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Slice operation is performed on string.  \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n "
    },
    {
      "id": "261",
      "question": "The output of executing string.ascii_letters can also be achieved by: \n",
      "answerA": " string.ascii_lowercase_string.digits \n",
      "answerB": " string.ascii_lowercase+string.ascii_uppercase \n",
      "answerC": " string.letters \n",
      "answerD": " string.lowercase_string.uppercase ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Execute in shell and check.  \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "262",
      "question": "What will be the output of the following Python code? \n >>>  str1  =   'hello' >>>  str2  =   ',' >>>  str3  =   'world' >>>  str1 [ - 1 : ] \n ",
      "answerA": " olleh \n",
      "answerB": " hello \n",
      "answerC": " h \n",
      "answerD": " o ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " -1 corresponds to the last index. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "263",
      "question": "What arithmetic operators cannot be used with strings? \n",
      "answerA": " + \n",
      "answerB": " * \n",
      "answerC": " \u2013 \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " + is used to concatenate and * is used to multiply strings. \n "
    },
    {
      "id": "264",
      "question": "What will be the output of the following Python code? \n >>> print  ( r \" \\n hello\" ) \n ",
      "answerA": " a new line and hello \n",
      "answerB": " \\nhello \n",
      "answerC": " the letter r and then hello \n",
      "answerD": " error ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " When prefixed with the letter \u2018r\u2019 or \u2018R\u2019 a string literal becomes a raw string and the escape sequences such as \\n are not converted.  \n "
    },
    {
      "id": "265",
      "question": "What will be the output of the following Python statement? \n >>> print ( 'new'   'line' ) \n ",
      "answerA": " Error \n",
      "answerB": " Output equivalent to print \u2018new\\nline\u2019 \n",
      "answerC": " newline \n",
      "answerD": " new line ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " String literal separated by whitespace are allowed. They are concatenated. \n "
    },
    {
      "id": "266",
      "question": "What will be the output of the following Python statement? \n >>>  print ( 'x\\97 \\x98 ' ) \n ",
      "answerA": " Error \n",
      "answerB": "  \n    97\r\n   98 \n ",
      "answerC": " x\\97 \n",
      "answerD": " \\x97\\x98 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " \\x is an escape sequence that means the following 2 digits are a hexadecimal number encoding a character. \n "
    },
    {
      "id": "267",
      "question": "What will be the output of the following Python code? \n >>> str1 = \"helloworld\" >>> str1 [ :: - 1 ] \n ",
      "answerA": " dlrowolleh \n",
      "answerB": " hello \n",
      "answerC": " world \n",
      "answerD": " helloworld ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Execute in shell to verify. \n "
    },
    {
      "id": "268",
      "question": "What will be the output of the following Python code? \n print ( 0xA   +   0xB   +   0xC ) \n ",
      "answerA": " 0xA0xB0xC \n",
      "answerB": " Error \n",
      "answerC": " 0x22 \n",
      "answerD": " 33 ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " 0xA and 0xB and 0xC are hexadecimal integer literals representing the decimal values 10, 11 and 12 respectively. There sum is "
    },
    {
      "id": "269",
      "question": "What will be the output of the following Python code? \n \n \n \n \n \n print ( \"ab \\t cd \\t ef\" . expandtabs ( ) ) \n ",
      "answerA": " ab\u2003\u2003cd\u2003\u2003ef \n",
      "answerB": " abcdef \n",
      "answerC": " ab\\tcd\\tef \n",
      "answerD": " ab\u2003cd\u2003ef ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Each \\t is converted to 8 blank spaces by default. \n \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "270",
      "question": "What will be the output of the following Python code? \n print ( \"ab \\t cd \\t ef\" . expandtabs ( 4 ) ) \n ",
      "answerA": " ab\u2003\u00a0\u00a0cd\u2003\u00a0\u00a0ef \n",
      "answerB": " abcdef \n",
      "answerC": " ab\\tcd\\tef \n",
      "answerD": " ab\u2003cd\u2003ef ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Each \\t is converted to 4 blank spaces. \n \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n "
    },
    {
      "id": "271",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n print ( \"ab \\t cd \\t ef\" . expandtabs ( '+' ) ) \n ",
      "answerA": " ab+cd+ef \n",
      "answerB": " ab++++++++cd++++++++ef \n",
      "answerC": " ab\u2003cd\u2003ef \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " TypeError, an integer should be passed as an argument. \n \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "272",
      "question": "What will be the output of the following Python code? \n print ( \"abcdef\" . find ( \"cd\" )   ==   \"cd\"   in   \"abcdef\" ) \n ",
      "answerA": " True \n",
      "answerB": " False \nc) Error \nd) None of the mentioned ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The function find() returns the position of the sunstring in the given string whereas the in keyword returns a value of Boolean type. \n "
    },
    {
      "id": "273",
      "question": "What will be the output of the following Python code? \n print ( \"abcdef\" . find ( \"cd\" ) ) \n ",
      "answerA": " True \n",
      "answerB": " 2 \nc) 3 \nd) None of the mentioned ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The first position in the given string at which the substring can be found is returned. \n "
    },
    {
      "id": "274",
      "question": "What will be the output of the following Python code? \n print ( \"ccdcddcd\" . find ( \"c\" ) ) \n ",
      "answerA": " 4 \n",
      "answerB": " 0 \n",
      "answerC": " Error \n",
      "answerD": " True ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The first position in the given string at which the substring can be found is returned. \n "
    },
    {
      "id": "275",
      "question": "What will be the output of the following Python code? \n print ( \"Hello {0} and {1}\" . format ( 'foo' ,   'bin' ) ) \n ",
      "answerA": " Hello foo and bin \n",
      "answerB": " Hello {0} and {1} foo bin \n",
      "answerC": " Error \n",
      "answerD": " Hello 0 and 1 ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The numbers 0 and 1 represent the position at which the strings are present. \n "
    },
    {
      "id": "276",
      "question": "What will be the output of the following Python code? \n print ( \"Hello {1} and {0}\" . format ( 'bin' ,   'foo' ) ) \n ",
      "answerA": " Hello foo and bin \n",
      "answerB": " Hello bin and foo \n",
      "answerC": " Error \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The numbers 0 and 1 represent the position at which the strings are present. \n "
    },
    {
      "id": "277",
      "question": "What will be the output of the following Python code? \n print ( \"Hello {} and {}\" . format ( 'foo' ,   'bin' ) ) \n ",
      "answerA": " Hello foo and bin \n",
      "answerB": " Hello {} and {} \n",
      "answerC": " Error \n",
      "answerD": " Hello and ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " It is the same as Hello {0} and {1}. \n "
    },
    {
      "id": "278",
      "question": "What will be the output of the following Python code? \n print ( \"Hello {name1} and {name2}\" . format ( 'foo' ,   'bin' ) ) \n ",
      "answerA": " Hello foo and bin \n",
      "answerB": " Hello {name1} and {name2} \n",
      "answerC": " Error \n",
      "answerD": " Hello and ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The arguments passed to the function format aren\u2019t keyword arguments. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python MCQ \u2013 String \u2013 6 \u00bb  Next - Python MCQ \u2013 String \u2013 8   Related Posts: Apply for  Python Internship \n Practice  Programming MCQs \n Check  Python Books \n Apply for  Programming Internship \n Check  Information Technology Books \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python MCQ \u2013 String \u2013 5  \n Python MCQ \u2013 String \u2013 11  \n Python Questions and Answers \u2013 While and For Loops \u2013 2  \n Python MCQ \u2013 String \u2013 13  \n Python MCQ \u2013 String \u2013 10  \n Python MCQ \u2013 String \u2013 8  \n Python MCQ \u2013 String \u2013 9  \n Python MCQ \u2013 String \u2013 6  \n Python MCQ \u2013 String \u2013 12  \n Python MCQ \u2013 String \u2013 3  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python Programs on Trees Linked List Programs in Python Python Programs on Graphs Searching and Sorting in Python String Programs in C++ Popular Pages: Python MCQ Questions Python Programming Examples C# String Programs String Programs in C Java String Programs: Code Examples & Solutions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python Programs on Trees Linked List Programs in Python Python Programs on Graphs Searching and Sorting in Python String Programs in C++ \n   \n \n \n \n \n \n \n   Popular Pages Python MCQ Questions Python Programming Examples C# String Programs String Programs in C Java String Programs: Code Examples & Solutions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.175 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 00:27:43  \n  Compression = gzip "
    },
    {
      "id": "279",
      "question": "What will be the output of the following Python code? \n \n \n \n \n \n print ( \"xyyzxyzxzxyy\" . count ( 'yy' ) ) \n ",
      "answerA": " 2 \n",
      "answerB": " 0 \n",
      "answerC": " error \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Counts the number of times the substring \u2018yy\u2019 is present in the given string. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "280",
      "question": "What will be the output of the following Python code? \n print ( \"xyyzxyzxzxyy\" . count ( 'yy' ,   1 ) ) \n ",
      "answerA": " 2 \n",
      "answerB": " 0 \n",
      "answerC": " 1 \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Counts the number of times the substring \u2018yy\u2019 is present in the given string, starting from position "
    },
    {
      "id": "281",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n print ( \"xyyzxyzxzxyy\" . count ( 'yy' ,   2 ) ) \n ",
      "answerA": " 2 \n",
      "answerB": " 0 \n",
      "answerC": " 1 \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Counts the number of times the substring \u2018yy\u2019 is present in the given string, starting from position "
    },
    {
      "id": "282",
      "question": "What will be the output of the following Python code? \n print ( \"xyyzxyzxzxyy\" . count ( 'xyy' ,   0 ,   100 ) ) \n ",
      "answerA": " 2 \n",
      "answerB": " 0 \n",
      "answerC": " 1 \n",
      "answerD": " error ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " An error will not occur if the end value is greater than the length of the string itself. \n "
    },
    {
      "id": "283",
      "question": "What will be the output of the following Python code? \n print ( \"xyyzxyzxzxyy\" . count ( 'xyy' ,   2 ,   11 ) ) \n ",
      "answerA": " 2 \n",
      "answerB": " 0 \n",
      "answerC": " 1 \n",
      "answerD": " error ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Counts the number of times the substring \u2018xyy\u2019 is present in the given string, starting from position 2 and ending at position "
    },
    {
      "id": "284",
      "question": "What will be the output of the following Python code? \n print ( \"xyyzxyzxzxyy\" . count ( 'xyy' ,  - 10 ,  - 1 ) ) \n ",
      "answerA": " 2 \n",
      "answerB": " 0 \n",
      "answerC": " 1 \n",
      "answerD": " error ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Counts the number of times the substring \u2018xyy\u2019 is present in the given string, starting from position 2 and ending at position "
    },
    {
      "id": "285",
      "question": "What will be the output of the following Python code? \n print ( 'abc' . encode ( ) ) \n ",
      "answerA": " abc \n",
      "answerB": " \u2018abc\u2019 \n",
      "answerC": " b\u2019abc\u2019 \n",
      "answerD": " h\u2019abc\u2019 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " A bytes object is returned by encode. \n "
    },
    {
      "id": "286",
      "question": "What is the default value of encoding in encode()? \n",
      "answerA": " ascii \n",
      "answerB": " qwerty \n",
      "answerC": " utf-8 \n",
      "answerD": " utf-16 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The default value of encoding is utf-"
    },
    {
      "id": "287",
      "question": "What will be the output of the following Python code? \n print ( \"xyyzxyzxzxyy\" . endswith ( \"xyy\" ) ) \n ",
      "answerA": " 1 \n",
      "answerB": " True \n",
      "answerC": " 3 \n",
      "answerD": " 2 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The function returns True if the given string ends with the specified substring. \n "
    },
    {
      "id": "288",
      "question": "What will be the output of the following Python code? \n print ( \"xyyzxyzxzxyy\" . endswith ( \"xyy\" ,   0 ,   2 ) ) \n ",
      "answerA": " 0 \n",
      "answerB": " 1 \n",
      "answerC": " True \n",
      "answerD": " False ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The function returns False if the given string does not end with the specified substring. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python MCQ \u2013 String \u2013 5 \u00bb  Next - Python MCQ \u2013 String \u2013 7   Related Posts: Practice  Programming MCQs \n Check  Information Technology Books \n Apply for  Programming Internship \n Check  Python Books \n Apply for  Python Internship \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Program to Check if the Substring is Present in the Given String  \n Python MCQ \u2013 String \u2013 12  \n Python MCQ \u2013 String \u2013 7  \n Python Program to Count the Number of Words and Characters in a String  \n Python Program to Calculate the Length of a String Without using Library Functions  \n Python Program to Count Number of Vowels in a String using Sets  \n Python Program to Create a New String Made up of First and Last 2 Characters  \n Python Program to Count Number of Lowercase Characters in a String  \n Python MCQ \u2013 String \u2013 5  \n Python Program to Count the Number of Vowels in a String  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: C# String Programs String Programs in C Python Programs on Trees String Programs in C++ Linked List Programs in Python Popular Pages: Java String Programs: Code Examples & Solutions Python Programming Examples Python Programs on Graphs Searching and Sorting in Python Python MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics C# String Programs String Programs in C Python Programs on Trees String Programs in C++ Linked List Programs in Python \n   \n \n \n \n \n \n \n   Popular Pages Java String Programs: Code Examples & Solutions Python Programming Examples Python Programs on Graphs Searching and Sorting in Python Python MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.085 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 00:27:43  \n  Compression = gzip "
    },
    {
      "id": "289",
      "question": "What will be the output of the following Python code? \n \n \n \n \n \n print ( \"abc DEF\" . capitalize ( ) ) \n ",
      "answerA": " abc def \n",
      "answerB": " ABC DEF \n",
      "answerC": " Abc def \n",
      "answerD": " Abc Def ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The first letter of the string is converted to uppercase and the others are converted to lowercase. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "290",
      "question": "What will be the output of the following Python code? \n print ( \"abc. DEF\" . capitalize ( ) ) \n ",
      "answerA": " abc. def \n",
      "answerB": " ABC. DEF \n",
      "answerC": " Abc. def \n",
      "answerD": " Abc. Def ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The first letter of the string is converted to uppercase and the others are converted to lowercase. \n \n \n    \nNote: Join free Sanfoundry classes at  Telegram  or  Youtube \n \n \n \n \n \n \n \n "
    },
    {
      "id": "291",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n print ( \"abcdef\" . center ( ) ) \n ",
      "answerA": " cd \n",
      "answerB": " abcdef \n",
      "answerC": " error \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The function center() takes at least one parameter. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "292",
      "question": "What will be the output of the following Python code? \n print ( \"abcdef\" . center ( 0 ) ) \n ",
      "answerA": " cd \n",
      "answerB": " abcdef \n",
      "answerC": " error \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The entire string is printed when the argument passed to center() is less than the length of the string. \n "
    },
    {
      "id": "293",
      "question": "What will be the output of the following Python code? \n print ( '*' ,   \"abcdef\" . center ( 7 ) ,   '*' ) \n ",
      "answerA": " * abcdef  * \n",
      "answerB": " *  abcdef * \n",
      "answerC": " *abcdef * \n",
      "answerD": " * abcdef* ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Padding is done towards the left-hand-side first when the final string is of odd length. Extra spaces are present since we haven\u2019t overridden the value of sep. \n "
    },
    {
      "id": "294",
      "question": "What will be the output of the following Python code? \n print ( '*' ,   \"abcdef\" . center ( 7 ) ,   '*' ,  sep = '' ) \n ",
      "answerA": " * abcdef  * \n",
      "answerB": " *  abcdef * \n",
      "answerC": " *abcdef * \n",
      "answerD": " * abcdef* ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Padding is done towards the left-hand-side first when the final string is of odd length. \n "
    },
    {
      "id": "295",
      "question": "What will be the output of the following Python code? \n print ( '*' ,   \"abcde\" . center ( 6 ) ,   '*' ,  sep = '' ) \n ",
      "answerA": " * abcde  * \n",
      "answerB": " *  abcde * \n",
      "answerC": " *abcde * \n",
      "answerD": " * abcde* ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Padding is done towards the right-hand-side first when the final string is of even length. \n "
    },
    {
      "id": "296",
      "question": "What will be the output of the following Python code? \n print ( \"abcdef\" . center ( 7 ,   1 ) ) \n ",
      "answerA": " 1abcdef \n",
      "answerB": " abcdef1 \n",
      "answerC": "  abcdef \n",
      "answerD": " error ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " TypeError, the fill character must be a character, not an int. \n "
    },
    {
      "id": "297",
      "question": "What will be the output of the following Python code? \n print ( \"abcdef\" . center ( 7 ,   '1' ) ) \n ",
      "answerA": " 1abcdef \n",
      "answerB": " abcdef1 \n",
      "answerC": "  abcdef \n",
      "answerD": " error ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The character \u20181\u2019 is used for padding instead of a space. \n "
    },
    {
      "id": "298",
      "question": "What will be the output of the following Python code? \n print ( \"abcdef\" . center ( 10 ,   '12' ) ) \n ",
      "answerA": " 12abcdef12 \n",
      "answerB": " abcdef1212 \n",
      "answerC": " 1212abcdef \n",
      "answerD": " error ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The fill character must be exactly one character long. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all basic questions on Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python MCQ \u2013 String \u2013 4 \u00bb  Next - Python MCQ \u2013 String \u2013 6   Related Posts: Check  Information Technology Books \n Check  Python Books \n Practice  Programming MCQs \n Apply for  Python Internship \n Apply for  Programming Internship \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python MCQ \u2013 String \u2013 7  \n Python MCQ \u2013 String \u2013 13  \n Python MCQ \u2013 String \u2013 11  \n Python MCQ \u2013 String \u2013 6  \n Python MCQ \u2013 String \u2013 8  \n Python Multiple Choice Questions \u2013 String  \n Python MCQ \u2013 String \u2013 12  \n Python MCQ \u2013 String \u2013 9  \n Python Program to Check String is Palindrome using Stack  \n Python MCQ \u2013 String \u2013 3  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python Programs on Trees Linked List Programs in Python String Programs in C Python MCQ Questions Python Programs on Graphs Popular Pages: C# String Programs Python Programming Examples String Programs in C++ Searching and Sorting in Python Java String Programs: Code Examples & Solutions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python Programs on Trees Linked List Programs in Python String Programs in C Python MCQ Questions Python Programs on Graphs \n   \n \n \n \n \n \n \n   Popular Pages C# String Programs Python Programming Examples String Programs in C++ Searching and Sorting in Python Java String Programs: Code Examples & Solutions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.720 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 00:53:30  \n  Compression = gzip "
    },
    {
      "id": "299",
      "question": "What is \u201cHello\u201d.replace(\u201cl\u201d, \u201ce\u201d)? \n",
      "answerA": " Heeeo \n",
      "answerB": " Heelo \n",
      "answerC": " Heleo \n",
      "answerD": " None ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Execute in shell to verify.  \n \n \n \n \n \n "
    },
    {
      "id": "300",
      "question": "To retrieve the character at index 3 from string s=\u201dHello\u201d what command do we execute (multiple answers allowed)? \n",
      "answerA": " s[]  \n",
      "answerB": " s.getitem(3) \n",
      "answerC": " s.__getitem__(3) \n",
      "answerD": "? \na) s[]  \nb) s.getitem(3) \nc) s.__getitem__(3) \n",
      "correctAnswer": " c \n",
      "trackName": "Computer Science",
      "explanation": " __getitem(..) can be used to get character at index specified as parameter.  \n "
    },
    {
      "id": "301",
      "question": "To return the length of string s what command do we execute? \n",
      "answerA": " s.__len__() \n",
      "answerB": " len(s) \n",
      "answerC": " size(s) \n",
      "answerD": " s.size() ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Execute in shell to verify.  \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "302",
      "question": "If a class defines the __str__(self) method, for an object obj for the class, you can use which command to invoke the __str__ method. \n",
      "answerA": " obj.__str__() \n",
      "answerB": " str(obj) \n",
      "answerC": " print obj \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Execute in shell to verify. \n "
    },
    {
      "id": "303",
      "question": "To check whether string s1 contains another string s2, use ________ \n",
      "answerA": " s1.__contains__(s2) \n",
      "answerB": " s2 in s1 \n",
      "answerC": " s1.contains(s2) \n",
      "answerD": " si.in(s2) ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " s2 in s1 works in the same way as calling the special function __contains__ . \n \n \n    \nNote: Join free Sanfoundry classes at  Telegram  or  Youtube \n \n \n \n \n \n \n \n "
    },
    {
      "id": "304",
      "question": "Suppose i is 5 and j is 4, i + j is same as ________ \n",
      "answerA": " i.__add(j) \n",
      "answerB": " i.__add__(j) \n",
      "answerC": " i.__Add(j) \n",
      "answerD": " i.__ADD(j) ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Execute in shell to verify.  \n "
    },
    {
      "id": "305",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n class  Count :     def __init__ ( self, count  =   0 ) :        self.__count  =  count \u00a0 c1  =  Count ( 2 ) c2  =  Count ( 2 ) print ( id ( c1 )   ==  id ( c2 ) , end  =   \" \" ) \u00a0 s1  =   \"Good\" s2  =   \"Good\" print ( id ( s1 )   ==  id ( s2 ) ) \n ",
      "answerA": " True False \n",
      "answerB": " True True \nc) False True \nd) False False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Execute in the shell objects cannot have same id, however in the case of strings its different. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "306",
      "question": "What will be the output of the following Python code? \n class  Name :     def __init__ ( self, firstName, mi, lastName ) :         self. firstName   =  firstName         self. mi   =  mi         self. lastName   =  lastName \u00a0 firstName  =   \"John\" name  =  Name ( firstName,  'F' ,  \"Smith\" ) firstName  =   \"Peter\" name. lastName   =   \"Pan\" print ( name. firstName , name. lastName ) \n ",
      "answerA": " Peter Pan \n",
      "answerB": " John Pan \n",
      "answerC": " Peter Smith \n",
      "answerD": " John Smith ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Execute in the shell to verify. \n "
    },
    {
      "id": "307",
      "question": "What function do you use to read a string? \n",
      "answerA": " input(\u201cEnter a string\u201d) \n",
      "answerB": " eval(input(\u201cEnter a string\u201d)) \n",
      "answerC": " enter(\u201cEnter a string\u201d) \n",
      "answerD": " eval(enter(\u201cEnter a string\u201d)) ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Execute in shell to verify. \n "
    },
    {
      "id": "308",
      "question": "Suppose x is 345.3546, what is format(x, \u201c10.3f\u201d) (_ indicates space). \n",
      "answerA": " __345.355 \n",
      "answerB": " ___345.355 \n",
      "answerC": " ____345.355 \n",
      "answerD": " _____345.354 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Execute in the shell to verify. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all coding questions on Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python MCQ \u2013 String \u2013 3 \u00bb  Next - Python MCQ \u2013 String \u2013 5   Related Posts: Check  Python Books \n Check  Information Technology Books \n Apply for  Programming Internship \n Apply for  Python Internship \n Practice  Programming MCQs \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python MCQ \u2013 String \u2013 3  \n Python Program to Remove the nth Index Character from a Non-Empty String  \n Python Questions and Answers \u2013 Lists \u2013 2  \n Python Program to Remove Odd Indexed Characters in a string  \n Python Multiple Choice Questions \u2013 String  \n Python MCQ \u2013 String \u2013 2  \n Python Program to Check String is Palindrome using Stack  \n Python Questions and Answers \u2013 Lists \u2013 5  \n Python Multiple Choice Questions \u2013 Lists  \n Python Program to Determine How Many Times a Given Letter Occurs in a String Recursively  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: C# String Programs String Programs in C String Programs in C++ Java String Programs: Code Examples & Solutions Python Programming Examples Popular Pages: Python MCQ Questions Searching and Sorting in Python Searching and Sorting Algorithms in C Python Programs on Trees Python Programs on Graphs    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics C# String Programs String Programs in C String Programs in C++ Java String Programs: Code Examples & Solutions Python Programming Examples \n   \n \n \n \n \n \n \n   Popular Pages Python MCQ Questions Searching and Sorting in Python Searching and Sorting Algorithms in C Python Programs on Trees Python Programs on Graphs \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.480 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 10:55:21  \n  Compression = gzip "
    },
    {
      "id": "309",
      "question": "What will be the output of the following Python code? \n \n \n \n \n \n class  father :     def __init__ ( self, param ) :         self. o1   =  param \u00a0 class  child ( father ) :     def __init__ ( self, param ) :         self. o2   =  param \u00a0 >>> obj  =  child ( 22 ) >>> print  \"%d %d\"   %   ( obj. o1 , obj. o2 ) \n ",
      "answerA": " None None \n",
      "answerB": " None 22 \n",
      "answerC": " 22 None \n",
      "answerD": " Error is generated ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " self.o1 was never created.  \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "310",
      "question": "What will be the output of the following Python code? \n class  tester :     def __init__ ( self, id ) :         self. id   =  str ( id )         id = \"224\" \u00a0 >>> temp  =  tester ( 12 ) >>> print ( temp. id ) \n ",
      "answerA": " 224 \n",
      "answerB": " Error \n",
      "answerC": " 12 \n",
      "answerD": " None ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Id in this case will be the attribute of the class.  \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n "
    },
    {
      "id": "311",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n >>> example  =   \"snow world\" >>> print ( \"%s\"   %  example [ 4 : 7 ] ) \n ",
      "answerA": " wo \n",
      "answerB": " world \n",
      "answerC": " sn \n",
      "answerD": " rl ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Execute in the shell and verify.  \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "312",
      "question": "What will be the output of the following Python code? \n >>> example  =   \"snow world\" >>> example [ 3 ]   =   's' >>> print example \n ",
      "answerA": " snow \n",
      "answerB": " snow world \n",
      "answerC": " Error \n",
      "answerD": " snos world ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Strings cannot be modified. \n "
    },
    {
      "id": "313",
      "question": "What will be the output of the following Python code? \n >>> max ( \"what are you\" ) \n ",
      "answerA": " error \n",
      "answerB": " u \n",
      "answerC": " t \n",
      "answerD": " y ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Max returns the character with the highest ascii value. \n "
    },
    {
      "id": "314",
      "question": "Given a string example=\u201dhello\u201d what is the output of example.count(\u2018l\u2019)? \n",
      "answerA": " 2 \n",
      "answerB": " 1 \n",
      "answerC": " None \n",
      "answerD": " 0 ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " l occurs twice in hello.  \n "
    },
    {
      "id": "315",
      "question": "What will be the output of the following Python code? \n >>> example  =   \"helle\" >>> example. find ( \"e\" ) \n ",
      "answerA": " Error \n",
      "answerB": " -1 \n",
      "answerC": " 1 \n",
      "answerD": " 0 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Returns lowest index. \n "
    },
    {
      "id": "316",
      "question": "What will be the output of the following Python code? \n >>> example  =   \"helle\" >>> example. rfind ( \"e\" ) \n ",
      "answerA": " -1 \n",
      "answerB": " 4 \n",
      "answerC": " 3 \n",
      "answerD": " 1 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Returns highest index. \n "
    },
    {
      "id": "317",
      "question": "What will be the output of the following Python code? \n >>> example = \"helloworld\" >>> example [ :: - 1 ] . startswith ( \"d\" ) \n ",
      "answerA": " dlrowolleh \n",
      "answerB": " True \n",
      "answerC": " -1 \n",
      "answerD": " None ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Starts with checks if the given string starts with the parameter that is passed. \n "
    },
    {
      "id": "318",
      "question": "To concatenate two strings to a third what statements are applicable? \n",
      "answerA": " s3 = s1 . s2 \n",
      "answerB": " s3 = s1.add(s2) \n",
      "answerC": " s3 = s1.__add__(s2) \n",
      "answerD": " s3 = s1 * s2 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " __add__ is another method that can be used for concatenation. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all advanced interview questions on Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Multiple Choice Questions \u2013 String \u00bb  Next - Python MCQ \u2013 String \u2013 3   Related Posts: Practice  Programming MCQs \n Check  Information Technology Books \n Apply for  Programming Internship \n Apply for  Python Internship \n Check  Python Books \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python MCQ \u2013 String \u2013 8  \n Python MCQ \u2013 String \u2013 13  \n Python MCQ \u2013 String \u2013 11  \n Python MCQ \u2013 String \u2013 9  \n Python MCQ \u2013 String \u2013 10  \n Python MCQ \u2013 String \u2013 7  \n Python MCQ \u2013 String \u2013 5  \n Python MCQ \u2013 String \u2013 6  \n Python MCQ \u2013 String \u2013 12  \n Python MCQ \u2013 String \u2013 3  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python Programs on Trees Linked List Programs in Python Python Programs on Graphs Searching and Sorting in Python Python MCQ Questions Popular Pages: Python Programming Examples C# String Programs String Programs in C++ String Programs in C Java String Programs: Code Examples & Solutions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python Programs on Trees Linked List Programs in Python Python Programs on Graphs Searching and Sorting in Python Python MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Python Programming Examples C# String Programs String Programs in C++ String Programs in C Java String Programs: Code Examples & Solutions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.358 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-04 00:56:18  \n  Compression = gzip "
    },
    {
      "id": "319",
      "question": "What will be the output of the following Python statement? \n \n \n \n \n \n >>> chr ( ord ( 'A' ) ) \n ",
      "answerA": " A \n",
      "answerB": " B \n",
      "answerC": " a \n",
      "answerD": " Error ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Execute in shell to verify.  \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "320",
      "question": "What will be the output of the following Python statement? \n >>> print ( chr ( ord ( 'b' ) + 1 ) ) \n ",
      "answerA": " a \n",
      "answerB": " b \n",
      "answerC": " c \n",
      "answerD": " A ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Execute in the shell to verify.  \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n "
    },
    {
      "id": "321",
      "question": "Which of the following statement prints hello\\example\\test.txt? \n",
      "answerA": " print(\u201chello\\example\\test.txt\u201d) \n",
      "answerB": " print(\u201chello\\\\example\\\\test.txt\u201d) \n",
      "answerC": " print(\u201chello\\\u201dexample\\\u201dtest.txt\u201d) \n",
      "answerD": " print(\u201chello\u201d\\example\u201d\\test.txt\u201d) ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " \\is used to indicate that the next \\ is not an escape sequence.  \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "322",
      "question": "Suppose s is \u201c\\t\\tWorld\\n\u201d, what is s.strip()? \n",
      "answerA": " \\t\\tWorld\\n \n",
      "answerB": " \\t\\tWorld\\n \n",
      "answerC": " \\t\\tWORLD\\n \n",
      "answerD": " World ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Execute help(string.strip) to find details. \n "
    },
    {
      "id": "323",
      "question": "The format function, when applied on a string returns ___________ \n",
      "answerA": " Error \n",
      "answerB": " int \n",
      "answerC": " bool \n",
      "answerD": " str ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Format function returns a string. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "324",
      "question": "What will be the output of the \u201chello\u201d +1+2+3? \n",
      "answerA": " hello123 \n",
      "answerB": " hello \n",
      "answerC": " Error \n",
      "answerD": " hello6 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Cannot concatenate str and int objects.  \n "
    },
    {
      "id": "325",
      "question": "What will be the output of the following Python code? \n >>> print ( \"D\" , end  =   ' ' ) >>> print ( \"C\" , end  =   ' ' ) >>> print ( \"B\" , end  =   ' ' ) >>> print ( \"A\" , end  =   ' ' ) \n ",
      "answerA": " DCBA \n",
      "answerB": " A, B, C, D \n",
      "answerC": " D C B A \n",
      "answerD": " D, C, B, A will be displayed on four lines ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Execute in the shell. \n "
    },
    {
      "id": "326",
      "question": "What will be the output of the following Python statement?(python 3.xx) \n >>> print ( format ( \"Welcome\" ,  \"10s\" ) , end  =   '#' ) >>> print ( format ( 111 ,  \"4d\" ) , end  =   '#' ) >>> print ( format ( 924.656 ,  \"3.2f\" ) ) \n ",
      "answerA": " \u00a0\u00a0\u00a0Welcome#\u00a0111#924.66 \n",
      "answerB": " Welcome#111#924.66 \n",
      "answerC": " Welcome#111#.66 \n",
      "answerD": " Welcome\u00a0\u00a0\u00a0#\u00a0111#924.66 ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Execute in the shell to verify. \n "
    },
    {
      "id": "327",
      "question": "What will be displayed by print(ord(\u2018b\u2019) \u2013 ord(\u2018a\u2019))? \n",
      "answerA": " 0 \n",
      "answerB": " 1 \n",
      "answerC": " -1 \n",
      "answerD": " 2 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " ASCII value of b is one more than a. Hence the output of this code is 98-97, which is equal to "
    },
    {
      "id": "328",
      "question": "Say s=\u201dhello\u201d what will be the return value of type(s)? \n",
      "answerA": " int \n",
      "answerB": " bool \n",
      "answerC": " str \n",
      "answerD": " String ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " str is used to represent strings in python. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all technical interview questions on Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python MCQ \u2013 String \u2013 2 \u00bb  Next - Python MCQ \u2013 String \u2013 4   Related Posts: Check  Information Technology Books \n Check  Python Books \n Practice  Programming MCQs \n Apply for  Programming Internship \n Apply for  Python Internship \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python MCQ \u2013 String \u2013 8  \n Python MCQ \u2013 String \u2013 7  \n Python MCQ \u2013 String \u2013 9  \n Python MCQ \u2013 String \u2013 6  \n Python MCQ \u2013 String \u2013 5  \n Python Program to Check String is Palindrome using Stack  \n Python MCQ \u2013 String \u2013 13  \n Python MCQ \u2013 String \u2013 12  \n Python MCQ \u2013 String \u2013 11  \n Python Program to Replace All Occurrences of \u2018a\u2019 with $ in a String  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python Programs on Trees C# String Programs Linked List Programs in Python Python Programs on Graphs Searching and Sorting in Python Popular Pages: String Programs in C++ Python MCQ Questions Python Programming Examples String Programs in C Java String Programs: Code Examples & Solutions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics C# String Programs Python Programs on Trees Linked List Programs in Python Python Programs on Graphs Searching and Sorting in Python \n   \n \n \n \n \n \n \n   Popular Pages Python MCQ Questions String Programs in C++ String Programs in C Python Programming Examples Java String Programs: Code Examples & Solutions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.752 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 01:01:43  \n  Compression = gzip "
    },
    {
      "id": "329",
      "question": "What is \u201cHello\u201d.replace(\u201cl\u201d, \u201ce\u201d)? \n",
      "answerA": " Heeeo \n",
      "answerB": " Heelo \n",
      "answerC": " Heleo \n",
      "answerD": " None ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Execute in shell to verify.  \n \n \n \n \n \n "
    },
    {
      "id": "330",
      "question": "To retrieve the character at index 3 from string s=\u201dHello\u201d what command do we execute (multiple answers allowed)? \n",
      "answerA": " s[]  \n",
      "answerB": " s.getitem(3) \n",
      "answerC": " s.__getitem__(3) \n",
      "answerD": "? \na) s[]  \nb) s.getitem(3) \nc) s.__getitem__(3) \n",
      "correctAnswer": " c \n",
      "trackName": "Computer Science",
      "explanation": " __getitem(..) can be used to get character at index specified as parameter.  \n "
    },
    {
      "id": "331",
      "question": "To return the length of string s what command do we execute? \n",
      "answerA": " s.__len__() \n",
      "answerB": " len(s) \n",
      "answerC": " size(s) \n",
      "answerD": " s.size() ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Execute in shell to verify.  \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "332",
      "question": "If a class defines the __str__(self) method, for an object obj for the class, you can use which command to invoke the __str__ method. \n",
      "answerA": " obj.__str__() \n",
      "answerB": " str(obj) \n",
      "answerC": " print obj \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Execute in shell to verify. \n "
    },
    {
      "id": "333",
      "question": "To check whether string s1 contains another string s2, use ________ \n",
      "answerA": " s1.__contains__(s2) \n",
      "answerB": " s2 in s1 \n",
      "answerC": " s1.contains(s2) \n",
      "answerD": " si.in(s2) ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " s2 in s1 works in the same way as calling the special function __contains__ . \n \n \n    \nNote: Join free Sanfoundry classes at  Telegram  or  Youtube \n \n \n \n \n \n \n \n "
    },
    {
      "id": "334",
      "question": "Suppose i is 5 and j is 4, i + j is same as ________ \n",
      "answerA": " i.__add(j) \n",
      "answerB": " i.__add__(j) \n",
      "answerC": " i.__Add(j) \n",
      "answerD": " i.__ADD(j) ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Execute in shell to verify.  \n "
    },
    {
      "id": "335",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n class  Count :     def __init__ ( self, count  =   0 ) :        self.__count  =  count \u00a0 c1  =  Count ( 2 ) c2  =  Count ( 2 ) print ( id ( c1 )   ==  id ( c2 ) , end  =   \" \" ) \u00a0 s1  =   \"Good\" s2  =   \"Good\" print ( id ( s1 )   ==  id ( s2 ) ) \n ",
      "answerA": " True False \n",
      "answerB": " True True \nc) False True \nd) False False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Execute in the shell objects cannot have same id, however in the case of strings its different. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "336",
      "question": "What will be the output of the following Python code? \n class  Name :     def __init__ ( self, firstName, mi, lastName ) :         self. firstName   =  firstName         self. mi   =  mi         self. lastName   =  lastName \u00a0 firstName  =   \"John\" name  =  Name ( firstName,  'F' ,  \"Smith\" ) firstName  =   \"Peter\" name. lastName   =   \"Pan\" print ( name. firstName , name. lastName ) \n ",
      "answerA": " Peter Pan \n",
      "answerB": " John Pan \n",
      "answerC": " Peter Smith \n",
      "answerD": " John Smith ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Execute in the shell to verify. \n "
    },
    {
      "id": "337",
      "question": "What function do you use to read a string? \n",
      "answerA": " input(\u201cEnter a string\u201d) \n",
      "answerB": " eval(input(\u201cEnter a string\u201d)) \n",
      "answerC": " enter(\u201cEnter a string\u201d) \n",
      "answerD": " eval(enter(\u201cEnter a string\u201d)) ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Execute in shell to verify. \n "
    },
    {
      "id": "338",
      "question": "Suppose x is 345.3546, what is format(x, \u201c10.3f\u201d) (_ indicates space). \n",
      "answerA": " __345.355 \n",
      "answerB": " ___345.355 \n",
      "answerC": " ____345.355 \n",
      "answerD": " _____345.354 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Execute in the shell to verify. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all coding questions on Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python MCQ \u2013 String \u2013 3 \u00bb  Next - Python MCQ \u2013 String \u2013 5   Related Posts: Check  Python Books \n Check  Information Technology Books \n Apply for  Programming Internship \n Apply for  Python Internship \n Practice  Programming MCQs \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python MCQ \u2013 String \u2013 3  \n Python Program to Remove the nth Index Character from a Non-Empty String  \n Python Questions and Answers \u2013 Lists \u2013 2  \n Python Program to Remove Odd Indexed Characters in a string  \n Python Multiple Choice Questions \u2013 String  \n Python MCQ \u2013 String \u2013 2  \n Python Program to Check String is Palindrome using Stack  \n Python Questions and Answers \u2013 Lists \u2013 5  \n Python Multiple Choice Questions \u2013 Lists  \n Python Program to Determine How Many Times a Given Letter Occurs in a String Recursively  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: C# String Programs String Programs in C String Programs in C++ Java String Programs: Code Examples & Solutions Python Programming Examples Popular Pages: Python MCQ Questions Searching and Sorting in Python Searching and Sorting Algorithms in C Python Programs on Trees Python Programs on Graphs    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics C# String Programs String Programs in C String Programs in C++ Java String Programs: Code Examples & Solutions Python Programming Examples \n   \n \n \n \n \n \n \n   Popular Pages Python MCQ Questions Searching and Sorting in Python Searching and Sorting Algorithms in C Python Programs on Trees Python Programs on Graphs \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.480 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 10:55:21  \n  Compression = gzip "
    },
    {
      "id": "339",
      "question": "What will be the output of the following Python code snippet? \n \n \n \n \n \n print ( 'abcdefcdghcd' . split ( 'cd' ,   2 ) ) \n ",
      "answerA": " [\u2018ab\u2019, \u2018ef\u2019, \u2018ghcd\u2019]  \n",
      "answerB": " [\u2018ab\u2019, \u2018efcdghcd\u2019]  \n",
      "answerC": " [\u2018abcdef\u2019, \u2018ghcd\u2019]  \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The string is split into a maximum of maxsplit+1 substrings. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "340",
      "question": "What will be the output of the following Python code snippet? \n print ( 'ab \\n cd \\n ef' . splitlines ( ) ) \n ",
      "answerA": " [\u2018ab\u2019, \u2018cd\u2019, \u2018ef\u2019]  \n",
      "answerB": " [\u2018ab\\n\u2019, \u2018cd\\n\u2019, \u2018ef\\n\u2019]  \n",
      "answerC": " [\u2018ab\\n\u2019, \u2018cd\\n\u2019, \u2018ef\u2019]  \n",
      "answerD": " [\u2018ab\u2019, \u2018cd\u2019, \u2018ef\\n\u2019]  ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " It is similar to calling split(\u2018\\n\u2019). \n \n \n    \nNote: Join free Sanfoundry classes at  Telegram  or  Youtube \n \n \n \n \n \n \n \n "
    },
    {
      "id": "341",
      "question": "What will be the output of the following Python code snippet? \n \n advertisement \n \n \n \n \n print ( 'Ab!2' . swapcase ( ) ) \n ",
      "answerA": " AB!@ \n",
      "answerB": " ab12 \n",
      "answerC": " aB!2 \n",
      "answerD": " aB1@ ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Lowercase letters are converted to uppercase and vice-versa. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "342",
      "question": "What will be the output of the following Python code snippet? \n print ( 'ab cd ef' . title ( ) ) \n ",
      "answerA": " Ab cd ef \n",
      "answerB": " Ab cd eF \n",
      "answerC": " Ab Cd Ef \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The first letter of every word is capitalized. \n "
    },
    {
      "id": "343",
      "question": "What will be the output of the following Python code snippet? \n print ( 'ab cd-ef' . title ( ) ) \n ",
      "answerA": " Ab cd-ef \n",
      "answerB": " Ab Cd-ef \n",
      "answerC": " Ab Cd-Ef \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The first letter of every word is capitalized. Special symbols terminate a word. \n "
    },
    {
      "id": "344",
      "question": "What will be the output of the following Python code snippet? \n print ( 'abcd' . translate ( 'a' . maketrans ( 'abc' ,   'bcd' ) ) ) \n ",
      "answerA": " bcde \n",
      "answerB": " abcd \n",
      "answerC": " error \n",
      "answerD": " bcdd ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The output is bcdd since no translation is provided for d. \n "
    },
    {
      "id": "345",
      "question": "What will be the output of the following Python code snippet? \n print ( 'abcd' . translate ( { 97 :  98 ,   98 :  99 ,   99 :  100 } ) ) \n ",
      "answerA": " bcde \n",
      "answerB": " abcd \n",
      "answerC": " error \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The output is bcdd since no translation is provided for d. \n "
    },
    {
      "id": "346",
      "question": "What will be the output of the following Python code snippet? \n print ( 'abcd' . translate ( { 'a' :  '1' ,   'b' :  '2' ,   'c' :  '3' ,   'd' :  '4' } ) ) \n ",
      "answerA": " abcd \n",
      "answerB": " 1234 \n",
      "answerC": " error \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The function translate expects a dictionary of integers. Use maketrans() instead of doing the above. \n "
    },
    {
      "id": "347",
      "question": "What will be the output of the following Python code snippet? \n print ( 'ab' . zfill ( 5 ) ) \n ",
      "answerA": " 000ab \n",
      "answerB": " 00ab0 \n",
      "answerC": " 0ab00 \n",
      "answerD": " ab000 ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The string is padded with zeros on the left hand side. It is useful for formatting numbers. \n "
    },
    {
      "id": "348",
      "question": "What will be the output of the following Python code snippet? \n print ( '+99' . zfill ( 5 ) ) \n ",
      "answerA": " 00+99 \n",
      "answerB": " 00099 \n",
      "answerC": " +0099 \n",
      "answerD": " +++99 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " zeros are filled in between the first sign and the rest of the string. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice entire question bank on Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python MCQ \u2013 String \u2013 12 \u00bb  Next - Python Multiple Choice Questions \u2013 Lists   Related Posts: Apply for  Python Internship \n Check  Python Books \n Apply for  Programming Internship \n Practice  Programming MCQs \n Check  Information Technology Books \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python MCQ \u2013 String \u2013 12  \n Python MCQ \u2013 String \u2013 8  \n Python MCQ \u2013 String \u2013 10  \n Python MCQ \u2013 String \u2013 9  \n Python MCQ \u2013 String \u2013 11  \n Python Questions and Answers \u2013 While and For Loops \u2013 6  \n Python Program to Remove the nth Index Character from a Non-Empty String  \n Python MCQ \u2013 String \u2013 5  \n Python MCQ \u2013 String \u2013 6  \n Python MCQ \u2013 String \u2013 7  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python Programs on Trees C# String Programs Linked List Programs in Python Searching and Sorting in Python Python MCQ Questions Popular Pages: Python Programs on Graphs Python Programming Examples String Programs in C++ String Programs in C Java String Programs: Code Examples & Solutions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python Programs on Trees C# String Programs Linked List Programs in Python Searching and Sorting in Python Python MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Python Programs on Graphs Python Programming Examples String Programs in C++ String Programs in C Java String Programs: Code Examples & Solutions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.112 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 00:23:52  \n  Compression = gzip "
    },
    {
      "id": "349",
      "question": "What will be the output of the following Python code snippet? \n \n \n \n \n \n print ( 'cd' . partition ( 'cd' ) ) \n ",
      "answerA": " (\u2018cd\u2019) \n",
      "answerB": " (\u201d) \n",
      "answerC": " (\u2018cd\u2019, \u201d, \u201d) \n",
      "answerD": " (\u201d, \u2018cd\u2019, \u201d) ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The entire string has been passed as the separator hence the first and the last item of the tuple returned are null strings. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "350",
      "question": "What will be the output of the following Python code snippet? \n print ( 'abef' . partition ( 'cd' ) ) \n ",
      "answerA": " (\u2018abef\u2019) \n",
      "answerB": " (\u2018abef\u2019, \u2018cd\u2019, \u201d) \n",
      "answerC": " (\u2018abef\u2019, \u201d, \u201d) \n",
      "answerD": " error ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The separator is not present in the string hence the second and the third elements of the tuple are null strings. \n \n \n    \nSubscribe Now:  Python Newsletter  |  Important Subjects Newsletters \n \n \n \n \n \n \n \n "
    },
    {
      "id": "351",
      "question": "What will be the output of the following Python code snippet? \n \n advertisement \n \n \n \n \n print ( 'abcdef12' . replace ( 'cd' ,   '12' ) ) \n ",
      "answerA": " ab12ef12 \n",
      "answerB": " abcdef12 \n",
      "answerC": " ab12efcd \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " All occurrences of the first substring are replaced by the second substring. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "352",
      "question": "What will be the output of the following Python code snippet? \n print ( 'abef' . replace ( 'cd' ,   '12' ) ) \n ",
      "answerA": " abef \n",
      "answerB": " 12 \n",
      "answerC": " error \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The first substring is not present in the given string and hence nothing is replaced. \n "
    },
    {
      "id": "353",
      "question": "What will be the output of the following Python code snippet? \n print ( 'abcefd' . replace ( 'cd' ,   '12' ) ) \n ",
      "answerA": " ab1ef2 \n",
      "answerB": " abcefd \n",
      "answerC": " ab1efd \n",
      "answerD": " ab12ed2 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The first substring is not present in the given string and hence nothing is replaced. \n "
    },
    {
      "id": "354",
      "question": "What will be the output of the following Python code snippet? \n print ( 'xyyxyyxyxyxxy' . replace ( 'xy' ,   '12' ,   0 ) ) \n ",
      "answerA": " xyyxyyxyxyxxy \n",
      "answerB": " 12y12y1212x12 \n",
      "answerC": " 12yxyyxyxyxxy \n",
      "answerD": " xyyxyyxyxyx12 ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The first 0 occurrences of the given substring are replaced. \n "
    },
    {
      "id": "355",
      "question": "What will be the output of the following Python code snippet? \n print ( 'xyyxyyxyxyxxy' . replace ( 'xy' ,   '12' ,   100 ) ) \n ",
      "answerA": " xyyxyyxyxyxxy \n",
      "answerB": " 12y12y1212x12 \n",
      "answerC": " none of the mentioned \n",
      "answerD": " error ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The first 100 occurrences of the given substring are replaced. \n "
    },
    {
      "id": "356",
      "question": "What will be the output of the following Python code snippet? \n print ( 'abcdefcdghcd' . split ( 'cd' ) ) \n ",
      "answerA": " [\u2018ab\u2019, \u2018ef\u2019, \u2018gh\u2019]  \n",
      "answerB": " [\u2018ab\u2019, \u2018ef\u2019, \u2018gh\u2019, \u201d]  \n",
      "answerC": " (\u2018ab\u2019, \u2018ef\u2019, \u2018gh\u2019) \n",
      "answerD": " (\u2018ab\u2019, \u2018ef\u2019, \u2018gh\u2019, \u201d) ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The given string is split and a list of substrings is returned. \n "
    },
    {
      "id": "357",
      "question": "What will be the output of the following Python code snippet? \n print ( 'abcdefcdghcd' . split ( 'cd' ,   0 ) ) \n ",
      "answerA": " [\u2018abcdefcdghcd\u2019]  \n",
      "answerB": " \u2018abcdefcdghcd\u2019 \n",
      "answerC": " error \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The given string is split at 0 occurances of the specified substring. \n "
    },
    {
      "id": "358",
      "question": "What will be the output of the following Python code snippet? \n print ( 'abcdefcdghcd' . split ( 'cd' ,  - 1 ) ) \n ",
      "answerA": " [\u2018ab\u2019, \u2018ef\u2019, \u2018gh\u2019]  \n",
      "answerB": " [\u2018ab\u2019, \u2018ef\u2019, \u2018gh\u2019, \u201d]  \n",
      "answerC": " (\u2018ab\u2019, \u2018ef\u2019, \u2018gh\u2019) \n",
      "answerD": " (\u2018ab\u2019, \u2018ef\u2019, \u2018gh\u2019, \u201d) ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Calling the function with a negative value for maxsplit is the same as calling it without any maxsplit specified. The string will be split into as many substring s as possible. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all problems on Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python MCQ \u2013 String \u2013 11 \u00bb  Next - Python MCQ \u2013 String \u2013 13   Related Posts: Apply for  Programming Internship \n Check  Python Books \n Check  Information Technology Books \n Apply for  Python Internship \n Practice  Programming MCQs \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python MCQ \u2013 String \u2013 8  \n Python MCQ \u2013 String \u2013 11  \n Python MCQ \u2013 String \u2013 13  \n Python MCQ \u2013 String \u2013 10  \n Python MCQ \u2013 String \u2013 9  \n Python MCQ \u2013 String \u2013 7  \n Python MCQ \u2013 String \u2013 6  \n Python Questions and Answers \u2013 While and For Loops \u2013 3  \n Python MCQ \u2013 String \u2013 3  \n Python MCQ \u2013 String \u2013 5  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python MCQ Questions Python Programs on Trees Searching and Sorting in Python Linked List Programs in Python Python Programs on Graphs Popular Pages: C# String Programs Python Programming Examples String Programs in C++ String Programs in C Java String Programs: Code Examples & Solutions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python MCQ Questions Python Programs on Trees Searching and Sorting in Python Linked List Programs in Python Python Programs on Graphs \n   \n \n \n \n \n \n \n   Popular Pages C# String Programs Python Programming Examples String Programs in C++ String Programs in C Java String Programs: Code Examples & Solutions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.281 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 21:09:49  \n  Compression = gzip "
    },
    {
      "id": "359",
      "question": "What will be the output of the following Python code? \n \n \n \n \n \n print ( 'Hello!2@#World' . istitle ( ) ) \n ",
      "answerA": " True \n",
      "answerB": " False \nc) None \nd) error ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " It is in the form of a title. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "360",
      "question": "What will be the output of the following Python code? \n print ( '1Rn@' . lower ( ) ) \n ",
      "answerA": " n \n",
      "answerB": " 1rn@ \n",
      "answerC": " rn \n",
      "answerD": " r ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Uppercase letters are converted to lowercase. The other characters are left unchanged. \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n "
    },
    {
      "id": "361",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n print ( '''\n  \\t foo''' . lstrip ( ) ) \n ",
      "answerA": " \\tfoo \n",
      "answerB": " foo \n",
      "answerC": " \u2003\u2003foo \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " All leading whitespace is removed. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "362",
      "question": "What will be the output of the following Python code? \n print ( 'xyyzxxyxyy' . lstrip ( 'xyy' ) ) \n ",
      "answerA": " error \n",
      "answerB": " zxxyxyy \n",
      "answerC": " z \n",
      "answerD": " zxxy ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The leading characters containing xyy are removed. \n "
    },
    {
      "id": "363",
      "question": "What will be the output of the following Python code? \n print ( 'xyxxyyzxxy' . lstrip ( 'xyy' ) ) \n ",
      "answerA": " zxxy \n",
      "answerB": " xyxxyyzxxy \n",
      "answerC": " xyxzxxy \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " All combinations of the characters passed as an argument are removed from the left hand side. \n "
    },
    {
      "id": "364",
      "question": "What will be the output of the following Python code? \n print ( 'cba' . maketrans ( 'abc' ,   '123' ) ) \n ",
      "answerA": " {97: 49, 98: 50, 99: 51} \n",
      "answerB": " {65: 49, 66: 50, 67: 51} \n",
      "answerC": " 321 \n",
      "answerD": " 123 ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " A translation table is returned by maketrans. \n "
    },
    {
      "id": "365",
      "question": "What will be the output of the following Python code? \n print ( 'a' . maketrans ( 'ABC' ,   '123' ) ) \n ",
      "answerA": " {97: 49, 98: 50, 99: 51} \n",
      "answerB": " {65: 49, 66: 50, 67: 51} \n",
      "answerC": " {97: 49} \n",
      "answerD": " 1 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " maketrans() is a static method so it\u2019s behaviour does not depend on the object from which it is being called. \n "
    },
    {
      "id": "366",
      "question": "What will be the output of the following Python code? \n print ( 'abcdef' . partition ( 'cd' ) ) \n ",
      "answerA": " (\u2018ab\u2019, \u2018ef\u2019) \n",
      "answerB": " (\u2018abef\u2019) \n",
      "answerC": " (\u2018ab\u2019, \u2018cd\u2019, \u2018ef\u2019) \n",
      "answerD": " 2 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The string is split into three parts by partition. \n "
    },
    {
      "id": "367",
      "question": "What will be the output of the following Python code? \n print ( 'abcdefcdgh' . partition ( 'cd' ) ) \n ",
      "answerA": " (\u2018ab\u2019, \u2018cd\u2019, \u2018ef\u2019, \u2018cd\u2019, \u2018gh\u2019) \n",
      "answerB": " (\u2018ab\u2019, \u2018cd\u2019, \u2018efcdgh\u2019) \n",
      "answerC": " (\u2018abcdef\u2019, \u2018cd\u2019, \u2018gh\u2019) \n",
      "answerD": " error ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The string is partitioned at the point where the separator first appears. \n "
    },
    {
      "id": "368",
      "question": "What will be the output of the following Python code? \n print ( 'abcd' . partition ( 'cd' ) ) \n ",
      "answerA": " (\u2018ab\u2019, \u2018cd\u2019, \u201d) \n",
      "answerB": " (\u2018ab\u2019, \u2018cd\u2019) \n",
      "answerC": " error \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The last item is a null string. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python MCQ \u2013 String \u2013 10 \u00bb  Next - Python MCQ \u2013 String \u2013 12   Related Posts: Check  Information Technology Books \n Practice  Programming MCQs \n Check  Python Books \n Apply for  Programming Internship \n Apply for  Python Internship \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python MCQ \u2013 String \u2013 8  \n Python MCQ \u2013 String \u2013 10  \n Python MCQ \u2013 String \u2013 9  \n Python MCQ \u2013 String \u2013 7  \n Python MCQ \u2013 String \u2013 13  \n Python MCQ \u2013 String \u2013 5  \n Python MCQ \u2013 String \u2013 6  \n Python MCQ \u2013 String \u2013 12  \n Python MCQ \u2013 String \u2013 3  \n Python MCQ \u2013 String \u2013 2  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python Programs on Trees Linked List Programs in Python Python Programs on Graphs Python MCQ Questions Searching and Sorting in Python Popular Pages: Python Programming Examples C# String Programs String Programs in C++ String Programs in C Java String Programs: Code Examples & Solutions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python Programs on Trees Linked List Programs in Python Python Programs on Graphs Python MCQ Questions Searching and Sorting in Python \n   \n \n \n \n \n \n \n   Popular Pages Python Programming Examples C# String Programs String Programs in C++ String Programs in C Java String Programs: Code Examples & Solutions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.435 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 03:22:58  \n  Compression = gzip "
    },
    {
      "id": "369",
      "question": "What will be the output of the following Python code snippet? \n \n \n \n \n \n print ( 'for' . isidentifier ( ) ) \n ",
      "answerA": " True \n",
      "answerB": " False \nc) None \nd) Error ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Even keywords are considered as valid identifiers. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "370",
      "question": "What will be the output of the following Python code snippet? \n print ( 'abc' . islower ( ) ) \n ",
      "answerA": " True \n",
      "answerB": " False \nc) None \nd) Error ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " There are no uppercase letters. \n \n \n    \nNote: Join free Sanfoundry classes at  Telegram  or  Youtube \n \n \n \n \n \n \n \n "
    },
    {
      "id": "371",
      "question": "What will be the output of the following Python code snippet? \n \n advertisement \n \n \n \n \n print ( 'a@ 1,' . islower ( ) ) \n ",
      "answerA": " True \n",
      "answerB": " False \nc) None \nd) Error ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " There are no uppercase letters. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "372",
      "question": "What will be the output of the following Python code snippet? \n print ( '11' . isnumeric ( ) ) \n ",
      "answerA": " True \n",
      "answerB": " False \nc) None \nd) Error ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " All the character are numeric. \n "
    },
    {
      "id": "373",
      "question": "What will be the output of the following Python code snippet? \n print ( '1.1' . isnumeric ( ) ) \n ",
      "answerA": " True \n",
      "answerB": " False \nc) None \nd) Error ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The character . is not a numeric character. \n "
    },
    {
      "id": "374",
      "question": "What will be the output of the following Python code snippet? \n print ( '1@ a' . isprintable ( ) ) \n ",
      "answerA": " True \n",
      "answerB": " False \nc) None \nd) Error ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " All those characters are printable. \n "
    },
    {
      "id": "375",
      "question": "What will be the output of the following Python code snippet? \n print ( '''''' . isspace ( ) ) \n ",
      "answerA": " True \n",
      "answerB": " False \nc) None \nd) Error ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": "none explanation"
    },
    {
      "id": "376",
      "question": "What will be the output of the following Python code snippet? \n print ( ' \\t ' . isspace ( ) ) \n ",
      "answerA": " True \n",
      "answerB": " False \nc) None \nd) Error ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Tab Spaces are considered as spaces. \n "
    },
    {
      "id": "377",
      "question": "What will be the output of the following Python code snippet? \n print ( 'HelloWorld' . istitle ( ) ) \n ",
      "answerA": " True \n",
      "answerB": " False \nc) None \nd) Error ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The letter W is uppercased. \n "
    },
    {
      "id": "378",
      "question": "What will be the output of the following Python code snippet? \n print ( 'Hello World' . istitle ( ) ) \n ",
      "answerA": " True \n",
      "answerB": " False \nc) None \nd) Error ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " It is in title form. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all test questions on Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python MCQ \u2013 String \u2013 9 \u00bb  Next - Python MCQ \u2013 String \u2013 11   Related Posts: Apply for  Python Internship \n Check  Python Books \n Check  Information Technology Books \n Apply for  Programming Internship \n Practice  Programming MCQs \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python MCQ \u2013 String \u2013 9  \n Python MCQ \u2013 String \u2013 13  \n Python MCQ \u2013 String \u2013 8  \n Python MCQ \u2013 String \u2013 12  \n Python MCQ \u2013 String \u2013 11  \n Python MCQ \u2013 String \u2013 7  \n Python MCQ \u2013 String \u2013 5  \n Python MCQ \u2013 String \u2013 6  \n Python Multiple Choice Questions \u2013 List Comprehension  \n Python Questions and Answers \u2013 While and For Loops \u2013 5  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python Programs on Trees Linked List Programs in Python Python MCQ Questions Python Programs on Graphs Searching and Sorting in Python Popular Pages: Python Programming Examples C# String Programs String Programs in C++ String Programs in C Java String Programs: Code Examples & Solutions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python Programs on Trees Linked List Programs in Python Python MCQ Questions Python Programs on Graphs Searching and Sorting in Python \n   \n \n \n \n \n \n \n   Popular Pages Python Programming Examples C# String Programs String Programs in C++ String Programs in C Java String Programs: Code Examples & Solutions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.114 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 00:23:52  \n  Compression = gzip "
    },
    {
      "id": "379",
      "question": "What will be the output of the following Python code? \n \n \n \n \n \n print ( '{0:.2}' . format ( 1 / 3 ) ) \n ",
      "answerA": " 0.333333 \n",
      "answerB": " 0.33 \n",
      "answerC": " 0.333333:.2 \n",
      "answerD": " Error ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " .2 specifies the precision. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "380",
      "question": "What will be the output of the following Python code? \n print ( '{0:.2%}' . format ( 1 / 3 ) ) \n ",
      "answerA": " 0.33 \n",
      "answerB": " 0.33% \n",
      "answerC": " 33.33% \n",
      "answerD": " 33% ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The symbol % is used to represent the result of an expression as a percentage. \n \n \n    \nSubscribe Now:  Python Newsletter  |  Important Subjects Newsletters \n \n \n \n \n \n \n \n "
    },
    {
      "id": "381",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n print ( 'ab12' . isalnum ( ) ) \n ",
      "answerA": " True \n",
      "answerB": " False \nc) None \nd) Error ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The string has only letters and digits. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "382",
      "question": "What will be the output of the following Python code? \n print ( 'ab,12' . isalnum ( ) ) \n ",
      "answerA": " True \n",
      "answerB": " False \nc) None \nd) Error ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The character , is not a letter or a digit. \n "
    },
    {
      "id": "383",
      "question": "What will be the output of the following Python code? \n print ( 'ab' . isalpha ( ) ) \n ",
      "answerA": " True \n",
      "answerB": " False \nc) None \nd) Error ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The string has only letters. \n "
    },
    {
      "id": "384",
      "question": "What will be the output of the following Python code? \n print ( 'a B' . isalpha ( ) ) \n ",
      "answerA": " True \n",
      "answerB": " False \nc) None \nd) Error ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Space is not a letter. \n "
    },
    {
      "id": "385",
      "question": "What will be the output of the following Python code snippet? \n print ( '0xa' . isdigit ( ) ) \n ",
      "answerA": " True \n",
      "answerB": " False \nc) None \nd) Error ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Hexadecimal digits aren\u2019t considered as digits (a-f). \n "
    },
    {
      "id": "386",
      "question": "What will be the output of the following Python code snippet? \n print ( '' . isdigit ( ) ) \n ",
      "answerA": " True \n",
      "answerB": " False \nc) None \nd) Error ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": "none explanation"
    },
    {
      "id": "387",
      "question": "What will be the output of the following Python code snippet? \n print ( '__foo__' . isidentifier ( ) ) \n ",
      "answerA": " True \n",
      "answerB": " False \nc) None \nd) Error ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " It is a valid identifier. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all mcqs on Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python MCQ \u2013 String \u2013 8 \u00bb  Next - Python MCQ \u2013 String \u2013 10   Related Posts: Apply for  Python Internship \n Apply for  Programming Internship \n Practice  Programming MCQs \n Check  Information Technology Books \n Check  Python Books \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python MCQ \u2013 String \u2013 8  \n Python MCQ \u2013 String \u2013 7  \n Python MCQ \u2013 String \u2013 3  \n Python MCQ \u2013 String \u2013 13  \n Python MCQ \u2013 String \u2013 11  \n Python MCQ \u2013 String \u2013 10  \n Python MCQ \u2013 String \u2013 5  \n Python MCQ \u2013 String \u2013 6  \n Python MCQ \u2013 String \u2013 12  \n Python MCQ \u2013 String \u2013 2  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python Programs on Trees Linked List Programs in Python Python Programs on Graphs Python MCQ Questions Searching and Sorting in Python Popular Pages: C# String Programs Python Programming Examples String Programs in C++ String Programs in C Java String Programs: Code Examples & Solutions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python Programs on Trees Linked List Programs in Python Python Programs on Graphs Python MCQ Questions Searching and Sorting in Python \n   \n \n \n \n \n \n \n   Popular Pages C# String Programs Python Programming Examples String Programs in C++ String Programs in C Java String Programs: Code Examples & Solutions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.143 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 00:23:52  \n  Compression = gzip "
    },
    {
      "id": "388",
      "question": "What will be the output of the following Python code? \n \n \n \n \n \n print ( \"Hello {name1} and {name2}\" . format ( name1 = 'foo' ,  name2 = 'bin' ) ) \n ",
      "answerA": " Hello foo and bin \n",
      "answerB": " Hello {name1} and {name2} \n",
      "answerC": " Error \n",
      "answerD": " Hello and ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The arguments are accessed by their names. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "389",
      "question": "What will be the output of the following Python code? \n print ( \"Hello {0!r} and {0!s}\" . format ( 'foo' ,   'bin' ) ) \n ",
      "answerA": " Hello foo and foo \n",
      "answerB": " Hello \u2018foo\u2019 and foo \n",
      "answerC": " Hello foo and \u2018bin\u2019 \n",
      "answerD": " Error ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " !r causes the characters \u2018 or \u201d to be printed as well. \n \n \n    \nSubscribe Now:  Python Newsletter  |  Important Subjects Newsletters \n \n \n \n \n \n \n \n "
    },
    {
      "id": "390",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n print ( \"Hello {0} and {1}\" . format ( ( 'foo' ,   'bin' ) ) ) \n ",
      "answerA": " Hello foo and bin \n",
      "answerB": " Hello (\u2018foo\u2019, \u2018bin\u2019) and (\u2018foo\u2019, \u2018bin\u2019) \n",
      "answerC": " Error \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " IndexError, the tuple index is out of range. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "391",
      "question": "What will be the output of the following Python code? \n print ( \"Hello {0[0]} and {0[1]}\" . format ( ( 'foo' ,   'bin' ) ) ) \n ",
      "answerA": " Hello foo and bin \n",
      "answerB": " Hello (\u2018foo\u2019, \u2018bin\u2019) and (\u2018foo\u2019, \u2018bin\u2019) \n",
      "answerC": " Error \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The elements of the tuple are accessed by their indices. \n "
    },
    {
      "id": "392",
      "question": "What will be the output of the following Python code snippet? \n print ( 'The sum of {0} and {1} is {2}' . format ( 2 ,   10 ,   12 ) ) \n ",
      "answerA": " The sum of 2 and 10 is 12 \n",
      "answerB": " Error \n",
      "answerC": " The sum of 0 and 1 is 2 \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The arguments passed to the function format can be integers also. \n "
    },
    {
      "id": "393",
      "question": "What will be the output of the following Python code snippet? \n print ( 'The sum of {0:b} and {1:x} is {2:o}' . format ( 2 ,   10 ,   12 ) ) \n ",
      "answerA": " The sum of 2 and 10 is 12 \n",
      "answerB": " The sum of 10 and a is 14 \n",
      "answerC": " The sum of 10 and a is c \n",
      "answerD": " Error ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " 2 is converted to binary, 10 to hexadecimal and 12 to octal. \n "
    },
    {
      "id": "394",
      "question": "What will be the output of the following Python code snippet? \n print ( '{:,}' . format ( 1112223334 ) ) \n ",
      "answerA": " 1,112,223,334 \n",
      "answerB": " 111,222,333,4 \n",
      "answerC": " 1112223334 \n",
      "answerD": " Error ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " A comma is added after every third digit from the right. \n "
    },
    {
      "id": "395",
      "question": "What will be the output of the following Python code snippet? \n print ( '{:,}' . format ( '1112223334' ) ) \n ",
      "answerA": " 1,112,223,334 \n",
      "answerB": " 111,222,333,4 \n",
      "answerC": " 1112223334 \n",
      "answerD": " Error ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " An integer is expected. \n "
    },
    {
      "id": "396",
      "question": "What will be the output of the following Python code snippet? \n print ( '{:$}' . format ( 1112223334 ) ) \n ",
      "answerA": " 1,112,223,334 \n",
      "answerB": " 111,222,333,4 \n",
      "answerC": " 1112223334 \n",
      "answerD": " Error ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " $ is an invalid format code. \n "
    },
    {
      "id": "397",
      "question": "What will be the output of the following Python code snippet? \n print ( '{:#}' . format ( 1112223334 ) ) \n ",
      "answerA": " 1,112,223,334 \n",
      "answerB": " 111,222,333,4 \n",
      "answerC": " 1112223334 \n",
      "answerD": " Error ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The number is printed as it is. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all multiple choice questions on Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python MCQ \u2013 String \u2013 7 \u00bb  Next - Python MCQ \u2013 String \u2013 9   Related Posts: Check  Information Technology Books \n Check  Python Books \n Practice  Programming MCQs \n Apply for  Python Internship \n Apply for  Programming Internship \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python MCQ \u2013 String \u2013 7  \n Python MCQ \u2013 String \u2013 3  \n Python MCQ \u2013 String \u2013 9  \n Python MCQ \u2013 String \u2013 13  \n Python MCQ \u2013 String \u2013 11  \n Python MCQ \u2013 String \u2013 10  \n Python MCQ \u2013 String \u2013 5  \n Python MCQ \u2013 String \u2013 6  \n Python MCQ \u2013 String \u2013 12  \n Python MCQ \u2013 String \u2013 2  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python Programs on Trees Linked List Programs in Python Python Programs on Graphs Searching and Sorting in Python Python MCQ Questions Popular Pages: C# String Programs Python Programming Examples String Programs in C++ String Programs in C Java String Programs: Code Examples & Solutions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python Programs on Trees Linked List Programs in Python Python Programs on Graphs Searching and Sorting in Python Python MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages C# String Programs Python Programming Examples String Programs in C++ String Programs in C Java String Programs: Code Examples & Solutions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.270 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 00:23:50  \n  Compression = gzip "
    },
    {
      "id": "398",
      "question": "Which of the following commands will create a list? \n",
      "answerA": " list1 = list() \n",
      "answerB": " list1 = []  \n",
      "answerC": " list1 = list([1, 2, 3]) \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Execute in the shell to verify \n \n \n \n \n \n "
    },
    {
      "id": "399",
      "question": "What is the output when we execute list(\u201chello\u201d)? \n",
      "answerA": " [\u2018h\u2019, \u2018e\u2019, \u2018l\u2019, \u2018l\u2019, \u2018o\u2019]  \n",
      "answerB": " [\u2018hello\u2019]  \n",
      "answerC": " [\u2018llo\u2019]  \n",
      "answerD": " [\u2018olleh\u2019]  ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Execute in the shell to verify.  \n "
    },
    {
      "id": "400",
      "question": "Suppose listExample is [\u2018h\u2019,\u2019e\u2019,\u2019l\u2019,\u2019l\u2019,\u2019o\u2019], what is len(listExample)? \n",
      "answerA": " 5 \n",
      "answerB": " 4 \n",
      "answerC": " None \n",
      "answerD": " Error ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Execute in the shell and verify.  \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "401",
      "question": "Suppose list1 is [2445,133,12454,123], what is max(list1)? \n",
      "answerA": " 2445 \n",
      "answerB": " 133 \n",
      "answerC": " 12454 \n",
      "answerD": " 123 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Max returns the maximum element in the list. \n "
    },
    {
      "id": "402",
      "question": "Suppose list1 is [3, 5, 25, 1, 3], what is min(list1)? \n",
      "answerA": " 3 \n",
      "answerB": " 5 \n",
      "answerC": " 25 \n",
      "answerD": " 1 ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Min returns the minimum element in the list. \n \n \n    \nSubscribe Now:  Python Newsletter  |  Important Subjects Newsletters \n \n \n \n \n \n \n \n "
    },
    {
      "id": "403",
      "question": "Suppose list1 is [1, 5, 9], what is sum(list1)? \n",
      "answerA": " 1 \n",
      "answerB": " 9 \n",
      "answerC": " 15 \n",
      "answerD": " Error ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Sum returns the sum of all elements in the list.  \n "
    },
    {
      "id": "404",
      "question": "To shuffle the list(say list1) what function do we use? \n",
      "answerA": " list1.shuffle() \n",
      "answerB": " shuffle(list1) \n",
      "answerC": " random.shuffle(list1) \n",
      "answerD": " random.shuffleList(list1) ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Execute in the shell to verify. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "405",
      "question": "Suppose list1 is [4, 2, 2, 4, 5, 2, 1, 0], Which of the following is correct syntax for slicing operation? \n",
      "answerA": " print(list1[2:]) \n",
      "answerB": " print(list1[:2]) \n",
      "answerC": " print(list1[:-2]) \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Slicing is allowed in lists just as in the case of strings. \n "
    },
    {
      "id": "406",
      "question": "Suppose list1 is [2, 33, 222, 14, 25], What is list1[-1]? \n",
      "answerA": " Error \n",
      "answerB": " None \n",
      "answerC": " 25 \n",
      "answerD": " 2 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " -1 corresponds to the last index in the list. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "407",
      "question": "Suppose list1 is [2, 33, 222, 14, 25], What is list1[:-1]? \n",
      "answerA": " [2, 33, 222, 14]  \n",
      "answerB": " Error \n",
      "answerC": " 25 \n",
      "answerD": " [25, 14, 222, 33, 2]  ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Execute in the shell to verify. \n More MCQs on Python Lists: \n \n Python List MCQ (Set 2) \n Python List MCQ (Set 3) \n Python List MCQ (Set 4) \n Python List MCQ (Set 5) \n Python List MCQ (Set 6) \n Python List MCQ (Set 7) \n \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python MCQ \u2013 String \u2013 13 \u00bb  Next - Python Questions and Answers \u2013 Lists \u2013 2   Related Posts: Apply for  Programming Internship \n Practice  Programming MCQs \n Apply for  Python Internship \n Check  Python Books \n Check  Information Technology Books \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 Lists \u2013 3  \n Python Questions and Answers \u2013 Lists \u2013 2  \n Python Questions and Answers \u2013 Lists \u2013 5  \n Python Questions and Answers \u2013 Lists \u2013 4  \n Python Multiple Choice Questions \u2013 Dictionary  \n Python Program to Find the Intersection of Two Lists  \n Python MCQ \u2013 String \u2013 4  \n Python Multiple Choice Questions \u2013 Tuples  \n Python Multiple Choice Questions \u2013 Sets  \n Python Multiple Choice Questions \u2013 String  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python MCQ Questions Linux MCQ Questions Visual Basic MCQ Questions Unix MCQ Questions JavaScript MCQ Questions Popular Pages: Automata Theory MCQ Questions Data Structure MCQ Questions Operating System MCQ Questions HTML MCQ Questions Probability MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python MCQ Questions Linux MCQ Questions Visual Basic MCQ Questions Unix MCQ Questions JavaScript MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Automata Theory MCQ Questions Data Structure MCQ Questions Operating System MCQ Questions HTML MCQ Questions Probability MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.588 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 12:42:03  \n  Compression = gzip "
    },
    {
      "id": "408",
      "question": "What will be the output of the following Python code? \n \n \n \n \n \n >>> names  =   [ 'Amir' ,  'Bear' ,  'Charlton' ,  'Daman' ] >>> print ( names [ - 1 ] [ - 1 ] ) \n ",
      "answerA": " A \n",
      "answerB": " Daman \n",
      "answerC": " Error \n",
      "answerD": " n ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Execute in the shell to verify. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "409",
      "question": "What will be the output of the following Python code? \n names1  =   [ 'Amir' ,  'Bear' ,  'Charlton' ,  'Daman' ] names2  =  names1 names3  =  names1 [ : ] \u00a0 names2 [ 0 ]   =   'Alice' names3 [ 1 ]   =   'Bob' \u00a0 sum  =   0 for  ls in  ( names1, names2, names3 ) :      if  ls [ 0 ]   ==   'Alice' :         sum  + =   1      if  ls [ 1 ]   ==   'Bob' :         sum  + =   10 \u00a0 print sum \n ",
      "answerA": " 11 \n",
      "answerB": " 12 \n",
      "answerC": " 21 \n",
      "answerD": " 22 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " When assigning names1 to names2, we create a second reference to the same list. Changes to names2 affect names"
    },
    {
      "id": "410",
      "question": "Suppose list1 is [1, 3, 2], What is list1 * 2? \n",
      "answerA": " [2, 6, 4]  \n",
      "answerB": " [1, 3, 2, 1, 3]  \n",
      "answerC": " [1, 3, 2, 1, 3, 2]  \n",
      "answerD": " [1, 3, 2, 3, 2, 1]  ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Execute in the shell and verify.  \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "411",
      "question": "Suppose list1 = [0.5 * x for x in range(0, 4)], list1 is: \n",
      "answerA": " [0, 1, 2, 3]  \n",
      "answerB": " [0, 1, 2, 3, 4]  \n",
      "answerC": " [0.0, 0.5, 1.0, 1.5]  \n",
      "answerD": " [0.0, 0.5, 1.0, 1.5, 2.0]  ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Execute in the shell to verify. \n "
    },
    {
      "id": "412",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n >>> list1  =   [ 11 ,  2 ,  23 ] >>> list2  =   [ 11 ,  2 ,  2 ] >>> list1  <  list2 \n ",
      "answerA": " True \n",
      "answerB": " False \nc) Error \nd) None ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Elements are compared one by one. \n "
    },
    {
      "id": "413",
      "question": "To add a new element to a list we use which command? \n",
      "answerA": " list1.add(5) \n",
      "answerB": " list1.append(5) \n",
      "answerC": " list1.addLast(5) \n",
      "answerD": " list1.addEnd(5) ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " We use the function append to add an element to the list.  \n "
    },
    {
      "id": "414",
      "question": "To insert 5 to the third position in list1, we use which command? \n",
      "answerA": " list1.insert(3, 5) \n",
      "answerB": " list1.insert(2, 5) \n",
      "answerC": " list1.add(3, 5) \n",
      "answerD": " list1.append(3, 5) ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Execute in the shell to verify. \n "
    },
    {
      "id": "415",
      "question": "To remove string \u201chello\u201d from list1, we use which command? \n",
      "answerA": " list1.remove(\u201chello\u201d) \n",
      "answerB": " list1.remove(hello) \n",
      "answerC": " list1.removeAll(\u201chello\u201d) \n",
      "answerD": " list1.removeOne(\u201chello\u201d) ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Execute in the shell to verify.   \n "
    },
    {
      "id": "416",
      "question": "Suppose list1 is [3, 4, 5, 20, 5], what is list1.index(5)? \n",
      "answerA": " 0 \n",
      "answerB": " 1 \n",
      "answerC": " 4 \n",
      "answerD": " 2 ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Execute help(list.index) to get details. \n "
    },
    {
      "id": "417",
      "question": "Suppose list1 is [3, 4, 5, 20, 5, 25, 1, 3], what is list1.count(5)? \n",
      "answerA": " 0 \n",
      "answerB": " 4 \n",
      "answerC": " 1 \n",
      "answerD": " 2 ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Execute in the shell to verify. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all coding interview questions on Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Multiple Choice Questions \u2013 Lists \u00bb  Next - Python Questions and Answers \u2013 Lists \u2013 3   Related Posts: Apply for  Programming Internship \n Practice  Programming MCQs \n Check  Python Books \n Check  Information Technology Books \n Apply for  Python Internship \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 Lists \u2013 4  \n Python Program to Find the Intersection of Two Lists  \n Python Questions and Answers \u2013 Lists \u2013 3  \n Python Questions and Answers \u2013 Lists \u2013 7  \n Python Questions and Answers \u2013 Lists \u2013 6  \n Python Multiple Choice Questions \u2013 Lists  \n Python Program to Find the Union of Two Lists  \n Python Questions and Answers \u2013 Lists \u2013 5  \n Python Program to Map Two Lists into a Dictionary  \n Python Program to Merge Two Lists and Sort it  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python Programs on Trees Searching and Sorting in Python Python MCQ Questions Linked List Programs in Python Python Programs on Graphs Popular Pages: Python Programming Examples C++ Algorithm Library Automata Theory MCQ Questions Data Science MCQ Questions Event Handling in Java with Examples    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python Programs on Trees Searching and Sorting in Python Python MCQ Questions Linked List Programs in Python Python Programs on Graphs \n   \n \n \n \n \n \n \n   Popular Pages Python Programming Examples C++ Algorithm Library Automata Theory MCQ Questions Data Science MCQ Questions Event Handling in Java with Examples \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.357 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 20:37:42  \n  Compression = gzip "
    },
    {
      "id": "418",
      "question": "Suppose list1 is [3, 4, 5, 20, 5, 25, 1, 3], what is list1 after list1.reverse()? \n",
      "answerA": " [3, 4, 5, 20, 5, 25, 1, 3]  \n",
      "answerB": " [1, 3, 3, 4, 5, 5, 20, 25]  \n",
      "answerC": " [25, 20, 5, 5, 4, 3, 3, 1]  \n",
      "answerD": " [3, 1, 25, 5, 20, 5, 4, 3]  ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Execute in the shell to verify. \n \n \n \n \n \n "
    },
    {
      "id": "419",
      "question": "Suppose listExample is [3, 4, 5, 20, 5, 25, 1, 3], what is list1 after listExample.extend([34, 5])? \n",
      "answerA": " [3, 4, 5, 20, 5, 25, 1, 3, 34, 5]  \n",
      "answerB": " [1, 3, 3, 4, 5, 5, 20, 25, 34, 5]  \n",
      "answerC": " [25, 20, 5, 5, 4, 3, 3, 1, 34, 5]  \n",
      "answerD": " [1, 3, 4, 5, 20, 5, 25, 3, 34, 5]  ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Execute in the shell to verify.  \n "
    },
    {
      "id": "420",
      "question": "Suppose listExample is [3, 4, 5, 20, 5, 25, 1, 3], what is list1 after listExample.pop(1)? \n",
      "answerA": " [3, 4, 5, 20, 5, 25, 1, 3]  \n",
      "answerB": " [1, 3, 3, 4, 5, 5, 20, 25]  \n",
      "answerC": " [3, 5, 20, 5, 25, 1, 3]  \n",
      "answerD": " [1, 3, 4, 5, 20, 5, 25]  ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " pop() removes the element at the position specified in the parameter.  \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "421",
      "question": "Suppose listExample is [3, 4, 5, 20, 5, 25, 1, 3], what is list1 after listExample.pop()? \n",
      "answerA": " [3, 4, 5, 20, 5, 25, 1]  \n",
      "answerB": " [1, 3, 3, 4, 5, 5, 20, 25]  \n",
      "answerC": " [3, 5, 20, 5, 25, 1, 3]  \n",
      "answerD": " [1, 3, 4, 5, 20, 5, 25]  ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " pop() by default will remove the last element. \n "
    },
    {
      "id": "422",
      "question": "What will be the output of the following Python code? \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n >>> \"Welcome to Python\" . split ( ) \n ",
      "answerA": " [\u201cWelcome\u201d, \u201cto\u201d, \u201cPython\u201d]  \n",
      "answerB": " (\u201cWelcome\u201d, \u201cto\u201d, \u201cPython\u201d) \n",
      "answerC": " {\u201cWelcome\u201d, \u201cto\u201d, \u201cPython\u201d} \n",
      "answerD": " \u201cWelcome\u201d, \u201cto\u201d, \u201cPython\u201d ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " split() function returns the elements in a list. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "423",
      "question": "What will be the output of the following Python code? \n >>> list ( \"a#b#c#d\" . split ( '#' ) ) \n ",
      "answerA": " [\u2018a\u2019, \u2018b\u2019, \u2018c\u2019, \u2018d\u2019]  \n",
      "answerB": " [\u2018a b c d\u2019]  \n",
      "answerC": " [\u2018a#b#c#d\u2019]  \n",
      "answerD": " [\u2018abcd\u2019]  ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Execute in the shell to verify.  \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "424",
      "question": "What will be the output of the following Python code? \n myList  =   [ 1 ,  5 ,  5 ,  5 ,  5 ,  1 ] max  =  myList [ 0 ] indexOfMax  =   0 for  i in range ( 1 , len ( myList ) ) :      if  myList [ i ]   >  max :         max  =  myList [ i ]         indexOfMax  =  i \u00a0 >>> print ( indexOfMax ) \n ",
      "answerA": " 1 \n",
      "answerB": " 2 \n",
      "answerC": " 3 \n",
      "answerD": " 4 ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " First time the highest number is encountered is at index "
    },
    {
      "id": "425",
      "question": "What will be the output of the following Python code? \n myList  =   [ 1 ,  2 ,  3 ,  4 ,  5 ,  6 ] for  i in range ( 1 ,  6 ) :     myList [ i  -   1 ]   =  myList [ i ] \u00a0 for  i in range ( 0 ,  6 ) :       print ( myList [ i ] , end  =   \" \" ) \n ",
      "answerA": " 2 3 4 5 6 1 \n",
      "answerB": " 6 1 2 3 4 5 \n",
      "answerC": " 2 3 4 5 6 6 \n",
      "answerD": " 1 1 2 3 4 5 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The code shifts all elements of a list by one position towards the beginning, except the first element which is replaced by the second. The last element is duplicated since there is no next element to assign its value to. The output is \u201c2 3 4 5 6 6\u201d. \n "
    },
    {
      "id": "426",
      "question": "What will be the output of the following Python code? \n >>> list1  =   [ 1 ,  3 ] >>> list2  =  list1 >>> list1 [ 0 ]   =   4 >>> print ( list2 ) \n ",
      "answerA": " [1, 3]  \n",
      "answerB": " [4, 3]  \n",
      "answerC": " [1, 4]  \n",
      "answerD": " [1, 3, 4]  ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Lists should be copied by executing [:] operation. \n "
    },
    {
      "id": "427",
      "question": "What will be the output of the following Python code? \n def f ( values ) :     values [ 0 ]   =   44 \u00a0 v  =   [ 1 ,  2 ,  3 ] f ( v ) print ( v ) \n ",
      "answerA": " [1, 44]  \n",
      "answerB": " [1, 2, 3, 44]  \n",
      "answerC": " [44, 2, 3]  \n",
      "answerD": " [1, 2, 3]  ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Execute in the shell to verify. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all programming questions on Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 Lists \u2013 2 \u00bb  Next - Python Questions and Answers \u2013 Lists \u2013 4   Related Posts: Check  Information Technology Books \n Apply for  Python Internship \n Apply for  Programming Internship \n Check  Python Books \n Practice  Programming MCQs \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Multiple Choice Questions \u2013 Lists  \n Python Questions and Answers \u2013 Lists \u2013 2  \n Python Program to Find the Intersection of Two Lists  \n Python Questions and Answers \u2013 Lists \u2013 4  \n Python Questions and Answers \u2013 Lists \u2013 7  \n Python Questions and Answers \u2013 Lists \u2013 6  \n Python Program to Find the Union of Two Lists  \n Python Questions and Answers \u2013 Lists \u2013 5  \n Python Program to Map Two Lists into a Dictionary  \n Python Program to Merge Two Lists and Sort it  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python Programs on Trees Python MCQ Questions Searching and Sorting in Python Python Programs on Graphs Linked List Programs in Python Popular Pages: Python Programming Examples C++ Algorithm Library Programming MCQ Questions Data Science MCQ Questions Automata Theory MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python Programs on Trees Python MCQ Questions Searching and Sorting in Python Python Programs on Graphs Linked List Programs in Python \n   \n \n \n \n \n \n \n   Popular Pages Python Programming Examples C++ Algorithm Library Programming MCQ Questions Data Science MCQ Questions Automata Theory MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.545 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 20:07:05  \n  Compression = gzip "
    },
    {
      "id": "428",
      "question": "What will be the output of the following Python code? \n \n \n \n \n \n a = [ 1 , 2 , 3 ] \nb = a. append ( 4 ) \n print ( a ) \n print ( b ) \n ",
      "answerA": "  \n [1,2,3,4]\r\n[1,2,3,4] \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n ",
      "answerB": "  \n [1, 2, 3, 4]\r\nNone \n ",
      "answerC": " Syntax error \n",
      "answerD": "  ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": "none explanation"
    },
    {
      "id": "429",
      "question": "What will be the output of the following Python code? \n >>>  a = [ 14 , 52 , 7 ] \n >>>>  b = a. copy ( ) \n >>>  b  is  a \n ",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " List b is just a copy of the original list. Any copy made in list b will not be reflected in list a. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "430",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n a = [ 13 , 56 , 17 ] \na. append ( [ 87 ] ) \na. extend ( [ 45 , 67 ] ) \n print ( a ) \n ",
      "answerA": "\t[13, 56, 17, [87], 45, 67]  \n",
      "answerB": "\t[13, 56, 17, 87, 45, 67]  \n",
      "answerC": "\t[13, 56, 17, 87,[ 45, 67]]  \n",
      "answerD": "\t[13, 56, 17, [87], [45, 67]]  ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The append function simply adds its arguments to the list as it is while extend function extends its arguments and later appends it. \n "
    },
    {
      "id": "431",
      "question": "What is the output of the following piece of code? \n a = list ( ( 45 , ) * 4 ) \n print ( ( 45 ) * 4 ) \n print ( a ) \n ",
      "answerA": "  \n 180\r\n[(45),(45),(45),(45)] \n ",
      "answerB": "  \n (45,45,45,45)\r\n[45,45,45,45] \n ",
      "answerC": "  \n 180\r\n[45,45,45,45] \n ",
      "answerD": " Syntax error ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " (45) is an int while (45,) is a tuple of one element. Thus when a tuple is multiplied, it created references of itself which is later converted to a list. \n "
    },
    {
      "id": "432",
      "question": "What will be the output of the following Python code? \n lst = [ [ 1 , 2 ] , [ 3 , 4 ] ] \n print ( sum ( lst , [ ] ) ) \n ",
      "answerA": "\t[[3],[7]]  \n",
      "answerB": "\t[1,2,3,4]  \n",
      "answerC": "\tError \n",
      "answerD": "\t[10]  ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The above piece of code is used for flattening lists. \n "
    },
    {
      "id": "433",
      "question": "What will be the output of the following Python code? \n word1 = \"Apple\" \nword2 = \"Apple\" \nlist1 = [ 1 , 2 , 3 ] \nlist2 = [ 1 , 2 , 3 ] \n print ( word1  is  word2 ) \n print ( list1  is  list2 ) \n ",
      "answerA": "  \n True\r\nTrue \n ",
      "answerB": "  ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " In the above case, both the lists are equivalent but not identical as they have different objects. \n\u00a0 \u00a0 \n "
    },
    {
      "id": "434",
      "question": "What will be the output of the following Python code? \n def  unpack ( a , b , c , d ) :\n     print ( a+d ) \nx  =   [ 1 , 2 , 3 , 4 ] \nunpack ( *x ) \n ",
      "answerA": "\tError \n",
      "answerB": "\t[1,4]  \n",
      "answerC": "\t[5]  \n",
      "answerD": "\t5 ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " unpack(*x) unpacks the list into the separate variables. Now, a=1 and d="
    },
    {
      "id": "435",
      "question": "What will be the output of the following Python code? \n places  =   [ 'Bangalore' ,   'Mumbai' ,   'Delhi' ] \n < br  class = \"blank\"  / > places1  =  places\nplaces2  =  places [ : ] \n < br  class = \"blank\"  / > places1 [ 1 ] = \"Pune\" \nplaces2 [ 2 ] = \"Hyderabad\" \n print ( places ) \n ",
      "answerA": "\t[\u2018Bangalore\u2019, \u2018Pune\u2019, \u2018Hyderabad\u2019]  \n",
      "answerB": "\t[\u2018Bangalore\u2019, \u2018Pune\u2019, \u2018Delhi\u2019]  \n",
      "answerC": "\t[\u2018Bangalore\u2019, \u2018Mumbai\u2019, \u2018Delhi\u2019]  \n",
      "answerD": "\t[\u2018Bangalore\u2019, \u2018Mumbai\u2019, \u2018Hyderabad\u2019]  ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " places1 is an alias of the list places. Hence, any change made to places1 is reflected in places. places2 is a copy of the list places. Thus, any change made to places2 isn\u2019t reflected in places. \n "
    },
    {
      "id": "436",
      "question": "What will be the output of the following Python code? \n x = [ [ 1 ] , [ 2 ] ] \n print ( \" \" . join ( list ( map ( str , x ) ) ) ) \n ",
      "answerA": "\t[1] [2]  \n",
      "answerB": "\t[49] [50]  \n",
      "answerC": "\tSyntax error \n",
      "answerD": "\t[[1]] [[2]]  ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The elements 1 and 2 are first put into separate lists and then combined with a space in between using the join attribute. \n "
    },
    {
      "id": "437",
      "question": "What will be the output of the following Python code? \n a = 165 \nb = sum ( list ( map ( int , str ( a ) ) ) ) \n print ( b ) \n ",
      "answerA": "\t561 \n",
      "answerB": "\t5 \n",
      "answerC": "\t12 \n",
      "answerD": "\tSyntax error ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " First, map converts the number to string and then places the individual digits in a list. Then, sum finds the sum of the digits in the list. The code basically finds the sum of digits in the number. \n "
    },
    {
      "id": "438",
      "question": "What will be the output of the following Python code? \n a =   [ 1 ,   2 ,   3 ,   4 ,   5 ] \n for  i  in   range ( 1 ,   5 ) :\n    a [ i- 1 ]   =  a [ i ] \n for  i  in   range ( 0 ,   5 ) : \n     print ( a [ i ] , end  =   \" \" ) \n ",
      "answerA": "\t5 5 1 2 3 \n",
      "answerB": "\t5 1 2 3 4 \n",
      "answerC": "\t2 3 4 5 1 \n",
      "answerD": "\t2 3 4 5 5 ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The items having indexes from 1 to 4 are shifted forward by one index due to the first for-loop and the item of index four is printed again because of the second for-loop. \n "
    },
    {
      "id": "439",
      "question": "What will be the output of the following Python code? \n def  change ( var ,  lst ) :\n    var  =   1 \n    lst [ 0 ]   =   44 \nk  =   3 \na  =   [ 1 ,   2 ,   3 ] \nchange ( k ,  a ) \n print ( k ) \n print ( a ) \n ",
      "answerA": "  \n 3\r\n[44, 2, 3] \n ",
      "answerB": "  \n 1\r\n[1,2,3] \n ",
      "answerC": "  \n 3\r\n[1,2,3] \n ",
      "answerD": "  ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " A list is mutable, hence it\u2019s value changes after function call. However, integer isn\u2019t mutable. Thus its value doesn\u2019t change. \n\u00a0 \u00a0 \n "
    },
    {
      "id": "440",
      "question": "What will be the output of the following Python code? \n a  =   [ 1 ,   5 ,   7 ,   9 ,   9 ,   1 ] \n < br  class = \"blank\"  / > b = a [ 0 ] \n < br  class = \"blank\"  / > x =   0 \n for  x  in   range ( 1 ,   len ( a ) ) :\n     if  a [ x ]   >  b:\n        b  =  a [ x ] \n        b =  x\n print ( b ) \n ",
      "answerA": "\t5 \n",
      "answerB": "\t3 \n",
      "answerC": "\t4 \n",
      "answerD": "\t0 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The above piece of code basically prints the index of the largest element in the list. \n "
    },
    {
      "id": "441",
      "question": "What will be the output of the following Python code? \n a = [ \"Apple\" , \"Ball\" , \"Cobra\" ] \n < br  class = \"blank\"  / > a. sort ( key = len ) \n print ( a ) \n ",
      "answerA": "\t[\u2018Apple\u2019, \u2018Ball\u2019, \u2018Cobra\u2019]  \n",
      "answerB": "\t[\u2018Ball\u2019, \u2018Apple\u2019, \u2018Cobra\u2019]  \n",
      "answerC": "\t[\u2018Cobra\u2019, \u2018Apple\u2019, \u2018Ball\u2019]  \n",
      "answerD": "\tInvalid syntax for sort() ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The syntax isn\u2019t invalid and the list is sorted according to the length of the strings in the list since key is given as len. \n "
    },
    {
      "id": "442",
      "question": "What will be the output of the following Python code? \n num  =   [ 'One' ,   'Two' ,   'Three' ] \n for  i ,  x  in   enumerate ( num ) :\n     print ( '{}: {}' . format ( i ,  x ) , end = \" \" ) \n ",
      "answerA": "\t1: 2: 3: \n",
      "answerB": "\tException is thrown \n",
      "answerC": "\tOne Two Three \n",
      "answerD": "\t0: One 1: Two 2: Three ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " enumerate(iterator,start=0) is a built-in function which returns (0,lst[0]),(1,lst[1]) and so on where lst is a list(iterator). \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 Lists \u2013 6 \u00bb  Next - Python Multiple Choice Questions \u2013 List Comprehension   Related Posts: Apply for  Programming Internship \n Check  Information Technology Books \n Check  Python Books \n Apply for  Python Internship \n Practice  Programming MCQs \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 Lists \u2013 6  \n Python Questions and Answers \u2013 Lists \u2013 3  \n Python Questions and Answers \u2013 Lists \u2013 5  \n Python Questions and Answers \u2013 Lists \u2013 4  \n Python Questions and Answers \u2013 Lists \u2013 2  \n Python Program to Find the Union of Two Lists  \n Python Multiple Choice Questions \u2013 Lists  \n Python Program to Map Two Lists into a Dictionary  \n Python Program to Find the Intersection of Two Lists  \n Python Program to Split Even and Odd Elements into Two Lists  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Linked List Programs in Python Python Programs on Trees Searching and Sorting in Python Python MCQ Questions Python Programs on Graphs Popular Pages: Python Programming Examples C++ Algorithm Library C Programs on Recursion C Programs on File Handling Linked List Programs in C    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Linked List Programs in Python Python Programs on Trees Searching and Sorting in Python Python MCQ Questions Python Programs on Graphs \n   \n \n \n \n \n \n \n   Popular Pages Python Programming Examples C++ Algorithm Library C Programs on Recursion C Programs on File Handling Linked List Programs in C \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.295 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 01:22:32  \n  Compression = gzip "
    },
    {
      "id": "443",
      "question": "What will be the output of the following Python code? \n \n \n \n \n \n a = [ 10 , 23 , 56 , [ 78 ] ] \nb = list ( a ) \na [ 3 ] [ 0 ] = 95 \na [ 1 ] = 34 \n print ( b ) \n ",
      "answerA": "\t[10,34,56,[95]]  \n",
      "answerB": "\t[10,23,56,[78]]  \n",
      "answerC": "\t[10,23,56,[95]]  \n",
      "answerD": "\t[10,34,56,[78]]  ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The above copy is a type of shallow copy and only changes made in sublist is reflected in the copied list. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "444",
      "question": "What will be the output of the following Python code? \n print ( list ( zip ( ( 1 , 2 , 3 ) , ( 'a' ) , ( 'xxx' , 'yyy' ) ) ) ) \n print ( list ( zip ( ( 2 , 4 ) , ( 'b' , 'c' ) , ( 'yy' , 'xx' ) ) ) ) \n ",
      "answerA": "  \n [(1,2,3),(\u2018a\u2019),(\u2018xxx\u2019,\u2019yyy\u2019)]\r\n[(2,4),(\u2018b\u2019,\u2019c\u2019),(\u2018yy\u2019,\u2019xx\u2019)] \n \n \n    \nNote: Join free Sanfoundry classes at  Telegram  or  Youtube \n \n \n \n \n \n \n \n ",
      "answerB": "  \n [(1, 'a', 'xxx'),(2,\u2019 \u2018,\u2019yyy\u2019),(3,\u2019 \u2018,\u2019 \u2018)]\r\n[(2, 'b', 'yy'), (4, 'c', 'xx')] \n \n advertisement \n \n \n \n \n ",
      "answerC": " Syntax error \n",
      "answerD": "  ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The zip function combines the individual attributes of the lists into a list of tuples. \n\u00a0 \u00a0 \n "
    },
    {
      "id": "445",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n import   copy \na = [ 10 , 23 , 56 , [ 78 ] ] \nb = copy . deepcopy ( a ) \na [ 3 ] [ 0 ] = 95 \na [ 1 ] = 34 \n print ( b ) \n ",
      "answerA": "\t[10,34,56,[95]]  \n",
      "answerB": "\t[10,23,56,[78]]  \n",
      "answerC": "\t[10,23,56,[95]]  \n",
      "answerD": "\t[10,34,56,[78]]  ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The above copy is deepcopy. Any change made in the original list isn\u2019t reflected. \n "
    },
    {
      "id": "446",
      "question": "What will be the output of the following Python code? \n s = \"a@b@c@d\" \na = list ( s. partition ( \"@\" ) ) \n print ( a ) \nb = list ( s. split ( \"@\" , 3 ) ) \n print ( b ) \n ",
      "answerA": "  \n [\u2018a\u2019,\u2019b\u2019,\u2019c\u2019,\u2019d\u2019]\r\n[\u2018a\u2019,\u2019b\u2019,\u2019c\u2019,\u2019d\u2019] \n ",
      "answerB": "  \n [\u2018a\u2019,\u2019@\u2019,\u2019b\u2019,\u2019@\u2019,\u2019c\u2019,\u2019@\u2019,\u2019d\u2019]\r\n[\u2018a\u2019,\u2019b\u2019,\u2019c\u2019,\u2019d\u2019] \n ",
      "answerC": "  \n [\u2018a\u2019,\u2019@\u2019,\u2019b@c@d\u2019]\r\n[\u2018a\u2019,\u2019b\u2019,\u2019c\u2019,\u2019d\u2019] \n ",
      "answerD": "  ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The partition function only splits for the first parameter along with the separator while split function splits for the number of times given in the second argument but without the separator. \n\u00a0 \u00a0 \n "
    },
    {
      "id": "447",
      "question": "What will be the output of the following Python code? \n a = [ 1 , 2 , 3 , 4 ] \nb = [ sum ( a [ 0 :x+ 1 ] )   for  x  in   range ( 0 , len ( a ) ) ] \n print ( b ) \n ",
      "answerA": "\t10 \n",
      "answerB": "\t[1,3,5,7]  \n",
      "answerC": "\t4 \n",
      "answerD": "\t[1,3,6,10]  ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The above code returns the cumulative sum of elements in a list. \n "
    },
    {
      "id": "448",
      "question": "What will be the output of the following Python code? \n a = \"hello\" \nb = list ( ( x. upper ( ) , len ( x ) )   for  x  in  a ) \n print ( b ) \n ",
      "answerA": "\t[(\u2018H\u2019, 1), (\u2018E\u2019, 1), (\u2018L\u2019, 1), (\u2018L\u2019, 1), (\u2018O\u2019, 1)]  \n",
      "answerB": "\t[(\u2018HELLO\u2019, 5)]  \n",
      "answerC": "\t[(\u2018H\u2019, 5), (\u2018E\u2019, 5), (\u2018L\u2019, 5), (\u2018L\u2019, 5), (\u2018O\u2019, 5)]  \n",
      "answerD": "\tSyntax error ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Variable x iterates over each letter in string a hence the length of each letter is "
    },
    {
      "id": "449",
      "question": "What will be the output of the following Python code? \n a = [ 1 , 2 , 3 , 4 ] \nb = [ sum ( a [ 0 :x+ 1 ] )   for  x  in   range ( 0 , len ( a ) ) ] \n print ( b ) \n ",
      "answerA": "\t10 \n",
      "answerB": "\t[1,3,5,7]  \n",
      "answerC": "\t4 \n",
      "answerD": "\t[1,3,6,10]  ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The above code returns the cumulative sum of elements in a list. \n "
    },
    {
      "id": "450",
      "question": "What will be the output of the following Python code? \n a = [ [ ] ] * 3 \na [ 1 ] . append ( 7 ) \n print ( a ) \n ",
      "answerA": "\tSyntax error \n",
      "answerB": "\t[[7], [7], [7]]  \n",
      "answerC": "\t[[7], [], []]  \n",
      "answerD": "\t[[],7, [], []]  ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The first line of the code creates multiple reference copies of sublist. Hence when 7 is appended, it gets appended to all the sublists. \n "
    },
    {
      "id": "451",
      "question": "What will be the output of the following Python code? \n b = [ 2 , 3 , 4 , 5 ] \na = list ( filter ( lambda  x:x% 2 , b ) ) \n print ( a ) \n ",
      "answerA": "\t[2,4]  \n",
      "answerB": "\t[ ]  \n",
      "answerC": "\t[3,5]  \n",
      "answerD": "\tInvalid arguments for filter function ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The filter function gives value from the list b for which the condition is true, that is, x%2=="
    },
    {
      "id": "452",
      "question": "What will be the output of the following Python code? \n lst = [ 3 , 4 , 6 , 1 , 2 ] \nlst [ 1 : 2 ] = [ 7 , 8 ] \n print ( lst ) \n ",
      "answerA": "\t[3, 7, 8, 6, 1, 2]  \n",
      "answerB": "\tSyntax error \n",
      "answerC": "\t[3,[7,8],6,1,2]  \n",
      "answerD": "\t[3,4,6,7,8]  ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " In the piece of code, slice assignment has been implemented. The sliced list is replaced by the assigned elements in the list. Type in python shell to verify. \n \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 Lists \u2013 5 \u00bb  Next - Python Questions and Answers \u2013 Lists \u2013 7   Related Posts: Check  Information Technology Books \n Apply for  Python Internship \n Check  Python Books \n Practice  Programming MCQs \n Apply for  Programming Internship \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 Lists \u2013 7  \n Python Questions and Answers \u2013 Lists \u2013 3  \n Python Questions and Answers \u2013 Lists \u2013 5  \n Python Questions and Answers \u2013 Lists \u2013 4  \n Python Questions and Answers \u2013 Lists \u2013 2  \n Python Program to Find the Union of Two Lists  \n Python Multiple Choice Questions \u2013 Lists  \n Python Program to Map Two Lists into a Dictionary  \n Python Program to Find the Intersection of Two Lists  \n Python Program to Split Even and Odd Elements into Two Lists  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Linked List Programs in Python Python Programs on Trees Searching and Sorting in Python Python MCQ Questions Python Programs on Graphs Popular Pages: Python Programming Examples C++ Algorithm Library C Programs on Recursion C Programs on File Handling Linked List Programs in C    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Linked List Programs in Python Python Programs on Trees Searching and Sorting in Python Python MCQ Questions Python Programs on Graphs \n   \n \n \n \n \n \n \n   Popular Pages Python Programming Examples C++ Algorithm Library C Programs on Recursion C Programs on File Handling Linked List Programs in C \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.335 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 17:55:58  \n  Compression = gzip "
    },
    {
      "id": "453",
      "question": "What will be the output of the following Python code? \n \n \n \n \n \n >>> m  =   [ [ x, x  +   1 , x  +   2 ]   for  x in range ( 0 ,  3 ) ] \n ",
      "answerA": " [[1, 2, 3], [4, 5, 6], [7, 8, 9]]  \n",
      "answerB": " [[0, 1, 2], [1, 2, 3], [2, 3, 4]]  \n",
      "answerC": " [1, 2, 3, 4, 5, 6, 7, 8, 9]  \n",
      "answerD": " [0, 1, 2, 1, 2, 3, 2, 3, 4]  ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Execute in the shell to verify. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "454",
      "question": "How many elements are in m? \n m  =   [ [ x, y ]   for  x in range ( 0 ,  4 )   for  y in range ( 0 ,  4 ) ] \n ",
      "answerA": " 8 \n",
      "answerB": " 12 \n",
      "answerC": " 16 \n",
      "answerD": " 32 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Execute in the shell to verify.  \n \n \n    \nNote: Join free Sanfoundry classes at  Telegram  or  Youtube \n \n \n \n \n \n \n \n "
    },
    {
      "id": "455",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n values  =   [ [ 3 ,  4 ,  5 ,  1 ] ,  [ 33 ,  6 ,  1 ,  2 ] ] \u00a0 v  =  values [ 0 ] [ 0 ] for  row in range ( 0 , len ( values ) ) :      for  column in range ( 0 , len ( values [ row ] ) ) :          if  v  <  values [ row ] [ column ] :             v  =  values [ row ] [ column ] \u00a0 print ( v ) \n ",
      "answerA": " 3 \n",
      "answerB": " 5 \n",
      "answerC": " 6 \n",
      "answerD": " 33 ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Execute in the shell to verify.  \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "456",
      "question": "What will be the output of the following Python code? \n values  =   [ [ 3 ,  4 ,  5 ,  1 ] ,  [ 33 ,  6 ,  1 ,  2 ] ] \u00a0 v  =  values [ 0 ] [ 0 ] for  lst in values :      for  element in lst :          if  v  >  element :             v  =  element \u00a0 print ( v ) \n ",
      "answerA": " 1 \n",
      "answerB": " 3 \n",
      "answerC": " 5 \n",
      "answerD": " 6 ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Execute in the shell to verify. \n "
    },
    {
      "id": "457",
      "question": "What will be the output of the following Python code? \n values  =   [ [ 3 ,  4 ,  5 ,  1   ] ,  [ 33 ,  6 ,  1 ,  2 ] ] \u00a0 for  row in values :     row. sort ( )      for  element in row :         print ( element, end  =   \" \" )     print ( ) \n ",
      "answerA": " The program prints two rows 3 4 5 1 followed by 33 6 1 2 \n",
      "answerB": " The program prints on row 3 4 5 1 33 6 1 2 \n",
      "answerC": " The program prints two rows 3 4 5 1 followed by 33 6 1 2 \n",
      "answerD": " The program prints two rows 1 3 4 5 followed by 1 2 6 33 ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Execute in the shell to verify. \n "
    },
    {
      "id": "458",
      "question": "What will be the output of the following Python code? \n matrix  =   [ [ 1 ,  2 ,  3 ,  4 ] ,         [ 4 ,  5 ,  6 ,  7 ] ,         [ 8 ,  9 ,  10 ,  11 ] ,         [ 12 ,  13 ,  14 ,  15 ] ] \u00a0 for  i in range ( 0 ,  4 ) :     print ( matrix [ i ] [ 1 ] , end  =   \" \" ) \n ",
      "answerA": " 1 2 3 4 \n",
      "answerB": " 4 5 6 7 \n",
      "answerC": " 1 3 8 12 \n",
      "answerD": " 2 5 9 13 ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Execute in the shell to verify.  \n "
    },
    {
      "id": "459",
      "question": "What will be the output of the following Python code? \n def m ( list ) :     v  =  list [ 0 ]      for  e in list :        if  v  <  e :  v  =  e      return  v \u00a0 values  =   [ [ 3 ,  4 ,  5 ,  1 ] ,  [ 33 ,  6 ,  1 ,  2 ] ] \u00a0 for  row in values :       print ( m ( row ) , end  =   \" \" ) \n ",
      "answerA": " 3 33 \n",
      "answerB": " 1 1 \n",
      "answerC": " 5 6 \n",
      "answerD": " 5 33 ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Execute in the shell to verify. \n "
    },
    {
      "id": "460",
      "question": "What will be the output of the following Python code? \n data  =   [ [ [ 1 ,  2 ] ,  [ 3 ,  4 ] ] ,  [ [ 5 ,  6 ] ,  [ 7 ,  8 ] ] ] \u00a0 print ( data [ 1 ] [ 0 ] [ 0 ] ) \n ",
      "answerA": " 1 \n",
      "answerB": " 2 \n",
      "answerC": " 4 \n",
      "answerD": " 5 ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Execute in the shell to verify. \n "
    },
    {
      "id": "461",
      "question": "What will be the output of the following Python code? \n data  =   [ [ [ 1 ,  2 ] ,  [ 3 ,  4 ] ] ,  [ [ 5 ,  6 ] ,  [ 7 ,  8 ] ] ] \u00a0 def ttt ( m ) :     v  =  m [ 0 ] [ 0 ] \u00a0      for  row in m :          for  element in row :             if  v  <  element :  v  =  element \u00a0      return  v \u00a0 print ( ttt ( data [ 0 ] ) ) \n ",
      "answerA": " 1 \n",
      "answerB": " 2 \n",
      "answerC": " 4 \n",
      "answerD": " 5 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Execute in the shell to verify. \n "
    },
    {
      "id": "462",
      "question": "What will be the output of the following Python code? \n points  =   [ [ 1 ,  2 ] ,  [ 3 ,  1.5 ] ,  [ 0.5 ,  0.5 ] ] points. sort ( ) print ( points ) \n ",
      "answerA": " [[1, 2], [3, 1.5], [0.5, 0.5]]  \n",
      "answerB": " [[3, 1.5], [1, 2], [0.5, 0.5]]  \n",
      "answerC": " [[0.5, 0.5], [1, 2], [3, 1.5]]  \n",
      "answerD": " [[0.5, 0.5], [3, 1.5], [1, 2]]  ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Execute in the shell to verify. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all questions papers on Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 Lists \u2013 4 \u00bb  Next - Python Questions and Answers \u2013 Lists \u2013 6   Related Posts: Practice  Programming MCQs \n Apply for  Programming Internship \n Check  Python Books \n Apply for  Python Internship \n Check  Information Technology Books \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 Lists \u2013 3  \n Python Questions and Answers \u2013 Lists \u2013 6  \n Python Program to Map Two Lists into a Dictionary  \n Python Questions and Answers \u2013 Lists \u2013 7  \n Python Program to Find the Intersection of Two Lists  \n Python Program to Merge Two Lists and Sort it  \n Python Program to Split Even and Odd Elements into Two Lists  \n Python Multiple Choice Questions \u2013 Lists  \n Python Program to Find the Union of Two Lists  \n Python Questions and Answers \u2013 Lists \u2013 2  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Linked List Programs in Python Python Programs on Trees Searching and Sorting in Python Python Programs on Graphs Python Programming Examples Popular Pages: Python MCQ Questions C++ Algorithm Library C Programs on Arrays C Programming Examples on Trees C Programs on Recursion    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Linked List Programs in Python Python Programs on Trees Searching and Sorting in Python Python Programs on Graphs Python Programming Examples \n   \n \n \n \n \n \n \n   Popular Pages Python MCQ Questions C++ Algorithm Library C Programs on Arrays C Programming Examples on Trees C Programs on Recursion \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.424 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-02 22:38:46  \n  Compression = gzip "
    },
    {
      "id": "463",
      "question": "What will be the output of the following Python code? \n \n \n \n \n \n def f ( i, values  =   [ ] ) :     values. append ( i )      return  values \u00a0 f ( 1 ) f ( 2 ) v  =  f ( 3 ) print ( v ) \n ",
      "answerA": " [1] [2] [3]  \n",
      "answerB": " [1] [1, 2] [1, 2, 3]  \n",
      "answerC": " [1, 2, 3]  \n",
      "answerD": " 1 2 3 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Execute in the shell to verify \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "464",
      "question": "What will be the output of the following Python code? \n names1  =   [ 'Amir' ,  'Bala' ,  'Chales' ] \u00a0 if   'amir'  in names1 :     print ( 1 ) else :     print ( 2 ) \n ",
      "answerA": " None \n",
      "answerB": " 1 \n",
      "answerC": " 2 \n",
      "answerD": " Error ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Execute in the shell to verify.  \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n "
    },
    {
      "id": "465",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n names1  =   [ 'Amir' ,  'Bala' ,  'Charlie' ] names2  =   [ name. lower ( )   for  name in names1 ] \u00a0 print ( names2 [ 2 ] [ 0 ] ) \n ",
      "answerA": " None \n",
      "answerB": " a \n",
      "answerC": " b \n",
      "answerD": " c ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " List Comprehension are a shorthand for creating new lists.  \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "466",
      "question": "What will be the output of the following Python code? \n numbers  =   [ 1 ,  2 ,  3 ,  4 ] \u00a0 numbers. append ( [ 5 , 6 , 7 , 8 ] ) \u00a0 print ( len ( numbers ) ) \n ",
      "answerA": " 4 \n",
      "answerB": " 5 \n",
      "answerC": " 8 \n",
      "answerD": " 12 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " A list is passed in append so the length is "
    },
    {
      "id": "467",
      "question": "To which of the following the \u201cin\u201d operator can be used to check if an item is in it? \n",
      "answerA": " Lists \n",
      "answerB": " Dictionary \n",
      "answerC": " Set \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " In can be used in all data structures. \n "
    },
    {
      "id": "468",
      "question": "What will be the output of the following Python code? \n list1  =   [ 1 ,  2 ,  3 ,  4 ] list2  =   [ 5 ,  6 ,  7 ,  8 ] \u00a0 print ( len ( list1  +  list2 ) ) \n ",
      "answerA": " 2 \n",
      "answerB": " 4 \n",
      "answerC": " 5 \n",
      "answerD": " 8 ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " + appends all the elements individually into a new list.  \n "
    },
    {
      "id": "469",
      "question": "What will be the output of the following Python code? \n def addItem ( listParam ) :     listParam  + =   [ 1 ] \u00a0 mylist  =   [ 1 ,  2 ,  3 ,  4 ] addItem ( mylist ) print ( len ( mylist ) ) \n ",
      "answerA": " 1 \n",
      "answerB": " 4 \n",
      "answerC": " 5 \n",
      "answerD": " 8 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " + will append the element to the list. \n "
    },
    {
      "id": "470",
      "question": "What will be the output of the following Python code? \n def increment_items ( L, increment ) :     i  =   0      while  i  <  len ( L ) :         L [ i ]   =  L [ i ]   +  increment         i  =  i  +   1 \u00a0 values  =   [ 1 ,  2 ,  3 ] print ( increment_items ( values,  2 ) ) print ( values ) \n ",
      "answerA": "  \n    None\r\n   [3, 4, 5] \n ",
      "answerB": "  \n    None\r\n   [1, 2, 3] \n ",
      "answerC": "  \n    [3, 4, 5]\r\n   [1, 2, 3] \n ",
      "answerD": "  ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Execute in the shell to verify. \n\u00a0 \u00a0 \n "
    },
    {
      "id": "471",
      "question": "What will be the output of the following Python code? \n def example ( L ) :      '' ' (list) -> list     ' ''     i  =   0     result  =   [ ]      while  i  <  len ( L ) :         result. append ( L [ i ] )         i  =  i  +   3      return  result \n ",
      "answerA": " Return a list containing every third item from L starting at index 0 \n",
      "answerB": " Return an empty list \n",
      "answerC": " Return a list containing every third index from L starting at index 0 \n",
      "answerD": " Return a list containing the items from L starting from index 0, omitting every third item ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Run the code to get a better understanding with many arguments. \n "
    },
    {
      "id": "472",
      "question": "What will be the output of the following Python code? \n veggies  =   [ 'carrot' ,  'broccoli' ,  'potato' ,  'asparagus' ] veggies. insert ( veggies. index ( 'broccoli' ) ,  'celery' ) print ( veggies ) \n ",
      "answerA": " [\u2018carrot\u2019, \u2018celery\u2019, \u2018broccoli\u2019, \u2018potato\u2019, \u2018asparagus\u2019]\tCorrect\t1.00 \n",
      "answerB": " [\u2018carrot\u2019, \u2018celery\u2019, \u2018potato\u2019, \u2018asparagus\u2019]    \n",
      "answerC": " [\u2018carrot\u2019, \u2018broccoli\u2019, \u2018celery\u2019, \u2018potato\u2019, \u2018asparagus\u2019]    \n",
      "answerD": " [\u2018celery\u2019, \u2018carrot\u2019, \u2018broccoli\u2019, \u2018potato\u2019, \u2018asparagus\u2019]  ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Execute in the shell to verify. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all programming interview questions on Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 Lists \u2013 3 \u00bb  Next - Python Questions and Answers \u2013 Lists \u2013 5   Related Posts: Check  Python Books \n Practice  Programming MCQs \n Apply for  Programming Internship \n Apply for  Python Internship \n Check  Information Technology Books \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 Lists \u2013 2  \n Python Questions and Answers \u2013 Lists \u2013 5  \n Python Questions and Answers \u2013 Lists \u2013 3  \n Python Questions and Answers \u2013 Lists \u2013 6  \n Python Questions and Answers \u2013 Lists \u2013 7  \n Python Multiple Choice Questions \u2013 Lists  \n Python Program to Map Two Lists into a Dictionary  \n Python Program to Find the Union of Two Lists  \n Python Program to Find the Intersection of Two Lists  \n Python Questions and Answers \u2013 While and For Loops \u2013 4  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python Programs on Trees Searching and Sorting in Python Linked List Programs in Python Python Programs on Graphs Python MCQ Questions Popular Pages: Python Programming Examples C++ Algorithm Library C Programs on Recursion PHP MCQ Questions C# Programs on Functions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python Programs on Trees Searching and Sorting in Python Linked List Programs in Python Python Programs on Graphs Python MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Python Programming Examples C++ Algorithm Library C Programs on Recursion PHP MCQ Questions C# Programs on Functions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.301 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 01:22:29  \n  Compression = gzip "
    },
    {
      "id": "473",
      "question": "Which of the following matrices will throw an error in Python? \n",
      "answerA": "  \n         A = [[1, 2, 3],\r\n        [4, 5, 6],\r\n        [7, 8, 9]] \n \n \n \n \n \n ",
      "answerB": "  \n         B = [[3, 3, 3]\r\n        [4, 4, 4]\r\n        [5, 5, 5]] \n ",
      "answerC": "  \n         C = [(1, 2, 4),\r\n        (5, 6, 7),\r\n        (8, 9, 10)] \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n ",
      "answerD": "  ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " In matrix B will result in an error because in the absence of a comma at the end of each row, it behaves like three separate lists. The error thrown states that the list integers must be integers or slices, not tuples. \n\u00a0 \u00a0 \n "
    },
    {
      "id": "474",
      "question": "What will be the output of the following Python code? \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n A  =   [ [ 1 ,   2 ,   3 ] , \n           [ 4 ,   5 ,   6 ] , \n           [ 7 ,   8 ,   9 ] ] \nA [ 1 ] \n ",
      "answerA": " [4, 5, 6]  \n",
      "answerB": " [3, 6, 9]  \n",
      "answerC": " [1, 4, 7]  \n",
      "answerD": " [1, 2, 3]  ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " We can index the rows and columns using normal index operations. The statement A[1] represents the second row, that is, the middle row. Hence the output of the code will be: [4, 5, 6]. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "475",
      "question": "Which of the following Python statements will result in the output: 6? \n A  =   [ [ 1 ,   2 ,   3 ] , \n      [ 4 ,   5 ,   6 ] , \n      [ 7 ,   8 ,   9 ] ] \n ",
      "answerA": " A[2][3]  \n",
      "answerB": " A[2][1]  \n",
      "answerC": " A[1][2]  \n",
      "answerD": " A[3][2]  ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The output that is required is 6, that is, row 2, item "
    },
    {
      "id": "476",
      "question": "What will be the output of the following Python code? \n A  =   [ [ 1 ,   2 ,   3 ] , \n       [ 4 ,   5 ,   6 ] , \n       [ 7 ,   8 ,   9 ] ] \n [ A [ row ] [ 1 ]   for  row  in   ( 0 ,   1 ,   2 ) ] \n ",
      "answerA": " [7, 8, 9]  \n",
      "answerB": " [4, 5, 6]  \n",
      "answerC": " [2, 5, 8]  \n",
      "answerD": " [1, 4, 7]  ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " To get a particular column as output, we can simple iterate across the rows and pull out the desired column, or iterate through positions in rows and index as we go. Hence the output of the code shown above is: [2, 5, 8]. \n "
    },
    {
      "id": "477",
      "question": "What will be the output of the following Python code? \n A  =   [ [ 1 ,   2 ,   3 ] , \n      [ 4 ,   5 ,   6 ] , \n      [ 7 ,   8 ,   9 ] ] \n [ A [ i ] [ i ]   for  i  in   range ( len ( A ) ) ] \n ",
      "answerA": " [1, 5, 9]  \n",
      "answerB": " [3, 5, 7]  \n",
      "answerC": " [4, 5, 6]  \n",
      "answerD": " [2, 5, 8]  ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " We can also perform tasks like pulling out a diagonal. The expression shown above uses range to generate the list of offsets and the indices with the row and column the same, picking out A[0][0], then A[1][1] and so on. Hence the output of the code is: [1, 5, 9]. \n "
    },
    {
      "id": "478",
      "question": "What will be the output of the following Python code? \n l = [ [ 1 ,   2 ,   3 ] ,   [ 4 ,   5 ,   6 ] ] \n for  i  in   range ( len ( l ) ) :\n\t for  j  in   range ( len ( l [ i ] ) ) :\n\t\tl [ i ] [ j ] + = 10 \nl \n ",
      "answerA": " No output \n",
      "answerB": " Error \n",
      "answerC": " [[1, 2, 3], [4, 5, 6]]  \n",
      "answerD": " [[11, 12, 13], [14, 15, 16]]  ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " We use range twice if the shapes differ. Each element of list l is increased by "
    },
    {
      "id": "479",
      "question": "What will be the output of the following Python code? \n A  =   [ [ 1 ,   2 ,   3 ] , \n      [ 4 ,   5 ,   6 ] , \n      [ 7 ,   8 ,   9 ] ] \n\u00a0\n [ [ col +  10   for  col  in  row ]   for  row  in  A ] \n ",
      "answerA": " [[11, 12, 13], [14, 15, 16], [17, 18, 19]]  \n",
      "answerB": " Error \n",
      "answerC": " [11, 12, 13], [14, 15, 16], [17, 18, 19]  \n",
      "answerD": " [11, 12, 13, 14, 15, 16, 17, 18, 19]  ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above shows a list comprehension which adds 10 to each element of the matrix A and prints it row-wise. Hence the output of the code is:  [[11, 12, 13], [14, 15, 16], [17, 18, 19]] \n "
    },
    {
      "id": "480",
      "question": "What will be the output of the following Python code? \n A  =   [ [ 1 ,   2 ,   3 ] , \n      [ 4 ,   5 ,   6 ] , \n      [ 7 ,   8 ,   9 ] ] \n [ A [ i ] [ len ( A ) - 1 -i ]   for  i  in   range ( len ( A ) ) ] \n ",
      "answerA": " [1, 5, 9]  \n",
      "answerB": " [4, 5, 6]  \n",
      "answerC": " [3, 5, 7]  \n",
      "answerD": " [2, 5, 8]  ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " This expression scales the common index to fetch A[0][2], A[1][1], etc. We assume the matrix has the same number of rows and columns. \n "
    },
    {
      "id": "481",
      "question": "What will be the output of the following Python code? \n A  =   [ [ 1 ,   2 ,   3 ] , \n      [ 4 ,   5 ,   6 ] , \n      [ 7 ,   8 ,   9 ] ] \nB  =   [ [ 3 ,   3 ,   3 ] , \n      [ 4 ,   4 ,   4 ] , \n      [ 5 ,   5 ,   5 ] ] \n [ B [ row ] [ col ] *A [ row ] [ col ]   for  row  in   range ( 3 )   for  col  in   range ( 3 ) ] \n ",
      "answerA": " [3, 6, 9, 16, 20, 24, 35, 40, 45] \n",
      "answerB": " Error \n",
      "answerC": " [0, 30, 60, 120, 160, 200, 300, 350, 400] \n",
      "answerD": " 0 ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " In the code shown above, we have used list comprehension to combine values of multiple matrices. We have multiplied the elements of the matrix B with that of the matrix A, in the range(3). Hence the output of this code is: [3, 6, 9, 16, 20, 24, 35, 40, 45]. \n "
    },
    {
      "id": "482",
      "question": "What will be the output of the following Python code? \n r  =   [ 11 ,   12 ,   13 ,   14 ,   15 ,   16 ,   17 ,   18 ,   19 ] \nA  =   [ [ 0 ,   10 ,   20 ] , \n                [ 30 ,   40 ,   50 ] , \n                [ 60 ,   70 ,   80 ] ] \n for  row  in  A:\n\t for  col  in  row:\n\t\tr. append ( col+ 10 ) \nr \n ",
      "answerA": " [11, 12, 13, 14, 15, 16, 17, 18, 19, 10, 20, 30, 40, 50, 60, 70, 80, 90] \n",
      "answerB": " [10, 20, 30, 40, 50, 60, 70, 80, 90] \n",
      "answerC": " [11, 12, 13, 14, 15, 16, 17, 18, 19] \n",
      "answerD": " [0, 10, 20, 30, 40, 50, 60, 70, 80] ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above adds 10 to each element of the matrix and prints the output row-wise. Since the list l already contains some elements, the new elements are appended to it. Hence the output of this code is: [11, 12, 13, 14, 15, 16, 17, 18, 19, 10, 20, 30, 40, 50, 60, 70, 80, 90]. \n "
    },
    {
      "id": "483",
      "question": "What will be the output of the following Python code? \n A  =   [ [ 1 ,   2 ,   3 ] , \n      [ 4 ,   5 ,   6 ] , \n      [ 7 ,   8 ,   9 ] ] \nB  =   [ [ 3 ,   3 ,   3 ] , \n      [ 4 ,   4 ,   4 ] , \n      [ 5 ,   5 ,   5 ] ] \n [ [ col1 * col2  for   ( col1 ,  col2 )   in   zip ( row1 ,  row2 ) ]   for   ( row1 ,  row2 )   in   zip ( A ,  B ) ] \n ",
      "answerA": " [0, 30, 60, 120, 160, 200, 300, 350, 400] \n",
      "answerB": " [[3, 6, 9], [16, 20, 24], [35, 40, 45]] \n",
      "answerC": " No output \n",
      "answerD": " Error ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The list comprehension shown above results in the output: [[3, 6, 9], [16, 20, 24], [35, 40, 45]]. \n "
    },
    {
      "id": "484",
      "question": "What will be the output of the following Python code? \n A  =   [ [ 1 ,   2 ,   3 ] , \n      [ 4 ,   5 ,   6 ] , \n      [ 7 ,   8 ,   9 ] ] \nB  =   [ [ 3 ,   3 ,   3 ] , \n      [ 4 ,   4 ,   4 ] , \n      [ 5 ,   5 ,   5 ] ] \n zip ( A ,  B ) \n ",
      "answerA": " Address of the zip object \n",
      "answerB": " Address of the matrices A and B \n",
      "answerC": " No output \n",
      "answerD": " [3, 6, 9, 16, 20, 24, 35, 40, 45] ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The output of the code shown above returns the address of the zip object. If we print it in the form of a list, we get: \n>>> list(zip(A, B)) \n[([1, 2, 3], [3, 3, 3]), ([4, 5, 6], [4, 4, 4]), ([7, 8, 9], [5, 5, 5])] \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 List Comprehension \u2013 2 \u00bb  Next - Python Multiple Choice Questions \u2013 Tuples   Related Posts: Practice  Programming MCQs \n Apply for  Python Internship \n Check  Python Books \n Check  Information Technology Books \n Apply for  Programming Internship \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Multiple Choice Questions \u2013 List Comprehension  \n Python Questions and Answers \u2013 List Comprehension \u2013 2  \n Python Questions and Answers \u2013 List Comprehension \u2013 1  \n Python Program to Implement Stack using Linked List  \n Linked List Programs in Python  \n Python Program to Flatten a List without using Recursion  \n Python Program to Flatten a Nested List using Recursion  \n Python Program to Convert Singly Linked List to Circular List  \n Python Program to Find the Length of a List using Recursion  \n Python Program to Sort a List of Tuples in Increasing Order by the Last Element in Each Tuple  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Linked List Programs in Python Python Programs on Graphs Python Programs on Trees Searching and Sorting in Python Python Programming Examples Popular Pages: Linked List Programs in C Python MCQ Questions C Programs on Matrix C++ Matrix Programs Java Matrix Programs    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Linked List Programs in Python Python Programs on Graphs Python Programs on Trees Searching and Sorting in Python Python Programming Examples \n   \n \n \n \n \n \n \n   Popular Pages Linked List Programs in C Python MCQ Questions C Programs on Matrix C++ Matrix Programs Java Matrix Programs \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.786 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 01:39:01  \n  Compression = gzip "
    },
    {
      "id": "485",
      "question": "Read the information given below carefully and write a list comprehension such that the output is: [\u2018e\u2019, \u2018o\u2019]\n\n \n \n \n \n \n w = \"hello\" \nv = ( 'a' ,   'e' ,   'i' ,   'o' ,   'u' ) \n ",
      "answerA": " [x for w in v if x in v] \n",
      "answerB": " [x for x in w if x in v] \n",
      "answerC": " [x for x in v if w in v] \n",
      "answerD": " [x for v in w for x in w] ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The tuple \u2018v\u2019 is used to generate a list containing only vowels in the string \u2018w\u2019. The result is a list containing only vowels present in the string \u201chello\u201d. Hence the required list comprehension is: [x for x in w if x in v]. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "486",
      "question": "What will be the output of the following Python code? \n [ ord ( ch )   for  ch  in   'abc' ] \n ",
      "answerA": " [97, 98, 99] \n",
      "answerB": " [\u201897\u2019, \u201898\u2019, \u201899\u2019] \n",
      "answerC": " [65, 66, 67] \n",
      "answerD": " Error ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The list comprehension shown above returns the ASCII value of each alphabet of the string \u2018abc\u2019. Hence the output is: [97, 98, 99]. Had the string been \u2018ABC\u2019, the output would be: [65, 66, 67]. \n \n \n    \nNote: Join free Sanfoundry classes at  Telegram  or  Youtube \n \n \n \n \n \n \n \n "
    },
    {
      "id": "487",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n t = 32.00 \n [ round ( ( x- 32 ) * 5 / 9 )   for  x  in  t ] \n ",
      "answerA": " [0] \n",
      "answerB": " 0 \n",
      "answerC": " [0.00] \n",
      "answerD": " Error ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The value of t in the code shown above is equal to 32.00, which is a floating point value. \u2018Float\u2019 objects are not iterable. Hence the code results in an error. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "488",
      "question": "\n",
      "answerA": " [x in range(1, 1000) if x%3==0] \n",
      "answerB": " [x for x in range(1000) if x%3==0] \n",
      "answerC": " [x%3 for x in range(1, 1000)] \n",
      "answerD": " [x%3=0 for x in range(1, 1000)] ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The list comprehension [x for x in range(1000) if x%3==0] produces a list of numbers between 1 and 1000 that are divisible by "
    },
    {
      "id": "489",
      "question": "Write a list comprehension equivalent for the Python code shown below. \n for  i  in   range ( 1 ,   101 ) :\n\t if   int ( i* 0.5 ) == i* 0.5 :\n\t\t print ( i ) \n ",
      "answerA": " [i for i in range(1, 100) if int(i*0.5)==(i*0.5)] \n",
      "answerB": " [i for i in range(1, 101) if int(i*0.5)==(i*0.5)] \n",
      "answerC": " [i for i in range(1, 101) if int(i*0.5)=(i*0.5)] \n",
      "answerD": " [i for i in range(1, 100) if int(i*0.5)=(i*0.5)] ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above prints the value \u2018i\u2019 only if it satisfies the condition: int(i*0.5) is equal to (i*0.5). Hence the required list comprehension is: [i for i in range(1, 101) if int(i*0.5)==(i*0.5)]. \n "
    },
    {
      "id": "490",
      "question": "What is the list comprehension equivalent for: list(map(lambda x:x**-1, [1, 2, 3]))? \n",
      "answerA": " [1|x for x in [1, 2, 3]] \n",
      "answerB": " [-1**x for x in [1, 2, 3]] \n",
      "answerC": " [x**-1 for x in [1, 2, 3]] \n",
      "answerD": " [x^-1 for x in range(4)] ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The output of the function list(map(lambda x:x**-1, [1, 2, 3])) is [1.0, 0.5, 0.3333333333333333] and that of the list comprehension [x**-1 for x in [1, 2, 3]] is [1.0, 0.5, 0.3333333333333333]. Hence the answer is: [x**-1 for x in [1, 2, 3]]. \n "
    },
    {
      "id": "491",
      "question": "Write a list comprehension to produce the list: [1, 2, 4, 8, 16\u2026\u2026212]. \n",
      "answerA": " [(2**x) for x in range(0, 13)] \n",
      "answerB": " [(x**2) for x in range(1, 13)] \n",
      "answerC": " [(2**x) for x in range(1, 13)] \n",
      "answerD": " [(x**2) for x in range(0, 13)] ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The required list comprehension will print the numbers from 1 to 12, each raised to "
    },
    {
      "id": "492",
      "question": "What is the list comprehension equivalent for? \n {x : x is a whole number less than 20, x is even}    (including zero) \n ",
      "answerA": " [x for x in range(1, 20) if (x%2==0)] \n",
      "answerB": " [x for x in range(0, 20) if (x//2==0)] \n",
      "answerC": " [x for x in range(1, 20) if (x//2==0)] \n",
      "answerD": " [x for x in range(0, 20) if (x%2==0)] ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The required list comprehension will print a whole number, less than 20, provided that the number is even. Since the output list should contain zero as well, the answer to this question is: [x for x in range(0, 20) if (x%2==0)]. \n "
    },
    {
      "id": "493",
      "question": "What will be the output of the following Python list comprehension? \n [ j  for  i  in   range ( 2 , 8 )   for  j  in   range ( i* 2 ,   50 ,  i ) ] \n ",
      "answerA": " A list of prime numbers up to 50 \n",
      "answerB": " A list of numbers divisible by 2, up to 50 \n",
      "answerC": " A list of non prime numbers, up to 50 \n",
      "answerD": " Error ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The list comprehension shown above returns a list of non-prime numbers up to "
    },
    {
      "id": "494",
      "question": "What will be the output of the following Python code? \n l = [ \"good\" ,   \"oh!\" ,   \"excellent!\" ,   \"#450\" ] \n [ n  for  n  in  l  if  n. isalpha ( )   or  n. isdigit ( ) ] \n ",
      "answerA": " [\u2018good\u2019, \u2018oh\u2019, \u2018excellent\u2019, \u2018450\u2019\t] \n",
      "answerB": " [\u2018good\u2019] \n",
      "answerC": " [\u2018good\u2019, \u2018#450\u2019] \n",
      "answerD": " [\u2018oh!\u2019, \u2018excellent!\u2019, \u2018#450\u2019] ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above returns a new list containing only strings which do not have any punctuation in them. The only string from the list which does not contain any punctuation is \u2018good\u2019. Hence the output of the code shown above is [\u2018good\u2019]. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers .  \n \u00ab  Prev - Python Questions and Answers \u2013 List Comprehension \u2013 1 \u00bb  Next - Python Questions and Answers \u2013 Matrix List Comprehension   Related Posts: Practice  Programming MCQs \n Apply for  Python Internship \n Check  Information Technology Books \n Apply for  Programming Internship \n Check  Python Books \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Multiple Choice Questions \u2013 List Comprehension  \n Python Questions and Answers \u2013 List Comprehension \u2013 1  \n Python Questions and Answers \u2013 Matrix List Comprehension  \n Python Program to Find the Length of a List using Recursion  \n Python Program to Implement Stack using Linked List  \n Python Program to Count the Number of Vowels in a String  \n Python Program to Count Number of Vowels in a String using Sets  \n Python Program to Flatten a List without using Recursion  \n Python Program to Flatten a Nested List using Recursion  \n Python Program to Find the Cumulative Sum of a List  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Linked List Programs in Python Searching and Sorting in Python Python MCQ Questions Python Programming Examples Python Programs on Trees Popular Pages: Python Programs on Graphs Linked List Programs in C C# String Programs String Programs in C++ C Programs on Recursion    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Linked List Programs in Python Searching and Sorting in Python Python MCQ Questions Python Programming Examples Python Programs on Trees \n   \n \n \n \n \n \n \n   Popular Pages Python Programs on Graphs Linked List Programs in C C# String Programs String Programs in C++ C Programs on Recursion \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.384 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 20:58:51  \n  Compression = gzip "
    },
    {
      "id": "495",
      "question": "What will be the output of the following Python code? \n \n \n \n \n \n l = [ 1 , 2 , 3 , 4 , 5 ] \n [ x& 1   for  x  in  l ] \n ",
      "answerA": " [1, 1, 1, 1, 1] \n",
      "answerB": " [1, 0, 1, 0, 1] \n",
      "answerC": " [1, 0, 0, 0, 0] \n",
      "answerD": " [0, 1, 0, 1, 0] ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " In the code shown above, each of the numbers of the list, that is, 1, 2, 3, 4 and 5 are AND-ed with 1 and the result is printed in the form of a list. Hence the output is [1, 0, 1, 0, 1]. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "496",
      "question": "What will be the output of the following Python code? \n l1 = [ 1 , 2 , 3 ] \nl2 = [ 4 , 5 , 6 ] \n [ x*y  for  x  in  l1  for  y  in  l2 ] \n ",
      "answerA": " [4, 8, 12, 5, 10, 15, 6, 12, 18] \n",
      "answerB": " [4, 10, 18] \n",
      "answerC": " [4, 5, 6, 8, 10, 12, 12, 15, 18] \n",
      "answerD": " [18, 12, 6, 15, 10, 5, 12, 8, 4] ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above returns x*y, where x belongs to the list l1 and y belongs to the list l"
    },
    {
      "id": "497",
      "question": "Write the list comprehension to pick out only negative integers from a given list \u2018l\u2019. \n",
      "answerA": " [x<0 in l]  \n",
      "answerB": " [x for x<0 in l]  \n",
      "answerC": " [x in l for x<0]  \n",
      "answerD": " [x for x in l if x<0]  ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " To pick out only the negative numbers from a given list \u2018l\u2019, the correct list comprehension statement would be: [x for x in l if x<0].    \nFor example if we have a list l=[-65, 2, 7, -99, -4, 3]                                                                                                        >>> [x for x in l if x<0]                                                                                                                                                  The output would be: [-65, -99, -4]. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "498",
      "question": "What will be the output of the following Python code? \n s = [ \"pune\" ,   \"mumbai\" ,   \"delhi\" ] \n [ ( w. upper ( ) ,   len ( w ) )   for  w  in  s ] \n ",
      "answerA": " Error \n",
      "answerB": " [\u2018PUNE\u2019, 4, \u2018MUMBAI\u2019, 6, \u2018DELHI\u2019, 5] \n",
      "answerC": " [PUNE, 4, MUMBAI, 6, DELHI, 5] \n",
      "answerD": " [(\u2018PUNE\u2019, 4), (\u2018MUMBAI\u2019, 6), (\u2018DELHI\u2019, 5)] ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " If we need to generate two results, we need to put it in the form of a tuple. The code shown above returns each word of list in uppercase, along with the length of the word. Hence the output of the code is: [(\u2018PUNE\u2019, 4), (\u2018MUMBAI\u2019, 6), (\u2018DELHI\u2019, 5)]. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "499",
      "question": " What will be the output of the following Python code? \n l1 = [ 2 , 4 , 6 ] \nl2 = [ - 2 , - 4 , - 6 ] \n for  i  in   zip ( l1 ,  l2 ) :\n\t print ( i ) \n ",
      "answerA": "  \n    2, -2\r\n   4, -4\r\n   6, -6 \n ",
      "answerB": " [(2, -2), (4, -4), (6, -6)] \n",
      "answerC": "  \n    (2, -2)\r\n   (4, -4)\r\n   (6, -6) \n ",
      "answerD": " [-4, -16, -36] ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The output of the code shown will be: \n (2, -2) \n (4, -4) \n (6, -6) \nThis format is due to the statement print(i). \n "
    },
    {
      "id": "500",
      "question": "What will be the output of the following Python code? \n l1 = [ 10 ,   20 ,   30 ] \nl2 = [ - 10 ,  - 20 ,  - 30 ] \nl3 = [ x+y  for  x ,  y  in   zip ( l1 ,  l2 ) ] \n print ( l3 ) \n ",
      "answerA": " Error \n",
      "answerB": " 0 \n",
      "answerC": " [-20, -60, -80] \n",
      "answerD": " [0, 0, 0] ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above returns x+y, for x belonging to the list l1 and y belonging to the list l"
    },
    {
      "id": "501",
      "question": "Write a list comprehension for number and its cube for l=[1, 2, 3, 4, 5, 6, 7, 8, 9]. \n",
      "answerA": " [x**3 for x in l] \n",
      "answerB": " [x^3 for x in l] \n",
      "answerC": " [x**3 in l] \n",
      "answerD": " [x^3 in l] ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The list comprehension to print a list of cube of the numbers for the given list is: [x**3 for x in l]. \n "
    },
    {
      "id": "502",
      "question": "What will be the output of the following Python code? \n l = [ [ 1   , 2 ,   3 ] ,   [ 4 ,   5 ,   6 ] ,   [ 7 ,   8 ,   9 ] ] \n [ [ row [ i ]   for  row  in  l ]   for  i  in   range ( 3 ) ] \n ",
      "answerA": " Error \n",
      "answerB": " [[1, 4, 7], [2, 5, 8], [3, 6, 9]] \n",
      "answerC": "  \n    1 4 7\r\n   2 5 8\r\n   3 6 9 \n ",
      "answerD": "  ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " In the code shown above, \u20183\u2019 is the index of the list. Had we used a number greater than 3, it would result in an error. The output of this code is: [[1, 4, 7], [2, 5, 8], [3, 6, 9]]. \n\u00a0 \u00a0 \n "
    },
    {
      "id": "503",
      "question": "What will be the output of the following Python code? \n import   math \n [ str ( round ( math . pi ) )   for  i  in   range   ( 1 ,   6 ) ] \n ",
      "answerA": " [\u20183\u2019, \u20183\u2019, \u20183\u2019, \u20183\u2019, \u20183\u2019, \u20183\u2019] \n",
      "answerB": " [\u20183.1\u2019, \u20183.14\u2019, \u20183.142\u2019, \u20183.1416\u2019, \u20183.14159\u2019, \u20183.141582\u2019] \n",
      "answerC": " [\u20183\u2019, \u20183\u2019, \u20183\u2019, \u20183\u2019, \u20183\u2019] \n",
      "answerD": " [\u20183.1\u2019, \u20183.14\u2019, \u20183.142\u2019, \u20183.1416\u2019, \u20183.14159\u2019] ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The list comprehension shown above rounds off pi(3.141) and returns its value, that is "
    },
    {
      "id": "504",
      "question": "What will be the output of the following Python code? \n l1 = [ 1 , 2 , 3 ] \nl2 = [ 4 , 5 , 6 ] \nl3 = [ 7 , 8 , 9 ] \n for  x ,  y ,  z  in   zip ( l1 ,  l2 ,  l3 ) :\n\t print ( x ,  y ,  z ) \n ",
      "answerA": "  \n     1 4 7\r\n    2 5 8\r\n    3 6 9 \n ",
      "answerB": "  \n     (1 4 7)\r\n   (2 5 8)\r\n   (3 6 9) \n ",
      "answerC": " [(1, 4, 7), (2, 5, 8), (3, 6, 9)] \n",
      "answerD": " Error ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The output of the code shown above is: \n1 4 7 \n2 5 8 \n3 6 9 \nThis is due to the statement: print(x, y,z). \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Multiple Choice Questions \u2013 List Comprehension \u00bb  Next - Python Questions and Answers \u2013 List Comprehension \u2013 2   Related Posts: Check  Python Books \n Apply for  Programming Internship \n Check  Information Technology Books \n Practice  Programming MCQs \n Apply for  Python Internship \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 Matrix List Comprehension  \n Python Questions and Answers \u2013 List Comprehension \u2013 2  \n Python Multiple Choice Questions \u2013 List Comprehension  \n Python Program to Flatten a List without using Recursion  \n Python Program to Flatten a Nested List using Recursion  \n Python Program to Implement Stack using Linked List  \n Python Program to Sort a List of Tuples in Increasing Order by the Last Element in Each Tuple  \n Python Program to Find the Sum of Elements in a List using Recursion  \n Python Program to Find the Total Sum of a Nested List Using Recursion  \n Python Program to Find Nth Node from End of Linked List  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Linked List Programs in Python Searching and Sorting in Python Python Programs on Trees Python MCQ Questions Python Programs on Graphs Popular Pages: Python Programming Examples Linked List Programs in C Visual Basic MCQ Questions C Programs on Recursion C++ Algorithm Library    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Linked List Programs in Python Searching and Sorting in Python Python Programs on Trees Python MCQ Questions Python Programs on Graphs \n   \n \n \n \n \n \n \n   Popular Pages Python Programming Examples Linked List Programs in C Visual Basic MCQ Questions C Programs on Recursion C++ Algorithm Library \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.955 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 00:53:11  \n  Compression = gzip "
    },
    {
      "id": "505",
      "question": "What will be the output of the following Python code snippet? \n \n \n \n \n \n k  =   [ print ( i )   for  i  in  my_string  if  i  not   in   \"aeiou\" ] \n ",
      "answerA": " prints all the vowels in my_string \n",
      "answerB": " prints all the consonants in my_string \n",
      "answerC": " prints all characters of my_string that aren\u2019t vowels \n",
      "answerD": " prints only on executing print(k) ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " print(i) is executed if the given character is not a vowel. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "506",
      "question": "What is the output of print(k) in the following Python code snippet? \n k  =   [ print ( i )   for  i  in  my_string  if  i  not   in   \"aeiou\" ] \n print ( k ) \n ",
      "answerA": " all characters of my_string that aren\u2019t vowels \n",
      "answerB": " a list of Nones \n",
      "answerC": " list of Trues \n",
      "answerD": " list of Falses ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": "none explanation"
    },
    {
      "id": "507",
      "question": "What will be the output of the following Python code snippet? \n \n advertisement \n \n \n \n \n my_string  =   \"hello world\" \nk  =   [ ( i. upper ( ) ,   len ( i ) )   for  i  in  my_string ] \n print ( k ) \n ",
      "answerA": " [(\u2018HELLO\u2019, 5), (\u2018WORLD\u2019, 5)]  \n",
      "answerB": " [(\u2018H\u2019, 1), (\u2018E\u2019, 1), (\u2018L\u2019, 1), (\u2018L\u2019, 1), (\u2018O\u2019, 1), (\u2018 \u2018, 1), (\u2018W\u2019, 1), (\u2018O\u2019, 1), (\u2018R\u2019, 1), (\u2018L\u2019, 1), (\u2018D\u2019, 1)]  \n",
      "answerC": " [(\u2018HELLO WORLD\u2019, 11)]  \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " We are iterating over each letter in the string. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "508",
      "question": "What will be the output of the following Python code snippet? \n x  =   [ i**+ 1   for  i  in   range ( 3 ) ] ;   print ( x ) ; \n ",
      "answerA": " [0, 1, 2]  \n",
      "answerB": " [1, 2, 5]  \n",
      "answerC": " error, **+ is not a valid operator \n",
      "answerD": " error, \u2018;\u2019 is not allowed ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " i**+1 is evaluated as (i)**(+1). \n "
    },
    {
      "id": "509",
      "question": "What will be the output of the following Python code snippet? \n print ( [ i. lower ( )   for  i  in   \"HELLO\" ] ) \n ",
      "answerA": " [\u2018h\u2019, \u2018e\u2019, \u2018l\u2019, \u2018l\u2019, \u2018o\u2019]  \n",
      "answerB": " \u2018hello\u2019 \n",
      "answerC": " [\u2018hello\u2019]  \n",
      "answerD": " hello ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " We are iterating over each letter in the string. \n "
    },
    {
      "id": "510",
      "question": "What will be the output of the following Python code snippet? \n print ( [ i+j  for  i  in   \"abc\"   for  j  in   \"def\" ] ) \n ",
      "answerA": " [\u2018da\u2019, \u2018ea\u2019, \u2018fa\u2019, \u2018db\u2019, \u2018eb\u2019, \u2018fb\u2019, \u2018dc\u2019, \u2018ec\u2019, \u2018fc\u2019]  \n",
      "answerB": " [[\u2018ad\u2019, \u2018bd\u2019, \u2018cd\u2019], [\u2018ae\u2019, \u2018be\u2019, \u2018ce\u2019], [\u2018af\u2019, \u2018bf\u2019, \u2018cf\u2019]]  \n",
      "answerC": " [[\u2018da\u2019, \u2018db\u2019, \u2018dc\u2019], [\u2018ea\u2019, \u2018eb\u2019, \u2018ec\u2019], [\u2018fa\u2019, \u2018fb\u2019, \u2018fc\u2019]]  \n",
      "answerD": " [\u2018ad\u2019, \u2018ae\u2019, \u2018af\u2019, \u2018bd\u2019, \u2018be\u2019, \u2018bf\u2019, \u2018cd\u2019, \u2018ce\u2019, \u2018cf\u2019]  ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " If it were to be executed as a nested for loop, i would be the outer loop and j the inner loop. \n "
    },
    {
      "id": "511",
      "question": "What will be the output of the following Python code snippet? \n print ( [ [ i+j  for  i  in   \"abc\" ]   for  j  in   \"def\" ] ) \n ",
      "answerA": " [\u2018da\u2019, \u2018ea\u2019, \u2018fa\u2019, \u2018db\u2019, \u2018eb\u2019, \u2018fb\u2019, \u2018dc\u2019, \u2018ec\u2019, \u2018fc\u2019]  \n",
      "answerB": " [[\u2018ad\u2019, \u2018bd\u2019, \u2018cd\u2019], [\u2018ae\u2019, \u2018be\u2019, \u2018ce\u2019], [\u2018af\u2019, \u2018bf\u2019, \u2018cf\u2019]]  \n",
      "answerC": " [[\u2018da\u2019, \u2018db\u2019, \u2018dc\u2019], [\u2018ea\u2019, \u2018eb\u2019, \u2018ec\u2019], [\u2018fa\u2019, \u2018fb\u2019, \u2018fc\u2019]]  \n",
      "answerD": " [\u2018ad\u2019, \u2018ae\u2019, \u2018af\u2019, \u2018bd\u2019, \u2018be\u2019, \u2018bf\u2019, \u2018cd\u2019, \u2018ce\u2019, \u2018cf\u2019]  ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The inner list is generated once for each value of j. \n "
    },
    {
      "id": "512",
      "question": "What will be the output of the following Python code snippet? \n print ( [ if  i% 2 == 0 : i ;   else : i+ 1 ;   for  i  in   range ( 4 ) ] ) \n ",
      "answerA": " [0, 2, 2, 4]  \n",
      "answerB": " [1, 1, 3, 3]  \n",
      "answerC": " error \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Syntax error. \n "
    },
    {
      "id": "513",
      "question": "Which of the following is the same as list(map(lambda x: x**-1, [1, 2, 3]))? \n",
      "answerA": " [x**-1 for x in [(1, 2, 3)]]  \n",
      "answerB": " [1/x for x in [(1, 2, 3)]]  \n",
      "answerC": " [1/x for x in (1, 2, 3)]  \n",
      "answerD": " error ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " x**-1 is evaluated as (x)**(-1). \n More MCQs on List Comprehension in Python: \n \n Python List Comprehension MCQ (Set 2) \n Python List Comprehension MCQ (Set 3) \n \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 Lists \u2013 7 \u00bb  Next - Python Questions and Answers \u2013 List Comprehension \u2013 1   Related Posts: Apply for  Programming Internship \n Check  Python Books \n Check  Information Technology Books \n Practice  Programming MCQs \n Apply for  Python Internship \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 List Comprehension \u2013 2  \n Python Questions and Answers \u2013 Matrix List Comprehension  \n Python Questions and Answers \u2013 List Comprehension \u2013 1  \n Python Multiple Choice Questions \u2013 Dictionary  \n Python MCQ \u2013 String \u2013 9  \n Python Multiple Choice Questions \u2013 Exception Handling  \n Python Multiple Choice Questions \u2013 While and For Loops  \n Python Multiple Choice Questions \u2013 Mapping Functions  \n Python Program to Count Number of Vowels in a String using Sets  \n Python Multiple Choice Questions \u2013 Argument Parsing  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python MCQ Questions Linked List Programs in Python Python Programs on Trees JavaScript MCQ Questions Python Programs on Graphs Popular Pages: PHP MCQ Questions Python Programming Examples Java Programming MCQ Questions Searching and Sorting in Python C++ Programming MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python MCQ Questions Linked List Programs in Python Python Programs on Trees JavaScript MCQ Questions Python Programs on Graphs \n   \n \n \n \n \n \n \n   Popular Pages PHP MCQ Questions Python Programming Examples Java Programming MCQ Questions Searching and Sorting in Python C++ Programming MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.509 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 12:29:19  \n  Compression = gzip "
    },
    {
      "id": "514",
      "question": "Is the following Python code valid? \n \n \n \n \n \n >>>  a , b , c = 1 , 2 , 3 \n >>>  a , b , c \n ",
      "answerA": "\tYes, [1,2,3] is printed \n",
      "answerB": "\tNo, invalid syntax \n",
      "answerC": "\tYes, (1,2,3) is printed \n",
      "answerD": "\t1 is printed ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " A tuple needn\u2019t be enclosed in parenthesis. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "515",
      "question": "What will be the output of the following Python code? \n a  =   ( 'check' , ) \nn  =   2 \n for  i  in   range ( int ( n ) ) :\n    a  =   ( a , ) \n     print ( a ) \n ",
      "answerA": "\tError, tuples are immutable \n",
      "answerB": "  \n (('check',),)\r\n((('check',),),) \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n ",
      "answerC": "\t((\u2018check\u2019,)\u2019check\u2019,) \n",
      "answerD": "  ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The loop runs two times and each time the loop runs an extra parenthesis along with a comma is added to the tuple (as a=(a\u2019)). \n\u00a0 \u00a0 \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "516",
      "question": "Is the following Python code valid? \n >>>  a , b = 1 , 2 , 3 \n ",
      "answerA": "\tYes, this is an example of tuple unpacking. a=1 and b=2 \n",
      "answerB": "\tYes, this is an example of tuple unpacking. a=(1,2) and b=3 \n",
      "answerC": "\tNo, too many values to unpack \n",
      "answerD": "\tYes, this is an example of tuple unpacking. a=1 and b=(2,3) ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " For unpacking to happen, the number of values of the right hand side must be equal to the number of variables on the left hand side. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "517",
      "question": "What will be the output of the following Python code? \n >>>  a = ( 1 , 2 ) \n >>>  b = ( 3 , 4 ) \n >>>  c = a+b\n >>>  c \n ",
      "answerA": " (4,6) \n",
      "answerB": " (1,2,3,4) \n",
      "answerC": " Error as tuples are immutable \n",
      "answerD": " None ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " In the above piece of code, the values of the tuples aren\u2019t being changed. Both the tuples are simply concatenated.  \n "
    },
    {
      "id": "518",
      "question": "What will be the output of the following Python code? \n >>>  a , b = 6 , 7 \n >>>  a , b = b , a\n >>>  a , b \n ",
      "answerA": "\t(6,7) \n",
      "answerB": "\tInvalid syntax \n",
      "answerC": "\t(7,6) \n",
      "answerD": "\tNothing is printed ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The above piece of code illustrates the unpacking of variables. \n "
    },
    {
      "id": "519",
      "question": "What will be the output of the following Python code? \n >>>   import   collections \n >>>  a = collections . namedtuple ( 'a' , [ 'i' , 'j' ] ) \n >>>  obj = a ( i = 4 , j = 7 ) \n >>>  obj \n ",
      "answerA": "\ta(i=4, j=7) \n",
      "answerB": "\tobj(i=4, j=7) \n",
      "answerC": "\t(4,7) \n",
      "answerD": "\tAn exception is thrown ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The above piece of code illustrates the concept of named tuples. \n "
    },
    {
      "id": "520",
      "question": "Tuples can\u2019t be made keys of a dictionary. \n",
      "answerA": "\tTrue \n",
      "answerB": "\tFalse ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Tuples can be made keys of a dictionary because they are hashable. \n "
    },
    {
      "id": "521",
      "question": "Is the following Python code valid? \n >>>  a = 2 , 3 , 4 , 5 \n >>>  a \n ",
      "answerA": "\tYes, 2 is printed \n",
      "answerB": "\tYes, [2,3,4,5] is printed \n",
      "answerC": "\tNo, too many values to unpack \n",
      "answerD": "\tYes, (2,3,4,5) is printed ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " A tuple needn\u2019t be enclosed in parenthesis.  \n "
    },
    {
      "id": "522",
      "question": "What will be the output of the following Python code? \n >>>  a = ( 2 , 3 , 1 , 5 ) \n >>>  a. sort ( ) \n >>>  a \n ",
      "answerA": "\t(1,2,3,5) \n",
      "answerB": "\t(2,3,1,5) \n",
      "answerC": "\tNone \n",
      "answerD": "\tError, tuple has no attribute sort ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " A tuple is immutable thus it doesn\u2019t have a sort attribute. \n "
    },
    {
      "id": "523",
      "question": "Is the following Python code valid? \n >>>  a = ( 1 , 2 , 3 ) \n >>>  b = a. update ( 4 , ) \n ",
      "answerA": "\tYes, a=(1,2,3,4) and b=(1,2,3,4) \n",
      "answerB": "\tYes, a=(1,2,3) and b=(1,2,3,4) \n",
      "answerC": "\tNo because tuples are immutable \n",
      "answerD": "\tNo because wrong syntax for update() method ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Tuple doesn\u2019t have any update() attribute because it is immutable. \n "
    },
    {
      "id": "524",
      "question": "What will be the output of the following Python code? \n >>>  a = [ ( 2 , 4 ) , ( 1 , 2 ) , ( 3 , 9 ) ] \n >>>  a. sort ( ) \n >>>  a \n ",
      "answerA": "\t[(1, 2), (2, 4), (3, 9)]  \n",
      "answerB": "\t[(2,4),(1,2),(3,9)]  \n",
      "answerC": "\tError because tuples are immutable \n",
      "answerD": "\tError, tuple has no sort attribute ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " A list of tuples is a list itself. Hence items of a list can be sorted.  \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 Tuples \u2013 2 \u00bb  Next - Python Multiple Choice Questions \u2013 Sets   Related Posts: Check  Information Technology Books \n Apply for  Programming Internship \n Practice  Programming MCQs \n Check  Python Books \n Apply for  Python Internship \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 Tuples \u2013 2  \n Python Program to Sort a List of Tuples in Increasing Order by the Last Element in Each Tuple  \n Python Multiple Choice Questions \u2013 Tuples  \n C++ Programming Questions and Answers \u2013 Tuples \u2013 2  \n Python Program to Remove All Tuples in a List Outside the Given Range  \n C++ Programming Questions and Answers \u2013 Tuples \u2013 1  \n Python Program to Create a List of Tuples with the First Element as the Number and Second Element as the Square of the Number  \n Python Questions and Answers \u2013 Dictionary \u2013 2  \n Python MCQ \u2013 String \u2013 8  \n Python Questions and Answers \u2013 Sets \u2013 2  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Searching and Sorting in Python Python Programming Examples Python MCQ Questions Python Programs on Graphs Python Programs on Trees Popular Pages: Linked List Programs in Python Sorting Algorithms in Java Searching and Sorting Algorithms in C C++ Programming MCQ Questions RDBMS MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Searching and Sorting in Python Python MCQ Questions Python Programming Examples Python Programs on Graphs Python Programs on Trees \n   \n \n \n \n \n \n \n   Popular Pages Linked List Programs in Python Sorting Algorithms in Java Searching and Sorting Algorithms in C C++ Programming MCQ Questions RDBMS MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.458 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-04 00:41:16  \n  Compression = gzip "
    },
    {
      "id": "525",
      "question": "What is the data type of (1)? \n",
      "answerA": "\tTuple \n",
      "answerB": "\tInteger \n",
      "answerC": "\tList \n",
      "answerD": "\tBoth tuple and integer ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " A tuple of one element must be created as (1,). \n \n \n \n \n \n "
    },
    {
      "id": "526",
      "question": "If a=(1,2,3,4), a[1:-1] is _________ \n",
      "answerA": "\tError, tuple slicing doesn\u2019t exist \n",
      "answerB": "\t[2,3]  \n",
      "answerC": "\t(2,3,4) \n",
      "answerD": "\t(2,3) ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Tuple slicing exists and a[1:-1] returns (2,3). \n "
    },
    {
      "id": "527",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n >>>  a = ( 1 , 2 , ( 4 , 5 ) ) \n >>>  b = ( 1 , 2 , ( 3 , 4 ) ) \n >>>  a < b \n ",
      "answerA": "\tFalse \n",
      "answerB": "\tTrue \n",
      "answerC": "\tError, < operator is not valid for tuples \n",
      "answerD": "\tError, < operator is valid for tuples but not if there are sub-tuples ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Since the first element in the sub-tuple of a is larger that the first element in the subtuple of b, False is printed. \n \n \n    \nNote: Join free Sanfoundry classes at  Telegram  or  Youtube \n \n \n \n \n \n \n \n "
    },
    {
      "id": "528",
      "question": "What will be the output of the following Python code? \n >>>  a = ( \"Check\" ) * 3 \n >>>  a \n ",
      "answerA": "  (\u2018Check\u2019,\u2019Check\u2019,\u2019Check\u2019) \n",
      "answerB": " * Operator not valid for tuples \n",
      "answerC": "  (\u2018CheckCheckCheck\u2019) \n",
      "answerD": " Syntax error ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Here (\u201cCheck\u201d) is a string not a tuple because there is no comma after the element. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "529",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n >>>  a = ( 1 , 2 , 3 , 4 ) \n >>>   del ( a [ 2 ] ) \n ",
      "answerA": "\tNow, a=(1,2,4) \n",
      "answerB": "\tNow, a=(1,3,4) \n",
      "answerC": "\tNow a=(3,4) \n",
      "answerD": "\tError as tuple is immutable ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " \u2018tuple\u2019 object doesn\u2019t support item deletion. \n "
    },
    {
      "id": "530",
      "question": "What will be the output of the following Python code? \n >>>  a = ( 2 , 3 , 4 ) \n >>>   sum ( a , 3 ) \n ",
      "answerA": "\tToo many arguments for sum() method \n",
      "answerB": "\tThe method sum() doesn\u2019t exist for tuples \n",
      "answerC": "\t12 \n",
      "answerD": "\t9 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " In the above case, 3 is the starting value to which the sum of the tuple is added to. \n "
    },
    {
      "id": "531",
      "question": "Is the following Python code valid? \n >>>  a = ( 1 , 2 , 3 , 4 ) \n >>>   del  a \n ",
      "answerA": "\tNo because tuple is immutable \n",
      "answerB": "\tYes, first element in the tuple is deleted \n",
      "answerC": "\tYes, the entire tuple is deleted \n",
      "answerD": "\tNo, invalid syntax for del method ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The command del a deletes the entire tuple. \n "
    },
    {
      "id": "532",
      "question": "What type of data is: a=[(1,1),(2,4),(3,9)]? \n",
      "answerA": "\tArray of tuples \n",
      "answerB": "\tList of tuples \n",
      "answerC": "\tTuples of lists \n",
      "answerD": "\tInvalid type ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The variable a has tuples enclosed in a list making it a list of tuples. \n "
    },
    {
      "id": "533",
      "question": "What will be the output of the following Python code? \n >>>  a = ( 0 , 1 , 2 , 3 , 4 ) \n >>>  b = slice ( 0 , 2 ) \n >>>  a [ b ] \n ",
      "answerA": "\tInvalid syntax for slicing \n",
      "answerB": "\t[0,2]  \n",
      "answerC": "\t(0,1) \n",
      "answerD": "\t(0,2) ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The method illustrated in the above piece of code is that of naming of slices. \n "
    },
    {
      "id": "534",
      "question": "Is the following Python code valid? \n >>>  a = ( 1 , 2 , 3 ) \n >>>  b = ( 'A' , 'B' , 'C' ) \n >>>  c = tuple ( zip ( a , b ) ) \n ",
      "answerA": "\tYes, c will be ((1, \u2018A\u2019), (2, \u2018B\u2019), (3, \u2018C\u2019)) \n",
      "answerB": "\tYes, c will be ((1,2,3),(\u2018A\u2019,\u2019B\u2019,\u2019C\u2019)) \n",
      "answerC": "\tNo because tuples are immutable \n",
      "answerD": "\tNo because the syntax for zip function isn\u2019t valid ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Zip function combines individual elements of two iterables into tuples. Execute in Python shell to verify. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Multiple Choice Questions \u2013 Tuples \u00bb  Next - Python Questions and Answers \u2013 Tuples-3   Related Posts: Apply for  Python Internship \n Check  Python Books \n Practice  Programming MCQs \n Check  Information Technology Books \n Apply for  Programming Internship \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Program to Sort a List of Tuples in Increasing Order by the Last Element in Each Tuple  \n Python Questions and Answers \u2013 Tuples-3  \n Python Multiple Choice Questions \u2013 Tuples  \n Python Program to Remove All Tuples in a List Outside the Given Range  \n Python Program to Create a List of Tuples with the First Element as the Number and Second Element as the Square of the Number  \n C++ Programming Questions and Answers \u2013 Tuples \u2013 2  \n C++ Programming Questions and Answers \u2013 Tuples \u2013 1  \n Python Questions and Answers \u2013 Mapping Functions \u2013 3  \n Python Questions and Answers \u2013 Lists \u2013 6  \n Python Questions and Answers \u2013 Advanced Formatting Tools  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Searching and Sorting in Python Linked List Programs in Python Python Programming Examples Python MCQ Questions Python Programs on Trees Popular Pages: Python Programs on Graphs Event Handling in Java with Examples Linked List Programs in C C Programs on Recursion RDBMS MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Searching and Sorting in Python Linked List Programs in Python Python Programming Examples Python MCQ Questions Python Programs on Trees \n   \n \n \n \n \n \n \n   Popular Pages Python Programs on Graphs Event Handling in Java with Examples Linked List Programs in C C Programs on Recursion RDBMS MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.732 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 01:44:27  \n  Compression = gzip "
    },
    {
      "id": "535",
      "question": "Which of the following is a Python tuple? \n",
      "answerA": " [1, 2, 3]  \n",
      "answerB": " (1, 2, 3) \n",
      "answerC": " {1, 2, 3} \n",
      "answerD": " {} ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Tuples are represented with round brackets. \n \n \n \n \n \n "
    },
    {
      "id": "536",
      "question": "Suppose t = (1, 2, 4, 3), which of the following is incorrect? \n",
      "answerA": " print(t[3]) \n",
      "answerB": " t[3] = 45 \n",
      "answerC": " print(max(t)) \n",
      "answerD": " print(len(t)) ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Values cannot be modified in the case of tuple, that is, tuple is immutable.  \n "
    },
    {
      "id": "537",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n >>> t = ( 1 , 2 , 4 , 3 ) >>> t [ 1 : 3 ] \n ",
      "answerA": " (1, 2) \n",
      "answerB": " (1, 2, 4) \n",
      "answerC": " (2, 4) \n",
      "answerD": " (2, 4, 3) ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Slicing in tuples takes place just as it does in strings.  \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n "
    },
    {
      "id": "538",
      "question": "What will be the output of the following Python code? \n >>> t = ( 1 , 2 , 4 , 3 ) >>> t [ 1 : - 1 ] \n ",
      "answerA": " (1, 2) \n",
      "answerB": " (1, 2, 4) \n",
      "answerC": " (2, 4) \n",
      "answerD": " (2, 4, 3) ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Slicing in tuples takes place just as it does in strings. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "539",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n >>> t  =   ( 1 ,  2 ,  4 ,  3 ,  8 ,  9 ) >>> [ t [ i ]   for  i in range ( 0 , len ( t ) ,  2 ) ] \n ",
      "answerA": " [2, 3, 9]  \n",
      "answerB": " [1, 2, 4, 3, 8, 9]  \n",
      "answerC": " [1, 4, 8]  \n",
      "answerD": " (1, 4, 8) ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Execute in the shell to verify. \n "
    },
    {
      "id": "540",
      "question": "What will be the output of the following Python code? \n d  =   { \"john\" : 40 ,  \"peter\" : 45 } d [ \"john\" ] \n ",
      "answerA": " 40 \n",
      "answerB": " 45 \n",
      "answerC": " \u201cjohn\u201d \n",
      "answerD": " \u201cpeter\u201d ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Execute in the shell to verify.  \n "
    },
    {
      "id": "541",
      "question": "What will be the output of the following Python code? \n >>> t  =   ( 1 ,  2 ) >>> 2   *  t \n ",
      "answerA": " (1, 2, 1, 2) \n",
      "answerB": " [1, 2, 1, 2]  \n",
      "answerC": " (1, 1, 2, 2) \n",
      "answerD": " [1, 1, 2, 2]  ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " * operator concatenates tuple. \n "
    },
    {
      "id": "542",
      "question": "What will be the output of the following Python code? \n >>> t1  =   ( 1 ,  2 ,  4 ,  3 ) >>> t2  =   ( 1 ,  2 ,  3 ,  4 ) >>> t1  <  t2 \n ",
      "answerA": " True \n",
      "answerB": " False \nc) Error \nd) None ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Elements are compared one by one in this case. \n "
    },
    {
      "id": "543",
      "question": "What will be the output of the following Python code? \n >>> my_tuple  =   ( 1 ,  2 ,  3 ,  4 ) >>> my_tuple. append (   ( 5 ,  6 ,  7 )   ) >>> print len ( my_tuple ) \n ",
      "answerA": " 1 \n",
      "answerB": " 2 \n",
      "answerC": " 5 \n",
      "answerD": " Error ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Tuples are immutable and don\u2019t have an append method. An exception is thrown in this case. \n "
    },
    {
      "id": "544",
      "question": "What will be the output of the following Python code? \n numberGames  =   { } numberGames [ ( 1 , 2 , 4 ) ]   =   8 numberGames [ ( 4 , 2 , 1 ) ]   =   10 numberGames [ ( 1 , 2 ) ]   =   12 sum  =   0 for  k in numberGames :     sum  + =  numberGames [ k ] print ( len ( numberGames )   +  sum ) \n ",
      "answerA": " 30 \n",
      "answerB": " 24 \n",
      "answerC": " 33 \n",
      "answerD": " 12 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Tuples can be used for keys into dictionary. The tuples can have mixed length and the order of the items in the tuple is considered when comparing the equality of the keys. \n More MCQs on Tuples in Python: \n \n Python Tuple MCQ (Set 2) \n Python Tuple MCQ (Set 3) \n \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 Matrix List Comprehension \u00bb  Next - Python Questions and Answers \u2013 Tuples \u2013 2   Related Posts: Practice  Programming MCQs \n Apply for  Programming Internship \n Apply for  Python Internship \n Check  Information Technology Books \n Check  Python Books \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Program to Sort a List of Tuples in Increasing Order by the Last Element in Each Tuple  \n Python Questions and Answers \u2013 Tuples \u2013 2  \n Python Questions and Answers \u2013 Tuples-3  \n Python Program to Remove All Tuples in a List Outside the Given Range  \n Python Multiple Choice Questions \u2013 Argument Parsing  \n C++ Programming Questions and Answers \u2013 Tuples \u2013 2  \n C++ Programming Questions and Answers \u2013 Tuples \u2013 1  \n Python Multiple Choice Questions \u2013 While and For Loops  \n Python Program to Create a List of Tuples with the First Element as the Number and Second Element as the Square of the Number  \n Python Multiple Choice Questions \u2013 Mapping Functions  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python MCQ Questions Searching and Sorting in Python Python Programs on Trees Linked List Programs in Python Python Programming Examples Popular Pages: Python Programs on Graphs PHP MCQ Questions RDBMS MCQ Questions C++ Programming MCQ Questions JavaScript MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python MCQ Questions Searching and Sorting in Python Python Programs on Trees Linked List Programs in Python Python Programming Examples \n   \n \n \n \n \n \n \n   Popular Pages Python Programs on Graphs PHP MCQ Questions RDBMS MCQ Questions C++ Programming MCQ Questions JavaScript MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.514 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 00:24:37  \n  Compression = gzip "
    },
    {
      "id": "545",
      "question": "add ( ( i , j ) ) \n        i+ = 1 \n        j+ = 1 \n print ( s3 ) \n ",
      "answerA": " {(3, 4), (1, 2)} \n",
      "answerB": " Error \n",
      "answerC": " {(4, 2), (3, 1), (4, 1), (5, 2)} \n",
      "answerD": " {(3, 1), (4, 2)} ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above finds the Cartesian product of the two sets, s1 and s"
    },
    {
      "id": "546",
      "question": "The ____________ function removes the first element of a set and the last element of a list. \n",
      "answerA": " remove \n",
      "answerB": " pop \n",
      "answerC": " discard \n",
      "answerD": " dispose ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The function pop removes the first element when used on a set and the last element when used to a list. \n "
    },
    {
      "id": "839",
      "question": "What will be the output of the following Python code? \n import  functools\nl = [ 1 ,   2 ,   3 ,   4 ,   5 ] \nm = functools. reduce ( lambda  x ,  y:x  if  x > y  else  y ,  l ) \n print ( m ) \n ",
      "answerA": " Error \n",
      "answerB": " Address of m \n",
      "answerC": " 1 \n",
      "answerD": " 5 ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above can be used to find the maximum of the elements from the given list. In the above code, this operation is achieved by using the programming tool reduce. Hence the output of the code shown above is "
    },
    {
      "id": "547",
      "question": "The difference between the functions discard and remove is that: \n",
      "answerA": " Discard removes the last element of the set whereas remove removes the first element of the set \n",
      "answerB": " Discard throws an error if the specified element is not present in the set whereas remove does not throw an error in case of absence of the specified element \n",
      "answerC": " Remove removes the last element of the set whereas discard removes the first element of the set \n",
      "answerD": " Remove throws an error if the specified element is not present in the set whereas discard does not throw an error in case of absence of the specified element ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The function remove removes the element if it is present in the set. If the element is not present, it throws an error. The function discard removes the element if it is present in the set. If the element is not present, no action is performed (Error is not thrown). \n "
    },
    {
      "id": "548",
      "question": "difference ( s1 ) \n ",
      "answerA": "  \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n {1, 2}\r\n{4, 5, 6} \n ",
      "answerB": "  \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n {1, 2}\r\n{1, 2} \n ",
      "answerC": "  \n {4, 5, 6}\r\n{1, 2} \n ",
      "answerD": "  ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The function s1.difference(s2) returns a set containing the elements which are present in the set s1 but not in the set s"
    },
    {
      "id": "549",
      "question": "isdisjoint ( s1 ) \n ",
      "answerA": "  \n True\r\nFalse \n ",
      "answerB": "  ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The function isdisjoint returns true the two sets in question are disjoint, that is if they do not have even a single element in common. The two sets s1 and s2 do not have any elements in common, hence true is returned in both the cases. \n\u00a0 \u00a0 \n "
    },
    {
      "id": "550",
      "question": "If we have two sets, s1 and s2, and we want to check if all the elements of s1 are present in s2 or not, we can use the function: \n",
      "answerA": " s2.issubset(s1) \n",
      "answerB": " s2.issuperset(s1) \n",
      "answerC": " s1.issuperset(s2) \n",
      "answerD": " s1.isset(s2) ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Since we are checking whether all the elements present in the set s1 are present in the set s"
    },
    {
      "id": "551",
      "question": "union ( s2 ) \n ",
      "answerA": "  \n {3}\r\n{1, 2, 3, 4, 5, 6, 8} \n ",
      "answerB": "  \n {1, 2, 4, 5, 6, 8}\r\n{1, 2, 4, 5, 6, 8} \n ",
      "answerC": "  \n {3}\r\n{3} \n ",
      "answerD": "  ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The function s1|s2 as well as the function s1.union(s2) returns a union of the two sets s1 and s"
    },
    {
      "id": "552",
      "question": "What will be the output of the following Python code? \n a = set ( 'abc' ) \nb = set ( 'def' ) \nb. intersection_update ( a ) \na\nb \n ",
      "answerA": "  \n set()\r\n(\u2018e\u2019, \u2018d\u2019, \u2018f\u2019} \n ",
      "answerB": "  \n {}\r\n{} \n ",
      "answerC": "  \n {\u2018b\u2019, \u2018c\u2019, \u2018a\u2019}\r\nset() \n ",
      "answerD": "  ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The function b.intersection_update(a) puts those elements in the set b which are common to both the sets a and b. The set a remains as it is. Since there are no common elements between the sets a and b, the output is: \n\u2018b\u2019, \u2018c\u2019, \u2018a\u2019} \nset(). \n\u00a0 \u00a0 \n "
    },
    {
      "id": "553",
      "question": "issubset ( s1 ) \n ",
      "answerA": " True \n",
      "answerB": " Error \nc) No output \nd) False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Every set is a subset of itself and hence the output of this line of code is true. \n "
    },
    {
      "id": "554",
      "question": "What will be the output of the following Python code? \n x = set ( 'abcde' ) \ny = set ( 'xyzbd' ) \nx. difference_update ( y ) \nx\ny \n ",
      "answerA": "  \n    {\u2018a\u2019, \u2018b\u2019, \u2018c\u2019, \u2018d\u2019, \u2018e\u2019}\r\n   {\u2018x\u2019, \u2018y\u2019, \u2018z\u2019} \n ",
      "answerB": "  \n    {\u2018a\u2019, \u2018c\u2019, \u2018e\u2019}\r\n   {\u2018x\u2019, \u2018y\u2019, \u2018z\u2019, \u2018b\u2019, \u2018d\u2019} \n ",
      "answerC": "  \n    {\u2018b\u2019, \u2018d\u2019}\r\n   {\u2018b\u2019, \u2018d\u2019} \n ",
      "answerD": "  ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The function x.difference_update(y) removes all the elements of the set y from the set x. Hence the output of the code is: \n {\u2018a\u2019, \u2018c\u2019, \u2018e\u2019} \n {\u2018x\u2019, \u2018y\u2019, \u2018z\u2019, \u2018b\u2019, \u2018d\u2019}. \n\u00a0 \u00a0 \n   Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 Sets \u2013 4 \u00bb  Next - Python Multiple Choice Questions \u2013 Dictionary   Related Posts: Apply for  Programming Internship \n Check  Python Books \n Practice  Programming MCQs \n Check  Information Technology Books \n Apply for  Python Internship \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 Sets \u2013 4  \n Python Multiple Choice Questions \u2013 Sets  \n Python Questions and Answers \u2013 Sets \u2013 3  \n Python Questions and Answers \u2013 Sets \u2013 2  \n Python Program to Count Number of Vowels in a String using Sets  \n Python Question and Answers \u2013 Built-in Functions \u2013 2  \n Python Questions and Answers \u2013 Dictionary \u2013 3  \n Python Questions and Answers \u2013 Tuples \u2013 2  \n Python Questions and Answers \u2013 Lists \u2013 3  \n Python Questions and Answers \u2013 Functional Programming Tools  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Linked List Programs in Python Searching and Sorting in Python Python Programs on Trees Python MCQ Questions Python Programming Examples Popular Pages: Python Programs on Graphs C++ Algorithm Library C Programs on Arrays Java Array Programs JavaScript MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Linked List Programs in Python Searching and Sorting in Python Python Programs on Trees Python MCQ Questions Python Programming Examples \n   \n \n \n \n \n \n \n   Popular Pages Python Programs on Graphs C++ Algorithm Library C Programs on Arrays Java Array Programs JavaScript MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.330 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 01:22:35  \n  Compression = gzip "
    },
    {
      "id": "555",
      "question": "Which of the following functions will return the symmetric difference between two sets, x and y? \n",
      "answerA": " x | y \n",
      "answerB": " x ^ y \n",
      "answerC": " x & y \n",
      "answerD": " x \u2013 y ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The function x ^ y returns the symmetric difference between the two sets x and y. This is basically an XOR operation being performed on the two sets. \n \n \n \n \n \n "
    },
    {
      "id": "556",
      "question": "What will be the output of the following Python code snippet? \n z = set ( 'abc$de' ) \n 'a'   in  z \n ",
      "answerA": " True \n",
      "answerB": " False \nc) No output \nd) Error ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above is used to check whether a particular item is a part of a given set or not. Since \u2018a\u2019 is a part of the set z, the output is true. Note that this code would result in an error in the absence of the quotes. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "557",
      "question": "What will be the output of the following Python code snippet? \n \n \n    \nSubscribe Now:  Python Newsletter  |  Important Subjects Newsletters \n \n \n \n \n \n \n \n z = set ( 'abc' ) \nz. add ( 'san' ) \nz. update ( set ( [ 'p' ,   'q' ] ) ) \nz \n ",
      "answerA": " {\u2018abc\u2019, \u2018p\u2019, \u2018q\u2019, \u2018san\u2019} \n",
      "answerB": " {\u2018a\u2019, \u2018b\u2019, \u2018c\u2019, [\u2018p\u2019, \u2018q\u2019], \u2018san} \n",
      "answerC": " {\u2018a\u2019, \u2018c\u2019, \u2018c\u2019, \u2018p\u2019, \u2018q\u2019, \u2018s\u2019, \u2018a\u2019, \u2018n\u2019} \n",
      "answerD": " {\u2018a\u2019, \u2018b\u2019, \u2018c\u2019, \u2018p\u2019, \u2018q\u2019, \u2018san\u2019} ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The code shown first adds the element \u2018san\u2019 to the set z. The set z is then updated and two more elements, namely, \u2018p\u2019 and \u2018q\u2019 are added to it. Hence the output is: {\u2018a\u2019, \u2018b\u2019, \u2018c\u2019, \u2018p\u2019, \u2018q\u2019, \u2018san\u2019} \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "558",
      "question": "What will be the output of the following Python code snippet? \n s = set ( [ 1 ,   2 ,   3 ] ) \ns. union ( [ 4 ,   5 ] ) \ns| ( [ 4 ,   5 ] ) \n ",
      "answerA": "  \n    {1, 2, 3, 4, 5}\r\n   {1, 2, 3, 4, 5} \n \n advertisement \n \n \n \n \n ",
      "answerB": "  \n    Error\r\n   {1, 2, 3, 4, 5} \n ",
      "answerC": "  \n    {1, 2, 3, 4, 5}\r\n   Error \n ",
      "answerD": "  ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The first function in the code shown above returns the set {1, 2, 3, 4, 5}. This is because the method of the function union allows any iterable. However the second function results in an error because of unsupported data type, that is list and set. \n\u00a0 \u00a0 \n "
    },
    {
      "id": "559",
      "question": "What will be the output of the following Python code snippet? \n for  x  in   set ( 'pqr' ) :\n\t print ( x* 2 ) \n ",
      "answerA": "  \n pp\r\nqq\r\nrr \n ",
      "answerB": "  \n pqr\r\npqr \n ",
      "answerC": " ppqqrr \n",
      "answerD": " pqrpqr ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above prints each element of the set twice separately. Hence the output of this code is: \npp \nqq \nrr \n "
    },
    {
      "id": "560",
      "question": "What will be the output of the following Python code snippet? \n { a** 2   for  a  in   range ( 4 ) } \n ",
      "answerA": " {1, 4, 9, 16} \n",
      "answerB": " {0, 1, 4, 9, 16} \n",
      "answerC": " Error \n",
      "answerD": " {0, 1, 4, 9} ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above returns a set containing the square of values in the range 0-3, that is 0, 1, 2 and "
    },
    {
      "id": "561",
      "question": "What will be the output of the following Python function? \n { x  for  x  in   'abc' } \n { x* 3   for  x  in   'abc' } \n ",
      "answerA": "  \n     {abc}\r\n    aaa\r\n    bbb\r\n    ccc \n ",
      "answerB": "  \n     abc\r\n   abc abc abc \n ",
      "answerC": "  \n     {\u2018a\u2019, \u2018b\u2019, \u2018c\u2019}\r\n   {\u2018aaa\u2019, \u2018bbb\u2019, \u2018ccc\u2019} \n ",
      "answerD": "  ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The first function prints each element of the set separately, hence the output is: {\u2018a\u2019, \u2018b\u2019, \u2018c\u2019}. The second function prints each element of the set thrice, contained in a new set. Hence the output of the second function is: {\u2018aaa\u2019, \u2018bbb\u2019, \u2018ccc\u2019}.  (Note that the order may not be the same) \n\u00a0 \u00a0 \n "
    },
    {
      "id": "562",
      "question": "The output of the following code is: class<\u2019set\u2019>. \n type ( { } ) \n ",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The output of the line of code shown above is: class<\u2019dict\u2019>. This is because {} represents an empty dictionary, whereas set() initializes an empty set. Hence the statement is false. \n "
    },
    {
      "id": "841",
      "question": "What will be the output of the following Python code? \n m = reduce ( lambda  x: x- 3   in   range ( 4 ,   10 ) ) \n print ( list ( m ) ) \n ",
      "answerA": " [1, 2, 3, 4, 5, 6, 7] \n",
      "answerB": " No output \n",
      "answerC": " [1, 2, 3, 4, 5, 6] \n",
      "answerD": " Error ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above will result in an error. This is because e have not imported functools. Further, \u2018reduce\u2019, as such is not defined. We should use functools.reduce to remove the error. \n "
    },
    {
      "id": "563",
      "question": "What will be the output of the following Python code snippet? \n a = [ 1 ,   4 ,   3 ,   5 ,   2 ] \nb = [ 3 ,   1 ,   5 ,   2 ,   4 ] \na == b\n set ( a ) == set ( b ) \n ",
      "answerA": "  \n    True\r\n   False \n ",
      "answerB": "  ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " In the code shown above, when we check the equality of the two lists, a and b, we get the output false. This is because of the difference in the order of elements of the two lists. However, when these lists are converted to sets and checked for equality, the output is true. This is known as order-neutral equality. Two sets are said to be equal if and only if they contain exactly the same elements, regardless of order. \n\u00a0 \u00a0 \n "
    },
    {
      "id": "564",
      "question": "What will be the output of the following Python code snippet? \n l = [ 1 ,   2 ,   4 ,   5 ,   2 ,   'xy' ,   4 ] \n set ( l ) \nl \n ",
      "answerA": "  \n {1, 2, 4, 5, 2, \u2018xy\u2019, 4}\r\n[1, 2, 4, 5, 2, \u2018xy\u2019, 4] \n ",
      "answerB": "  \n {1, 2, 4, 5, \u2018xy\u2019}\r\n[1, 2, 4, 5, 2, \u2018xy\u2019, 4] \n ",
      "answerC": "  \n {1, 5, \u2018xy\u2019}\r\n[1, 5, \u2018xy\u2019] \n ",
      "answerD": "  ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " In the code shown above, the function set(l) converts the given list into a set. When this happens, all the duplicates are automatically removed. Hence the output is: {1, 2, 4, 5, \u2018xy\u2019}. On the other hand, the list l remains unchanged. Therefore the output is: [1, 2, 4, 5, 2, \u2018xy\u2019, 4]. \nNote that the order of the elements may not be the same. \n\u00a0 \u00a0 \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 Sets \u2013 3 \u00bb  Next - Python Questions and Answers \u2013 Sets \u2013 5   Related Posts: Apply for  Python Internship \n Practice  Programming MCQs \n Apply for  Programming Internship \n Check  Information Technology Books \n Check  Python Books \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 Sets \u2013 5  \n Python Multiple Choice Questions \u2013 Sets  \n Python Questions and Answers \u2013 Sets \u2013 3  \n Python Questions and Answers \u2013 Sets \u2013 2  \n Python Questions and Answers \u2013 Global vs Local Variables \u2013 1  \n Python Program to Count Number of Vowels in a String using Sets  \n Python MCQ \u2013 String \u2013 8  \n Python MCQ \u2013 String \u2013 10  \n Python MCQ \u2013 String \u2013 9  \n Python Questions and Answers \u2013 Regular Expressions \u2013 2  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python MCQ Questions Python Programs on Trees Searching and Sorting in Python Linked List Programs in Python Python Programs on Graphs Popular Pages: Python Programming Examples C Programs on Matrix JavaScript MCQ Questions C++ Matrix Programs C++ STL    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python MCQ Questions Python Programs on Trees Searching and Sorting in Python Linked List Programs in Python Python Programs on Graphs \n   \n \n \n \n \n \n \n   Popular Pages Python Programming Examples C Programs on Matrix JavaScript MCQ Questions C++ Matrix Programs C++ STL \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.451 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 13:36:50  \n  Compression = gzip "
    },
    {
      "id": "565",
      "question": "What will be the output of the following Python code? \n \n \n \n \n \n s = set ( ) \n type ( s ) \n ",
      "answerA": " <\u2019set\u2019> \n",
      "answerB": " <class \u2018set\u2019> \n",
      "answerC": " set \n",
      "answerD": " class set ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " When we find the type of a set, the output returned is:  . \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "566",
      "question": "The following Python code results in an error. \n s = { 2 ,   3 ,   4 ,   [ 5 ,   6 ] } \n ",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The set data type makes use of a principle known as hashing. This means that each item in the set should be hashable. Hashable in this context means immutable. List is mutable and hence the line of code shown above will result in an error. \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n "
    },
    {
      "id": "567",
      "question": "Set makes use of __________ \n   Dictionary makes use of ____________ \n",
      "answerA": " keys, keys \n",
      "answerB": " key values, keys \n",
      "answerC": " keys, key values \n",
      "answerD": " key values, key values ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Set makes use of keys. \nDictionary makes use of key values. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "568",
      "question": "Which of the following lines of code will result in an error? \n",
      "answerA": " s={abs} \n",
      "answerB": " s={4, \u2018abc\u2019, (1,2)} \n",
      "answerC": " s={2, 2.2, 3, \u2018xyz\u2019} \n",
      "answerD": " s={san} ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The line: s={san} will result in an error because \u2018san\u2019 is not defined.  The line s={abs} does not result in an error because abs is a built-in function.  The other sets shown do not result in an error because all the items are hashable. \n "
    },
    {
      "id": "569",
      "question": " What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n s = { 2 ,   5 ,   6 ,   6 ,   7 } \ns \n ",
      "answerA": " {2, 5, 7} \n",
      "answerB": " {2, 5, 6, 7} \n",
      "answerC": " {2, 5, 6, 6, 7} \n",
      "answerD": " Error ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Duplicate values are not allowed in sets. Hence, the output of the code shown above will be a set containing the duplicate value only once. Therefore the output is: {2, 5, 6, 7} \n "
    },
    {
      "id": "570",
      "question": "Input order is preserved in sets. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The input order in sets is not maintained. This is demonstrated by the code shown below: \n >>>  s = { 2 ,   6 ,   8 ,   1 ,   5 } \n >>>  s\n { 8 ,   1 ,   2 ,   5 ,   6 } \n   \n "
    },
    {
      "id": "571",
      "question": "Write a list comprehension for number and its cube for: \n l = [ 1 ,   2 ,   3 ,   4 ,   5 ,   6 ,   7 ,   8 ,   9 ] \n ",
      "answerA": " [x**3 for x in l] \n",
      "answerB": " [x^3 for x in l] \n",
      "answerC": " [x**3 in l] \n",
      "answerD": " [x^3 in l] ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The list comprehension to print a list of cube of the numbers for the given list is:                                   [x**3 for x in l]. \n "
    },
    {
      "id": "572",
      "question": " What will be the output of the following Python code? \n s = { 1 ,   2 ,   3 } \ns. update ( 4 ) \ns \n ",
      "answerA": " {1, 2, 3, 4} \n",
      "answerB": " {1, 2, 4, 3} \n",
      "answerC": " {4, 1, 2, 3} \n",
      "answerD": " Error ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above will result in an error because the argument given to the function update should necessarily be an iterable. Hence if we write this function as: s.update([4]), there will be no error. \n "
    },
    {
      "id": "573",
      "question": "Which of the following functions cannot be used on heterogeneous sets? \n",
      "answerA": " pop \n",
      "answerB": " remove \n",
      "answerC": " update \n",
      "answerD": " sum ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The functions sum, min and max cannot be used on mixed type (heterogeneous) sets. The functions pop, remove, update etc can be used on homogenous as well as heterogeneous sets. An example of heterogeneous sets is: {\u2018abc\u2019, 4, (1, 2)} \n "
    },
    {
      "id": "574",
      "question": "What will be the output of the following Python code? \n s = { 4 > 3 ,   0 ,   3 - 3 } \n all ( s ) \n any ( s ) \n ",
      "answerA": "  \n True\r\nFalse \n ",
      "answerB": "  ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The function all returns true only if all the conditions given are true. But in the example shown above, we have 0 as a value. Hence false is returned. Similarly, any returns true if any one condition is true. Since the condition 4>3 is true, true is returned. \n\u00a0 \u00a0 \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 Sets \u2013 2 \u00bb  Next - Python Questions and Answers \u2013 Sets \u2013 4   Related Posts: Practice  Programming MCQs \n Apply for  Python Internship \n Check  Information Technology Books \n Apply for  Programming Internship \n Check  Python Books \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 Sets \u2013 5  \n Python Questions and Answers \u2013 Sets \u2013 4  \n Python Multiple Choice Questions \u2013 Sets  \n Python Questions and Answers \u2013 Sets \u2013 2  \n Python Program to Count Number of Vowels in a String using Sets  \n Python Program to Implement Stack  \n Python Questions and Answers \u2013 Boolean  \n Python Questions and Answers \u2013 Math \u2013 2  \n Python Program to Reverse a Stack using Recursion  \n Python Program to Implement Stack using Queue  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python Programs on Trees Searching and Sorting in Python Linked List Programs in Python Python Programs on Graphs Python MCQ Questions Popular Pages: Python Programming Examples Cloud Computing MCQ Questions C++ Algorithm Library PHP MCQ Questions JavaScript MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python Programs on Trees Searching and Sorting in Python Linked List Programs in Python Python Programs on Graphs Python MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Python Programming Examples Programming MCQ Questions C++ Algorithm Library MCA Questions and Answers Data Science MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.216 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 01:22:32  \n  Compression = gzip "
    },
    {
      "id": "575",
      "question": "Which of these about a frozenset is not true? \n",
      "answerA": "\tMutable data type \n",
      "answerB": "\tAllows duplicate values \n",
      "answerC": "\tData type with unordered values \n",
      "answerD": "\tImmutable data type ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " A frozenset is an immutable data type. \n \n \n \n \n \n "
    },
    {
      "id": "576",
      "question": "What is the syntax of the following Python code? \n >>>  a = frozenset ( set ( [ 5 , 6 , 7 ] ) ) \n >>>  a \n ",
      "answerA": "\t{5,6,7} \n",
      "answerB": "\tfrozenset({5,6,7}) \n",
      "answerC": "\tError, not possible to convert set into frozenset \n",
      "answerD": "\tSyntax error ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The above piece of code is the correct syntax for creating a frozenset. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "577",
      "question": "Is the following Python code valid? \n \n \n    \nSubscribe Now:  Python Newsletter  |  Important Subjects Newsletters \n \n \n \n \n \n \n \n >>>  a = frozenset ( [ 5 , 6 , 7 ] ) \n >>>  a\n >>>  a. add ( 5 ) \n ",
      "answerA": "\tYes, now a is {5,5,6,7} \n",
      "answerB": "\tNo, frozen set is immutable \n",
      "answerC": "\tNo, invalid syntax for add method \n",
      "answerD": "\tYes, now a is {5,6,7} ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": "  Since a frozen set is immutable, add method doesn\u2019t exist for frozen method. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "578",
      "question": " Set members must not be hashable. \n",
      "answerA": "\tTrue \n",
      "answerB": "\tFalse ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Set members must always be hashable. \n "
    },
    {
      "id": "579",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n >>>  a = { 3 , 4 , 5 } \n >>>  a. update ( [ 1 , 2 , 3 ] ) \n >>>  a \n ",
      "answerA": "\tError, no method called update for set data type \n",
      "answerB": "\t{1, 2, 3, 4, 5} \n",
      "answerC": "\tError, list can\u2019t be added to set \n",
      "answerD": "\tError, duplicate item present in list ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The method update adds elements to a set. \n "
    },
    {
      "id": "580",
      "question": "What will be the output of the following Python code? \n >>>  a = { 1 , 2 , 3 } \n >>>  a. intersection_update ( { 2 , 3 , 4 , 5 } ) \n >>>  a \n ",
      "answerA": "\t{2,3} \n",
      "answerB": "\tError, duplicate item present in list \n",
      "answerC": "\tError, no method called intersection_update for set data type \n",
      "answerD": "\t{1,4,5} ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The method intersection_update returns a set which is an intersection of both the sets. \n "
    },
    {
      "id": "581",
      "question": "What will be the output of the following Python code? \n >>>  a = { 1 , 2 , 3 } \n >>>  b = a\n >>>  b. remove ( 3 ) \n >>>  a \n ",
      "answerA": "\t{1,2,3} \n",
      "answerB": "\tError, copying of sets isn\u2019t allowed \n",
      "answerC": "\t{1,2} \n",
      "answerD": "\tError, invalid syntax for remove ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Any change made in b is reflected in a because b is an alias of a. \n "
    },
    {
      "id": "582",
      "question": "What will be the output of the following Python code? \n >>>  a = { 1 , 2 , 3 } \n >>>  b = a. copy ( ) \n >>>  b. add ( 4 ) \n >>>  a \n ",
      "answerA": "\t{1,2,3} \n",
      "answerB": "\tError, invalid syntax for add \n",
      "answerC": "\t{1,2,3,4} \n",
      "answerD": "\tError, copying of sets isn\u2019t allowed ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " In the above piece of code, b is barely a copy and not an alias of a. Hence any change made in b isn\u2019t reflected in a. \n "
    },
    {
      "id": "583",
      "question": "What will be the output of the following Python code? \n >>>  a = { 1 , 2 , 3 } \n >>>  b = a. add ( 4 ) \n >>>  b \n ",
      "answerA": "\t0 \n",
      "answerB": "\t{1,2,3,4} \n",
      "answerC": "\t{1,2,3} \n",
      "answerD": "\tNothing is printed ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The method add returns nothing, hence nothing is printed. \n "
    },
    {
      "id": "584",
      "question": "What will be the output of the following Python code? \n >>>  a = { 1 , 2 , 3 } \n >>>  b = frozenset ( [ 3 , 4 , 5 ] ) \n >>>  a-b \n ",
      "answerA": "\t{1,2} \n",
      "answerB": "\tError as difference between a set and frozenset can\u2019t be found out \n",
      "answerC": "\tError as unsupported operand type for set data type \n",
      "answerD": "\tfrozenset({1,2}) ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " \u2013 operator gives the set of elements in set a but not in set b. \n "
    },
    {
      "id": "585",
      "question": "What will be the output of the following Python code? \n >>>  a = { 5 , 6 , 7 } \n >>>   sum ( a , 5 ) \n ",
      "answerA": "\t5 \n",
      "answerB": "\t23 \n",
      "answerC": "\t18 \n",
      "answerD": "\tInvalid syntax for sum method, too many arguments ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The second parameter is the start value for the sum of elements in set a. Thus, sum(a,5) = 5+(5+6+7)="
    },
    {
      "id": "586",
      "question": "What will be the output of the following Python code? \n >>>  a = { 1 , 2 , 3 } \n >>>   { x* 2   for  x  in  a| { 4 , 5 } } \n ",
      "answerA": "\t{2,4,6} \n",
      "answerB": "\tError, set comprehensions aren\u2019t allowed \n",
      "answerC": "\t{8, 2, 10, 4, 6} \n",
      "answerD": "\t{8,10} ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Set comprehensions are allowed. \n "
    },
    {
      "id": "587",
      "question": "What will be the output of the following Python code? \n >>>  a = { 5 , 6 , 7 , 8 } \n >>>  b = { 7 , 8 , 9 , 10 } \n >>>   len ( a+b ) \n ",
      "answerA": "\t8 \n",
      "answerB": "\tError, unsupported operand \u2018+\u2019 for sets \n",
      "answerC": "\t6 \n",
      "answerD": "\tNothing is displayed ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": "  Duplicate elements in a+b is eliminated and the length of a+b is computed. \n "
    },
    {
      "id": "588",
      "question": "What will be the output of the following Python code? \n a = { 1 , 2 , 3 } \nb = { 1 , 2 , 3 } \nc = a. issubset ( b ) \n print ( c ) \n ",
      "answerA": "\tTrue \n",
      "answerB": "\tError, no method called issubset() exists \nc)\tSyntax error for issubset() method \nd)\tFalse ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": "  The method issubset() returns True if b is a proper subset of a. \n "
    },
    {
      "id": "589",
      "question": "Is the following Python code valid? \n a = { 1 , 2 , 3 } \nb = { 1 , 2 , 3 , 4 } \nc = a. issuperset ( b ) \n print ( c ) \n ",
      "answerA": "\tFalse \n",
      "answerB": "\tTrue \n",
      "answerC": "\tSyntax error for issuperset() method \n",
      "answerD": "\tError, no method called issuperset() exists ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": "  The method issubset() returns True if b is a proper subset of a. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Multiple Choice Questions \u2013 Sets \u00bb  Next - Python Questions and Answers \u2013 Sets \u2013 3   Related Posts: Practice  Programming MCQs \n Check  Information Technology Books \n Check  Python Books \n Apply for  Programming Internship \n Apply for  Python Internship \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 Sets \u2013 5  \n Python Multiple Choice Questions \u2013 Sets  \n Python Questions and Answers \u2013 Sets \u2013 4  \n Python Questions and Answers \u2013 Sets \u2013 3  \n Python Questions and Answers \u2013 Tuples \u2013 2  \n Python Questions and Answers \u2013 Dictionary \u2013 2  \n Python Questions and Answers \u2013 Lists \u2013 6  \n Python Program to Count Number of Vowels in a String using Sets  \n Python MCQ \u2013 String \u2013 10  \n Python Questions and Answers \u2013 Tuples-3  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python Programs on Trees Python MCQ Questions Searching and Sorting in Python Linked List Programs in Python Python Programs on Graphs Popular Pages: Python Programming Examples C# Programs on Functions Visual Basic MCQ Questions Compiler Design MCQ Questions JavaScript MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python Programs on Trees Python MCQ Questions Searching and Sorting in Python Linked List Programs in Python Python Programs on Graphs \n   \n \n \n \n \n \n \n   Popular Pages Python Programming Examples C# Programs on Functions Visual Basic MCQ Questions PHP MCQ Questions JavaScript MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.693 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-02 23:52:52  \n  Compression = gzip "
    },
    {
      "id": "590",
      "question": "Which of these about a set is not true? \n",
      "answerA": "\tMutable data type \n",
      "answerB": "\tDoes not allow duplicate values \n",
      "answerC": "\tData type with unordered values \n",
      "answerD": "\tImmutable data type ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " A set is a mutable data type with non-duplicate, unordered values, providing the usual mathematical set operations.  \n \n \n \n \n \n "
    },
    {
      "id": "591",
      "question": "Which of the following is not the correct syntax for creating a set? \n",
      "answerA": "\tset([[1,2],[3,4]]) \n",
      "answerB": "\tset([1,2,2,3,4]) \n",
      "answerC": "\tset((1,2,3,4)) \n",
      "answerD": "\t{1,2,3,4} ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The argument given for the set must be an iterable. \n "
    },
    {
      "id": "592",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n nums  =   set ( [ 1 , 1 , 2 , 3 , 3 , 3 , 4 , 4 ] ) \n print ( len ( nums ) ) \n ",
      "answerA": "\t7 \n",
      "answerB": "\tError, invalid syntax for formation of set \n",
      "answerC": "\t4 \n",
      "answerD": "\t8 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": "  A set doesn\u2019t have duplicate items.  \n \n \n    \nNote: Join free Sanfoundry classes at  Telegram  or  Youtube \n \n \n \n \n \n \n \n "
    },
    {
      "id": "593",
      "question": " What will be the output of the following Python code? \n a  =   [ 5 , 5 , 6 , 7 , 7 , 7 ] \nb  =   set ( a ) \n def   test ( lst ) :\n     if  lst  in  b:\n         return   1 \n     else :\n         return   0 \n for  i  in    filter ( test ,  a ) :\n     print ( i , end = \" \" ) \n ",
      "answerA": "\t5 5 6 \n",
      "answerB": "\t5 6 7 \n",
      "answerC": "\t5 5 6 7 7 7 \n",
      "answerD": "\t5 6 7 7 7 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The filter function will return all the values from list a which are true when passed to function test. Since all the members of the set are non-duplicate members of the list, all of the values will return true. Hence all the values in the list are printed. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "594",
      "question": "Which of the following statements is used to create an empty set? \n",
      "answerA": "\t{ } \n",
      "answerB": "\tset() \n",
      "answerC": "\t[ ]  \n",
      "answerD": "\t( ) ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " { } creates a dictionary not a set. Only set() creates an empty set.  \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "595",
      "question": "What will be the output of the following Python code? \n >>>  a = { 5 , 4 } \n >>>  b = { 1 , 2 , 4 , 5 } \n >>>  a < b \n ",
      "answerA": "\t{1,2} \n",
      "answerB": "\tTrue \n",
      "answerC": "\tFalse \n",
      "answerD": "\tInvalid operation ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " a<b returns True if a is a proper subset of b. \n "
    },
    {
      "id": "596",
      "question": " If a={5,6,7,8}, which of the following statements is false? \n",
      "answerA": "\tprint(len(",
      "answerB": "\tprint(min(a)) \n",
      "answerC": "\ta.remove(5) \n",
      "answerD": "\ta[2]=45 ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The members of a set can be accessed by their index values since the elements of the set are unordered. \n "
    },
    {
      "id": "597",
      "question": " If a={5,6,7}, what happens when a.add(5) is executed? \n",
      "answerA": "\ta={5,5,6,7} \n",
      "answerB": "\ta={5,6,7} \n",
      "answerC": "\tError as there is no add function for set data type \n",
      "answerD": "\tError as 5 already exists in the set ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " There exists add method for set data type. However 5 isn\u2019t added again as set consists of only non-duplicate elements and 5 already exists in the set. Execute in python shell to verify. \n "
    },
    {
      "id": "598",
      "question": " What will be the output of the following Python code? \n >>>  a = { 4 , 5 , 6 } \n >>>  b = { 2 , 8 , 6 } \n >>>  a+b \n ",
      "answerA": "\t{4,5,6,2,8} \n",
      "answerB": "\t{4,5,6,2,8,6} \n",
      "answerC": "\tError as unsupported operand type for sets \n",
      "answerD": "\tError as the duplicate item 6 is present in both sets ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Execute in python shell to verify. \n "
    },
    {
      "id": "599",
      "question": " What will be the output of the following Python code? \n >>>  a = { 4 , 5 , 6 } \n >>>  b = { 2 , 8 , 6 } \n >>>  a-b \n ",
      "answerA": "\t{4,5} \n",
      "answerB": "\t{6} \n",
      "answerC": "\tError as unsupported operand type for set data type \n",
      "answerD": "\tError as the duplicate item 6 is present in both sets ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " \u2013 operator gives the set of elements in set a but not in set b.  \n "
    },
    {
      "id": "600",
      "question": "What will be the output of the following Python code? \n >>>  a = { 5 , 6 , 7 , 8 } \n >>>  b = { 7 , 8 , 10 , 11 } \n >>>  a^b \n ",
      "answerA": "\t{5,6,7,8,10,11} \n",
      "answerB": "\t{7,8} \n",
      "answerC": "\tError as unsupported operand type of set data type \n",
      "answerD": "\t{5,6,10,11} ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " ^ operator returns a set of elements in set A or set B, but not in both (symmetric difference).  \n "
    },
    {
      "id": "601",
      "question": "What will be the output of the following Python code? \n >>>  s = { 5 , 6 } \n >>>  s* 3 \n ",
      "answerA": "\tError as unsupported operand type for set data type \n",
      "answerB": "\t{5,6,5,6,5,6} \n",
      "answerC": "\t{5,6} \n",
      "answerD": "\tError as multiplication creates duplicate elements which isn\u2019t allowed ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The multiplication operator isn\u2019t valid for the set data type. \n "
    },
    {
      "id": "602",
      "question": "What will be the output of the following Python code? \n >>>  a = { 5 , 6 , 7 , 8 } \n >>>  b = { 7 , 5 , 6 , 8 } \n >>>  a == b \n ",
      "answerA": "\tTrue \n",
      "answerB": "\tFalse ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": "  It is possible to compare two sets and the order of elements in both the sets doesn\u2019t matter if the values of the elements are the same. \n "
    },
    {
      "id": "603",
      "question": "What will be the output of the following Python code? \n >>>  a = { 3 , 4 , 5 } \n >>>  b = { 5 , 6 , 7 } \n >>>  a|b \n ",
      "answerA": "\tInvalid operation \n",
      "answerB": "\t{3, 4, 5, 6, 7} \n",
      "answerC": "\t{5} \n",
      "answerD": "\t{3,4,6,7} ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": "  The operation in the above piece of code is union operation. This operation produces a set of elements in both set a and set b. \n "
    },
    {
      "id": "604",
      "question": "Is the following Python code valid? \n a = { 3 , 4 , { 7 , 5 } } \n print ( a [ 2 ] [ 0 ] ) \n ",
      "answerA": "\tYes, 7 is printed \n",
      "answerB": "\tError, elements of a set can\u2019t be printed \n",
      "answerC": "\tError, subsets aren\u2019t allowed \n",
      "answerD": "\tYes, {7,5} is printed ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " In python, elements of a set must not be mutable and sets are mutable. Thus, subsets can\u2019t exist. \n More MCQs on Python Sets: \n \n Python Sets MCQ \u2013 2 \n Python Sets MCQ \u2013 3 \n Python Sets MCQ \u2013 4 \n Python Sets MCQ \u2013 5 \n \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 Tuples-3 \u00bb  Next - Python Questions and Answers \u2013 Sets \u2013 2   Related Posts: Check  Python Books \n Practice  Programming MCQs \n Check  Information Technology Books \n Apply for  Programming Internship \n Apply for  Python Internship \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 Sets \u2013 2  \n Python Questions and Answers \u2013 Sets \u2013 3  \n Python Questions and Answers \u2013 Sets \u2013 4  \n Python Questions and Answers \u2013 Sets \u2013 5  \n Python Multiple Choice Questions \u2013 Mapping Functions  \n Python Multiple Choice Questions \u2013 While and For Loops  \n Python Multiple Choice Questions \u2013 Built-in Functions  \n Python Multiple Choice Questions \u2013 Tuples  \n Python Multiple Choice Questions \u2013 Argument Parsing  \n Python Multiple Choice Questions \u2013 String  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python MCQ Questions Python Programs on Trees Linked List Programs in Python Searching and Sorting in Python Python Programs on Graphs Popular Pages: Data Science MCQ Questions JavaScript MCQ Questions Programming MCQ Questions PHP MCQ Questions Visual Basic MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python MCQ Questions Python Programs on Trees Linked List Programs in Python Searching and Sorting in Python Python Programs on Graphs \n   \n \n \n \n \n \n \n   Popular Pages Data Science MCQ Questions JavaScript MCQ Questions Programming MCQ Questions PHP MCQ Questions Visual Basic MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.522 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 00:24:37  \n  Compression = gzip "
    },
    {
      "id": "605",
      "question": "Which of the following statements create a dictionary? \n",
      "answerA": " d = {} \n",
      "answerB": " d = {\u201cjohn\u201d:40, \u201cpeter\u201d:45} \n",
      "answerC": " d = {40:\u201djohn\u201d, 45:\u201dpeter\u201d} \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Dictionaries are created by specifying keys and values. \n \n \n \n \n \n "
    },
    {
      "id": "606",
      "question": "What will be the output of the following Python code snippet? \n d  =   { \"john\" : 40 ,  \"peter\" : 45 } \n ",
      "answerA": " \u201cjohn\u201d, 40, 45, and \u201cpeter\u201d \n",
      "answerB": " \u201cjohn\u201d and \u201cpeter\u201d \n",
      "answerC": " 40 and 45 \n",
      "answerD": " d = (40:\u201djohn\u201d, 45:\u201dpeter\u201d) ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Dictionaries appear in the form of keys and values.  \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "607",
      "question": "What will be the output of the following Python code snippet? \n \n \n    \nSubscribe Now:  Python Newsletter  |  Important Subjects Newsletters \n \n \n \n \n \n \n \n d  =   { \"john\" : 40 ,  \"peter\" : 45 } \"john\"  in d \n ",
      "answerA": " True \n",
      "answerB": " False \nc) None \nd) Error ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " In can be used to check if the key is int dictionary.  \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "608",
      "question": "What will be the output of the following Python code snippet? \n d1  =   { \"john\" : 40 ,  \"peter\" : 45 } d2  =   { \"john\" : 466 ,  \"peter\" : 45 } d1  ==  d2 \n ",
      "answerA": " True \n",
      "answerB": " False \nc) None \nd) Error ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " If d2 was initialized as d2 = d1 the answer would be true. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "609",
      "question": "What will be the output of the following Python code snippet? \n d1  =   { \"john\" : 40 ,  \"peter\" : 45 } d2  =   { \"john\" : 466 ,  \"peter\" : 45 } d1  >  d2 \n ",
      "answerA": " True \n",
      "answerB": " False \nc) Error \nd) None ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Arithmetic > operator cannot be used with dictionaries. \n "
    },
    {
      "id": "610",
      "question": "What will be the output of the following Python code snippet? \n d  =   { \"john\" : 40 ,  \"peter\" : 45 } d [ \"john\" ] \n ",
      "answerA": " 40 \n",
      "answerB": " 45 \n",
      "answerC": " \u201cjohn\u201d \n",
      "answerD": " \u201cpeter\u201d ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Execute in the shell to verify.  \n "
    },
    {
      "id": "611",
      "question": "Suppose d = {\u201cjohn\u201d:40, \u201cpeter\u201d:45}, to delete the entry for \u201cjohn\u201d what command do we use? \n",
      "answerA": " d.delete(\u201cjohn\u201d:40) \n",
      "answerB": " d.delete(\u201cjohn\u201d) \n",
      "answerC": " del d[\u201cjohn\u201d]  \n",
      "answerD": " del d(\u201cjohn\u201d:40) ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Execute in the shell to verify. \n "
    },
    {
      "id": "612",
      "question": "Suppose d = {\u201cjohn\u201d:40, \u201cpeter\u201d:45}. To obtain the number of entries in dictionary which command do we use? \n",
      "answerA": " d.size() \n",
      "answerB": " len(d) \n",
      "answerC": " size(",
      "answerD": " \nc) size(",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Execute in the shell to verify. \n "
    },
    {
      "id": "613",
      "question": "What will be the output of the following Python code snippet? \n d  =   { \"john\" : 40 ,  \"peter\" : 45 } print ( list ( d. keys ( ) ) ) \n ",
      "answerA": " [\u201cjohn\u201d, \u201cpeter\u201d]  \n",
      "answerB": " [\u201cjohn\u201d:40, \u201cpeter\u201d:45]  \n",
      "answerC": " (\u201cjohn\u201d, \u201cpeter\u201d) \n",
      "answerD": " (\u201cjohn\u201d:40, \u201cpeter\u201d:45) ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The output of the code shown above is a list containing only keys of the dictionary d, in the form of a list. \n "
    },
    {
      "id": "614",
      "question": "Suppose d = {\u201cjohn\u201d:40, \u201cpeter\u201d:45}, what happens when we try to retrieve a value using the expression d[\u201csusan\u201d]? \n",
      "answerA": " Since \u201csusan\u201d is not a value in the set, Python raises a KeyError exception \n",
      "answerB": " It is executed fine and no exception is raised, and it returns None \n",
      "answerC": " Since \u201csusan\u201d is not a key in the set, Python raises a KeyError exception \n",
      "answerD": " Since \u201csusan\u201d is not a key in the set, Python raises a syntax error ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Execute in the shell to verify. \n More MCQs on Python Dictionary: \n \n Python Dictionary MCQ (Set 2) \n Python Dictionary MCQ (Set 3) \n Python Dictionary MCQ (Set 4) \n \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 Sets \u2013 5 \u00bb  Next - Python Questions and Answers \u2013 Dictionary \u2013 2   Related Posts: Check  Information Technology Books \n Check  Python Books \n Apply for  Python Internship \n Apply for  Programming Internship \n Practice  Programming MCQs \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 Dictionary \u2013 2  \n Python Program to Map Two Lists into a Dictionary  \n Python Questions and Answers \u2013 Dictionary \u2013 4  \n Python Questions and Answers \u2013 Dictionary \u2013 3  \n Python Program to Find the Sum of All the Items in a Dictionary  \n Python Program to Create Dictionary from an Object  \n Python Program to Create Dictionary that Contains Number  \n Python Program to Check if a Key Exists in a Dictionary or Not  \n Python Program to Multiply All the Items in a Dictionary  \n Python Program to Concatenate Two Dictionaries  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python MCQ Questions Python Programming Examples Python Programs on Graphs Visual Basic MCQ Questions Python Programs on Trees Popular Pages: Searching and Sorting in Python Linked List Programs in Python Oracle Database MCQ Questions Automata Theory MCQ Questions Data Science MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python MCQ Questions Python Programming Examples Python Programs on Graphs Visual Basic MCQ Questions Python Programs on Trees \n   \n \n \n \n \n \n \n   Popular Pages Searching and Sorting in Python Linked List Programs in Python Oracle Database MCQ Questions Automata Theory MCQ Questions Data Science MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.391 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 00:24:37  \n  Compression = gzip "
    },
    {
      "id": "615",
      "question": "Which of these about a dictionary is false? \n",
      "answerA": "\tThe values of a dictionary can be accessed using keys \n",
      "answerB": "\tThe keys of a dictionary can be accessed using values \n",
      "answerC": "\tDictionaries aren\u2019t ordered \n",
      "answerD": "\tDictionaries are mutable ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The values of a dictionary can be accessed using keys but the keys of a dictionary can\u2019t be accessed using values. \n \n \n \n \n \n "
    },
    {
      "id": "616",
      "question": "Which of the following is not a declaration of the dictionary? \n",
      "answerA": "\t{1: \u2018A\u2019, 2: \u2018B\u2019} \n",
      "answerB": "\tdict([[1,\u201dA\u201d],[2,\u201dB\u201d]]) \n",
      "answerC": "\t{1,\u201dA\u201d,2\u201dB\u201d} \n",
      "answerD": "\t{ } ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Option c is a set, not a dictionary. \n "
    },
    {
      "id": "617",
      "question": "What will be the output of the following Python code snippet? \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n a = { 1 : \"A\" , 2 : \"B\" , 3 : \"C\" } \n for  i , j  in  a. items ( ) :\n     print ( i , j , end = \" \" ) \n ",
      "answerA": "\t1 A 2 B 3 C \n",
      "answerB": "\t1 2 3 \n",
      "answerC": "\tA B C \n",
      "answerD": "\t1:\u201dA\u201d 2:\u201dB\u201d 3:\u201dC\u201d ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " In the above code, variables i and j iterate over the keys and values of the dictionary respectively.  \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n "
    },
    {
      "id": "618",
      "question": "What will be the output of the following Python code snippet? \n a = { 1 : \"A\" , 2 : \"B\" , 3 : \"C\" } \n print ( a. get ( 1 , 4 ) ) \n ",
      "answerA": " 1 \n",
      "answerB": " A \n",
      "answerC": " 4 \n",
      "answerD": " Invalid syntax for get method ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The get() method returns the value of the key if the key is present in the dictionary and the default value(second parameter) if the key isn\u2019t present in the dictionary. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "619",
      "question": "What will be the output of the following Python code snippet? \n \n advertisement \n \n \n \n \n a = { 1 : \"A\" , 2 : \"B\" , 3 : \"C\" } \n print ( a. get ( 5 , 4 ) ) \n ",
      "answerA": "\tError, invalid syntax \n",
      "answerB": "\tA \n",
      "answerC": "\t5 \n",
      "answerD": "\t4 ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The get() method returns the default value(second parameter) if the key isn\u2019t present in the dictionary. \n "
    },
    {
      "id": "620",
      "question": "What will be the output of the following Python code snippet? \n a = { 1 : \"A\" , 2 : \"B\" , 3 : \"C\" } \n print ( a. setdefault ( 3 ) ) \n ",
      "answerA": "\t{1: \u2018A\u2019, 2: \u2018B\u2019, 3: \u2018C\u2019} \n",
      "answerB": "\tC \n",
      "answerC": "\t{1: 3, 2: 3, 3: 3} \n",
      "answerD": "      No method called setdefault() exists for dictionary ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " setdefault() is similar to get() but will set dict[key]=default if key is not already in the dictionary. \n "
    },
    {
      "id": "621",
      "question": "What will be the output of the following Python code snippet? \n a = { 1 : \"A\" , 2 : \"B\" , 3 : \"C\" } \na. setdefault ( 4 , \"D\" ) \n print ( a ) \n ",
      "answerA": "\t{1: \u2018A\u2019, 2: \u2018B\u2019, 3: \u2018C\u2019, 4: \u2018D\u2019} \n",
      "answerB": "\tNone \n",
      "answerC": "\tError \n",
      "answerD": "\t[1,3,6,10]  ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " setdefault() will set dict[key]=default if key is not already in the dictionary. \n "
    },
    {
      "id": "622",
      "question": "What will be the output of the following Python code? \n a = { 1 : \"A\" , 2 : \"B\" , 3 : \"C\" } \nb = { 4 : \"D\" , 5 : \"E\" } \na. update ( b ) \n print ( a ) \n ",
      "answerA": "\t{1: \u2018A\u2019, 2: \u2018B\u2019, 3: \u2018C\u2019} \n",
      "answerB": "\tMethod update() doesn\u2019t exist for dictionaries \n",
      "answerC": "\t{1: \u2018A\u2019, 2: \u2018B\u2019, 3: \u2018C\u2019, 4: \u2018D\u2019, 5: \u2018E\u2019} \n",
      "answerD": "\t{4: \u2018D\u2019, 5: \u2018E\u2019} ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " update() method adds dictionary b\u2019s key-value pairs to dictionary a. Execute in python shell to verify. \n "
    },
    {
      "id": "623",
      "question": "What will be the output of the following Python code? \n a = { 1 : \"A\" , 2 : \"B\" , 3 : \"C\" } \nb = a. copy ( ) \nb [ 2 ] = \"D\" \n print ( a ) \n ",
      "answerA": "\tError, copy() method doesn\u2019t exist for dictionaries \n",
      "answerB": "\t{1: \u2018A\u2019, 2: \u2018B\u2019, 3: \u2018C\u2019} \n",
      "answerC": "\t{1: \u2018A\u2019, 2: \u2018D\u2019, 3: \u2018C\u2019} \n",
      "answerD": "\t\u201cNone\u201d is printed ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Changes made in the copy of the dictionary isn\u2019t reflected in the original one.   \n "
    },
    {
      "id": "624",
      "question": "What will be the output of the following Python code? \n a = { 1 : \"A\" , 2 : \"B\" , 3 : \"C\" } \na. clear ( ) \n print ( a ) \n ",
      "answerA": "\tNone \n",
      "answerB": "\t{ None:None, None:None, None:None} \n",
      "answerC": "\t{1:None, 2:None, 3:None} \n",
      "answerD": "\t{ } ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The clear() method clears all the key-value pairs in the dictionary.  \n "
    },
    {
      "id": "625",
      "question": "Which of the following isn\u2019t true about dictionary keys? \n",
      "answerA": "\tMore than one key isn\u2019t allowed \n",
      "answerB": "\tKeys must be immutable \n",
      "answerC": "\tKeys must be integers \n",
      "answerD": "\tWhen duplicate keys encountered, the last assignment wins ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Keys of a dictionary may be any data type that is immutable. \n "
    },
    {
      "id": "626",
      "question": "What will be the output of the following Python code? \n a = { 1 : 5 , 2 : 3 , 3 : 4 } \na. pop ( 3 ) \n print ( a ) \n ",
      "answerA": "\t{1: 5} \n",
      "answerB": "\t{1: 5, 2: 3} \n",
      "answerC": "\tError, syntax error for pop() method \n",
      "answerD": "\t{1: 5, 3: 4} ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " pop() method removes the key-value pair for the key mentioned in the pop() method. \n "
    },
    {
      "id": "627",
      "question": "What will be the output of the following Python code? \n a = { 1 : 5 , 2 : 3 , 3 : 4 } \n print ( a. pop ( 4 , 9 ) ) \n ",
      "answerA": "\t9 \n",
      "answerB": "\t3 \n",
      "answerC": "\tToo many arguments for pop() method \n",
      "answerD": "\t4 ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " pop() method returns the value when the key is passed as an argument and otherwise returns the default value(second argument) if the key isn\u2019t present in the dictionary. \n "
    },
    {
      "id": "628",
      "question": "What will be the output of the following Python code? \n a = { 1 : \"A\" , 2 : \"B\" , 3 : \"C\" } \n for  i  in  a:\n     print ( i , end = \" \" ) \n ",
      "answerA": "\t1 2 3 \n",
      "answerB": "\t\u2018A\u2019 \u2018B\u2019 \u2018C\u2019 \n",
      "answerC": "\t1 \u2018A\u2019 2 \u2018B\u2019 3 \u2018C\u2019 \n",
      "answerD": "\tError, it should be: for i in a.items(): ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The variable i iterates over the keys of the dictionary and hence the keys are printed. \n "
    },
    {
      "id": "629",
      "question": "What will be the output of the following Python code? \n >>>  a = { 1 : \"A\" , 2 : \"B\" , 3 : \"C\" } \n >>>  a. items ( ) \n ",
      "answerA": "\tSyntax error \n",
      "answerB": "\tdict_items([(\u2018A\u2019), (\u2018B\u2019), (\u2018C\u2019)]) \n",
      "answerC": "\tdict_items([(1,2,3)]) \n",
      "answerD": "\tdict_items([(1, \u2018A\u2019), (2, \u2018B\u2019), (3, \u2018C\u2019)]) ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The method items() returns list of tuples with each tuple having a key-value pair. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Multiple Choice Questions \u2013 Dictionary \u00bb  Next - Python Questions and Answers \u2013 Dictionary \u2013 3   Related Posts: Apply for  Python Internship \n Practice  Programming MCQs \n Check  Python Books \n Apply for  Programming Internship \n Check  Information Technology Books \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 Dictionary \u2013 4  \n Python Questions and Answers \u2013 Dictionary \u2013 3  \n Python Program to Find the Sum of All the Items in a Dictionary  \n Python Program to Check if a Key Exists in a Dictionary or Not  \n Python Program to Multiply All the Items in a Dictionary  \n Python Program to Map Two Lists into a Dictionary  \n Python Program to Create Dictionary from an Object  \n Python Multiple Choice Questions \u2013 Dictionary  \n Python Program to Create Dictionary that Contains Number  \n Python Program to Remove a Key from a Dictionary  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python Programs on Graphs Python Programming Examples Python Programs on Trees Linked List Programs in Python Python MCQ Questions Popular Pages: Searching and Sorting in Python Tree Programs in C++ Visual Basic MCQ Questions C Programming Examples on Trees RDBMS MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python Programs on Graphs Python Programming Examples Python Programs on Trees Searching and Sorting in Python Python MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Linked List Programs in Python Visual Basic MCQ Questions Database Management System MCQ Questions Tree Programs in C++ Data Science MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.542 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 01:22:32  \n  Compression = gzip "
    },
    {
      "id": "630",
      "question": "Which of the statements about dictionary values if false? \n",
      "answerA": "\tMore than one key can have the same value \n",
      "answerB": "\tThe values of the dictionary can be accessed as dict[key]  \n",
      "answerC": "\tValues of a dictionary must be unique \n",
      "answerD": "\tValues of a dictionary can be a mixture of letters and numbers ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " More than one key can have the same value. \n \n \n \n \n \n "
    },
    {
      "id": "631",
      "question": "What will be the output of the following Python code snippet? \n >>>  a = { 1 : \"A\" , 2 : \"B\" , 3 : \"C\" } \n >>>   del  a \n ",
      "answerA": "\tmethod del doesn\u2019t exist for the dictionary \n",
      "answerB": "\tdel deletes the values in the dictionary \n",
      "answerC": "\tdel deletes the entire dictionary \n",
      "answerD": "\tdel deletes the keys in the dictionary ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " del deletes the entire dictionary and any further attempt to access it will throw an error. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "632",
      "question": "If a is a dictionary with some key-value pairs, what does a.popitem() do? \n",
      "answerA": "\tRemoves an arbitrary element \n",
      "answerB": "\tRemoves all the key-value pairs \n",
      "answerC": "\tRemoves the key-value pair for the key given as an argument \n",
      "answerD": "\tInvalid method for dictionary ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The method popitem() removes a random key-value pair. \n \n \n    \nSubscribe Now:  Python Newsletter  |  Important Subjects Newsletters \n \n \n \n \n \n \n \n "
    },
    {
      "id": "633",
      "question": "What will be the output of the following Python code snippet? \n total = { } \n def  insert ( items ) :\n     if  items  in  total:\n        total [ items ]  + =   1 \n     else :\n        total [ items ]   =   1 \ninsert ( 'Apple' ) \ninsert ( 'Ball' ) \ninsert ( 'Apple' ) \n print   ( len ( total ) ) \n ",
      "answerA": " 3 \n",
      "answerB": " 1 \n",
      "answerC": " 2 \n",
      "answerD": " 0 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The insert() function counts the number of occurrences of the item being inserted into the dictionary. There are only 2 keys present since the key \u2018Apple\u2019 is repeated. Thus, the length of the dictionary is "
    },
    {
      "id": "634",
      "question": "What will be the output of the following Python code snippet? \n \n advertisement \n \n \n \n \n a  =   { } \na [ 1 ]   =   1 \na [ '1' ]   =   2 \na [ 1 ] = a [ 1 ] + 1 \ncount  =   0 \n for  i  in  a:\n    count + =  a [ i ] \n print ( count ) \n ",
      "answerA": "\t1 \n",
      "answerB": "\t2 \n",
      "answerC": "\t4 \n",
      "answerD": "\tError, the keys can\u2019t be a mixture of letters and numbers ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The above piece of code basically finds the sum of the values of keys.  \n "
    },
    {
      "id": "635",
      "question": "What will be the output of the following Python code snippet? \n numbers  =   { } \nletters  =   { } \ncomb  =   { } \nnumbers [ 1 ]   =   56 \nnumbers [ 3 ]   =   7 \nletters [ 4 ]   =   'B' \ncomb [ 'Numbers' ]   =  numbers\ncomb [ 'Letters' ]   =  letters\n print ( comb ) \n ",
      "answerA": "\tError, dictionary in a dictionary can\u2019t exist \n",
      "answerB": "\t\u2018Numbers\u2019: {1: 56, 3: 7} \n",
      "answerC": "\t{\u2018Numbers\u2019: {1: 56}, \u2018Letters\u2019: {4: \u2018B\u2019}} \n",
      "answerD": "\t{\u2018Numbers\u2019: {1: 56, 3: 7}, \u2018Letters\u2019: {4: \u2018B\u2019}} ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Dictionary in a dictionary can exist. \n "
    },
    {
      "id": "636",
      "question": "What will be the output of the following Python code snippet? \n test   =   { 1 : 'A' ,   2 : 'B' ,   3 : 'C' } \n test   =   { } \n print ( len ( test ) ) \n ",
      "answerA": "\t0 \n",
      "answerB": "\tNone \n",
      "answerC": "\t3 \n",
      "answerD": "\tAn exception is thrown ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " In the second line of code, the dictionary becomes an empty dictionary. Thus, length="
    },
    {
      "id": "637",
      "question": "What will be the output of the following Python code snippet? \n test   =   { 1 : 'A' ,   2 : 'B' ,   3 : 'C' } \n del   test [ 1 ] \n test [ 1 ]   =   'D' \n del   test [ 2 ] \n print ( len ( test ) ) \n ",
      "answerA": "\t0 \n",
      "answerB": "\t2 \n",
      "answerC": "\tError as the key-value pair of 1:\u2019A\u2019 is already deleted \n",
      "answerD": "\t1 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " After the key-value pair of 1:\u2019A\u2019 is deleted, the key-value pair of 1:\u2019D\u2019 is added.  \n "
    },
    {
      "id": "638",
      "question": "What will be the output of the following Python code snippet? \n a  =   { } \na [ 1 ]   =   1 \na [ '1' ]   =   2 \na [ 1.0 ] = 4 \ncount  =   0 \n for  i  in  a:\n    count + =  a [ i ] \n print ( count ) \n ",
      "answerA": "\tAn exception is thrown \n",
      "answerB": "\t3 \n",
      "answerC": "\t6 \n",
      "answerD": "\t2 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The value of key 1 is 4 since 1 and 1.0 are the same. Then, the function count() gives the sum of all the values of the keys (2+4).  \n "
    },
    {
      "id": "639",
      "question": "What will be the output of the following Python code snippet? \n a = { } \na [ 'a' ] = 1 \na [ 'b' ] = [ 2 , 3 , 4 ] \n print ( a ) \n ",
      "answerA": "\tException is thrown \n",
      "answerB": "\t{\u2018b\u2019: [2], \u2018a\u2019: 1} \n",
      "answerC": "\t{\u2018b\u2019: [2], \u2018a\u2019: [3]} \n",
      "answerD": "\t{\u2018b\u2019: [2, 3, 4], \u2018a\u2019: 1} ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Mutable members can be used as the values of the dictionary but they cannot be used as the keys of the dictionary.  \n "
    },
    {
      "id": "640",
      "question": "What will be the output of the following Python code snippet? \n >>> import   collections \n >>>  a = collections . Counter ( [ 1 , 1 , 2 , 3 , 3 , 4 , 4 , 4 ] ) \n >>>  a \n ",
      "answerA": "\t{1,2,3,4} \n",
      "answerB": "\tCounter({4, 1, 3, 2}) \n",
      "answerC": "\tCounter({4: 3, 1: 2, 3: 2, 2: 1}) \n",
      "answerD": "\t{4: 3, 1: 2, 3: 2, 2: 1} ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The statement a=collections.OrderedDict() generates a dictionary with the number as the key and the count of times the number appears as the value. \n "
    },
    {
      "id": "641",
      "question": "What will be the output of the following Python code snippet? \n >>> import   collections \n >>>  b = collections . Counter ( [ 2 , 2 , 3 , 4 , 4 , 4 ] ) \n >>>  b. most_common ( 1 ) \n ",
      "answerA": "\tCounter({4: 3, 2: 2, 3: 1}) \n",
      "answerB": "\t{3:1} \n",
      "answerC": "\t{4:3} \n",
      "answerD": "\t[(4, 3)]  ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The most_common() method returns the n number key-value pairs where the value is the most recurring. \n "
    },
    {
      "id": "642",
      "question": "What will be the output of the following Python code snippet? \n >>> import   collections \n >>>  b = collections . Counter ( [ 2 , 2 , 3 , 4 , 4 , 4 ] ) \n >>>  b. most_common ( 1 ) \n ",
      "answerA": "\tCounter({4: 3, 2: 2, 3: 1}) \n",
      "answerB": "\t{3:1} \n",
      "answerC": "\t{4:3} \n",
      "answerD": "\t[(4, 3)]  ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The most_common() method returns the n number key-value pairs where the value is the most recurring. \n "
    },
    {
      "id": "643",
      "question": "What will be the output of the following Python code snippet? \n >>>   import   collections \n >>>  a = collections . Counter ( [ 2 , 2 , 3 , 3 , 3 , 4 ] ) \n >>>  b = collections . Counter ( [ 2 , 2 , 3 , 4 , 4 ] ) \n >>>  a|b \n ",
      "answerA": "\tCounter({3: 3, 2: 2, 4: 2}) \n",
      "answerB": "\tCounter({2: 2, 3: 1, 4: 1}) \n",
      "answerC": "\tCounter({3: 2}) \n",
      "answerD": "\tCounter({4: 1}) ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " a|b returns the pair of keys and the highest recurring value. \n \n "
    },
    {
      "id": "644",
      "question": "What will be the output of the following Python code snippet? \n >>>   import   collections \n >>>  a = collections . Counter ( [ 3 , 3 , 4 , 5 ] ) \n >>>  b = collections . Counter ( [ 3 , 4 , 4 , 5 , 5 , 5 ] ) \n >>>  a&b \n ",
      "answerA": "\tCounter({3: 12, 4: 1, 5: 1}) \n",
      "answerB": "\tCounter({3: 1, 4: 1, 5: 1}) \n",
      "answerC": "\tCounter({4: 2}) \n",
      "answerD": "\tCounter({5: 1}) ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " a&b returns the pair of keys and the lowest recurring value. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 Dictionary \u2013 2 \u00bb  Next - Python Questions and Answers \u2013 Dictionary \u2013 4   Related Posts: Practice  Programming MCQs \n Check  Information Technology Books \n Apply for  Programming Internship \n Apply for  Python Internship \n Check  Python Books \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 Dictionary \u2013 4  \n Python Questions and Answers \u2013 Dictionary \u2013 2  \n Python Multiple Choice Questions \u2013 Dictionary  \n Python Program to Find the Sum of All the Items in a Dictionary  \n Python Program to Multiply All the Items in a Dictionary  \n Python Program to Create Dictionary that Contains Number  \n Python Program to Create Dictionary from an Object  \n Python Program to Map Two Lists into a Dictionary  \n Python Program to Add a Key-Value Pair to the Dictionary  \n Python Program to Remove a Key from a Dictionary  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python MCQ Questions Python Programs on Graphs Python Programs on Trees Searching and Sorting in Python Linked List Programs in Python Popular Pages: Python Programming Examples Java Programming MCQ Questions C# String Programs JavaScript MCQ Questions PHP MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python MCQ Questions Python Programs on Graphs Python Programs on Trees Searching and Sorting in Python Linked List Programs in Python \n   \n \n \n \n \n \n \n   Popular Pages Python Programming Examples Java Programming MCQ Questions C# String Programs JavaScript MCQ Questions PHP MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.421 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 14:54:09  \n  Compression = gzip "
    },
    {
      "id": "645",
      "question": "The following Python code is invalid. \n \n \n \n \n \n class  demo ( dict ) :\n   def  __test__ ( self , key ) :\n     return   [ ] \na  =  demo ( ) \na [ 'test' ]   =   7 \n print ( a ) \n ",
      "answerA": "\tTrue \n",
      "answerB": "\tFalse ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The output of the code is: {\u2018test\u2019:7}. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "646",
      "question": "What will be the output of the following Python code? \n count = { } \ncount [ ( 1 , 2 , 4 ) ]   =   5 \ncount [ ( 4 , 2 , 1 ) ]   =   7 \ncount [ ( 1 , 2 ) ]   =   6 \ncount [ ( 4 , 2 , 1 ) ]   =   2 \ntot  =   0 \n for  i  in  count:\n    tot = tot+count [ i ] \n print ( len ( count ) +tot ) \n ",
      "answerA": "\t25 \n",
      "answerB": "\t17 \n",
      "answerC": "\t16 \n",
      "answerD": "\tTuples can\u2019t be made keys of a dictionary ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Tuples can be made keys of a dictionary. Length of the dictionary is 3 as the value of the key (4,2,1) is modified to "
    },
    {
      "id": "647",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n a = { } \na [ 2 ] = 1 \na [ 1 ] = [ 2 , 3 , 4 ] \n print ( a [ 1 ] [ 1 ] ) \n ",
      "answerA": "\t[2,3,4]  \n",
      "answerB": "\t3 \n",
      "answerC": "\t2 \n",
      "answerD": "\tAn exception is thrown ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Now, a={1:[2,3,4],2:1} . a[1][1] refers to second element having key "
    },
    {
      "id": "648",
      "question": "What will be the output of the following Python code? \n >>>  a = { 'B' : 5 , 'A' : 9 , 'C' : 7 } \n >>>   sorted ( a ) \n ",
      "answerA": "\t[\u2018A\u2019,\u2019B\u2019,\u2019C\u2019]  \n",
      "answerB": "\t[\u2018B\u2019,\u2019C\u2019,\u2019A\u2019]  \n",
      "answerC": "\t[5,7,9]  \n",
      "answerD": "\t[9,5,7]  ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": "  Return a new sorted list of keys in the dictionary. \n "
    },
    {
      "id": "649",
      "question": "What will be the output of the following Python code? \n >>>  a = { i: i*i  for  i  in   range ( 6 ) } \n >>>  a \n ",
      "answerA": "\tDictionary comprehension doesn\u2019t exist \n",
      "answerB": "\t{0: 0, 1: 1, 2: 4, 3: 9, 4: 16, 5: 25, 6:36} \n",
      "answerC": "\t{0: 0, 1: 1, 4: 4, 9: 9, 16: 16, 25: 25} \n",
      "answerD": "\t{0: 0, 1: 1, 2: 4, 3: 9, 4: 16, 5: 25} ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Dictionary comprehension is implemented in the above piece of code.  \n "
    },
    {
      "id": "650",
      "question": "What will be the output of the following Python code? \n >>>  a = { } \n >>>  a. fromkeys ( [ 1 , 2 , 3 ] , \"check\" ) \n ",
      "answerA": "\tSyntax error \n",
      "answerB": "\t{1:\u201dcheck\u201d,2:\u201dcheck\u201d,3:\u201dcheck\u201d} \n",
      "answerC": "\t\u201ccheck\u201d \n",
      "answerD": "\t{1:None,2:None,3:None} ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The dictionary takes values of keys from the list and initializes it to the default value (value given in the second parameter). Execute in Python shell to verify.  \n "
    },
    {
      "id": "651",
      "question": "What will be the output of the following Python code? \n >>>  b = { } \n >>>   all ( b ) \n ",
      "answerA": "\t{ } \n",
      "answerB": "\tFalse \n",
      "answerC": "\tTrue \n",
      "answerD": "\tAn exception is thrown ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Function all() returns True if all keys of the dictionary are true or if the dictionary is empty. \n "
    },
    {
      "id": "652",
      "question": "If b is a dictionary, what does any(b) do? \n",
      "answerA": "\tReturns True if any key of the dictionary is true \n",
      "answerB": " do? \na)\tReturns True if any key of the dictionary is true \n",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Method any() returns True if any key of the dictionary is true and False if the dictionary is empty. \n "
    },
    {
      "id": "653",
      "question": "What will be the output of the following Python code? \n >>>  a = { \"a\" : 1 , \"b\" : 2 , \"c\" : 3 } \n >>>  b = dict ( zip ( a. values ( ) , a. keys ( ) ) ) \n >>>  b \n ",
      "answerA": "\t{\u2018a\u2019: 1, \u2018b\u2019: 2, \u2018c\u2019: 3} \n",
      "answerB": "\tAn exception is thrown \n",
      "answerC": "      {\u2018a\u2019: \u2018b\u2019: \u2018c\u2019: } \n",
      "answerD": "\t{1: \u2018a\u2019, 2: \u2018b\u2019, 3: \u2018c\u2019} ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": "  The above piece of code inverts the key-value pairs in the dictionary. \n "
    },
    {
      "id": "654",
      "question": "What will be the output of the following Python code? \n >>>  a = { i:  'A'  +  str ( i )   for  i  in   range ( 5 ) } \n >>>  a \n ",
      "answerA": "\tAn exception is thrown \n",
      "answerB": "\t{0: \u2018A0\u2019, 1: \u2018A1\u2019, 2: \u2018A2\u2019, 3: \u2018A3\u2019, 4: \u2018A4\u2019} \n",
      "answerC": "\t{0: \u2018A\u2019, 1: \u2018A\u2019, 2: \u2018A\u2019, 3: \u2018A\u2019, 4: \u2018A\u2019} \n",
      "answerD": "\t{0: \u20180\u2019, 1: \u20181\u2019, 2: \u20182\u2019, 3: \u20183\u2019, 4: \u20184\u2019} ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Dictionary comprehension and string concatenation is implemented in the above piece of code.  \n "
    },
    {
      "id": "655",
      "question": "What will be the output of the following Python code? \n >>>  a = dict ( ) \n >>>  a [ 1 ] \n ",
      "answerA": "\tAn exception is thrown since the dictionary is empty \n",
      "answerB": "\t\u2018 \u2018 \n",
      "answerC": "\t1 \n",
      "answerD": "\t0 ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The values of a dictionary can be accessed through the keys only if the keys exist in the dictionary. \n "
    },
    {
      "id": "656",
      "question": "What will be the output of the following Python code? \n >>>   import   collections \n >>>  a = dict ( ) \n >>>  a = collections . defaultdict ( int ) \n >>>  a [ 1 ] \n ",
      "answerA": "\t1 \n",
      "answerB": "\t0 \n",
      "answerC": "\tAn exception is thrown \n",
      "answerD": "\t\u2018 \u2018 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The statement a=collections.defaultdict(int) gives the default value of 0 \n(since int data type is given within the parenthesis) even if the keys don\u2019t exist in the dictionary. \n "
    },
    {
      "id": "657",
      "question": "What will be the output of the following Python code? \n >>>   import   collections \n >>>  a = dict ( ) \n >>>  a = collections . defaultdict ( str ) \n >>>  a [ 'A' ] \n ",
      "answerA": "\tAn exception is thrown since the dictionary is empty \n",
      "answerB": "\t\u2018 \u2018 \n",
      "answerC": "\t\u2018A\u2019 \n",
      "answerD": "\t0 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The statement a=collections.defaultdict(str) gives the default value of \u2018 \u2018 even if the keys don\u2019t exist in the dictionary.  \n "
    },
    {
      "id": "658",
      "question": "What will be the output of the following Python code? \n >>>   import   collections \n >>>  b = dict ( ) \n >>>  b = collections . defaultdict ( lambda :  7 ) \n >>>  b [ 4 ] \n ",
      "answerA": "\t4 \n",
      "answerB": "\t0 \n",
      "answerC": "\tAn exception is thrown \n",
      "answerD": "\t7 ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The statement a=collections.defaultdict(lambda: x) gives the default value of x even if the keys don\u2019t exist in the dictionary.  \n "
    },
    {
      "id": "659",
      "question": "What will be the output of the following Python code? \n >>>   import   collections \n >>>  a = collections . OrderedDict ( ( str ( x ) , x )   for  x  in   range ( 3 ) ) \n >>>  a \n ",
      "answerA": "\t{\u20182\u2019:2, \u20180\u2019:0, \u20181\u2019:1} \n",
      "answerB": "\tOrderedDict([(\u20180\u2019, 0), (\u20181\u2019, 1), (\u20182\u2019, 2)]) \n",
      "answerC": "\tAn exception is thrown \n",
      "answerD": "\t\u2018 \u2018 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The line of code a=collections.OrderedDict() generates a dictionary satisfying the conditions given within the parenthesis and in an ascending order of the keys. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 Dictionary \u2013 3 \u00bb  Next - Python Multiple Choice Questions \u2013 Built-in Functions   Related Posts: Apply for  Programming Internship \n Practice  Programming MCQs \n Apply for  Python Internship \n Check  Python Books \n Check  Information Technology Books \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 Dictionary \u2013 3  \n Python Questions and Answers \u2013 Dictionary \u2013 2  \n Python Program to Map Two Lists into a Dictionary  \n Python Program to Check if a Key Exists in a Dictionary or Not  \n Python Multiple Choice Questions \u2013 Dictionary  \n Python Program to Create Dictionary from an Object  \n Python Program to Count the Frequency of Each Word in a String using Dictionary  \n Python Program to Remove a Key from a Dictionary  \n Python Program to Create Dictionary that Contains Number  \n Python Program to Find the Sum of All the Items in a Dictionary  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python Programs on Trees Linked List Programs in Python Python Programs on Graphs Python Programming Examples Python MCQ Questions Popular Pages: Searching and Sorting in Python Tree Programs in C++ Bitwise Operators in C C Programming Examples on Trees Java Programming Examples    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python Programs on Trees Linked List Programs in Python Python Programs on Graphs Python Programming Examples Python MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Searching and Sorting in Python Tree Programs in C++ Bitwise Operators in C C Programming Examples on Trees Java Programming Examples \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.553 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 02:29:40  \n  Compression = gzip "
    },
    {
      "id": "660",
      "question": "Which of the following functions is a built-in function in python? \n",
      "answerA": " seed() \n",
      "answerB": " sqrt() \n",
      "answerC": " factorial() \n",
      "answerD": " print() ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The function seed is a function which is present in the random module. The functions sqrt and factorial are a part of the math module. The print function is a built-in function which prints a value directly to the system output. \n \n \n \n \n \n "
    },
    {
      "id": "661",
      "question": "What will be the output of the following Python expression? \n round ( 4.576 ) \n ",
      "answerA": " 4.5 \n",
      "answerB": " 5 \n",
      "answerC": " 4 \n",
      "answerD": " 4.6 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " This is a built-in function which rounds a number to give precision in decimal digits. In the above case, since the number of decimal places has not been specified, the decimal number is rounded off to a whole number. Hence the output will be "
    },
    {
      "id": "662",
      "question": "The function pow(x,y,z) is evaluated as: \n",
      "answerA": " (x**y)**z \n",
      "answerB": " (x**y) / z \n",
      "answerC": " (x**y) % z \n",
      "answerD": " (x**y)*z ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The built-in function pow() can accept two or three arguments. When it takes in two arguments, they are evaluated as x**y. When it takes in three arguments, they are evaluated as (x**y)%z.   \n \n \n    \nNote: Join free Sanfoundry classes at  Telegram  or  Youtube \n \n \n \n \n \n \n \n "
    },
    {
      "id": "663",
      "question": "What will be the output of the following Python function? \n all ( [ 2 , 4 , 0 , 6 ] ) \n ",
      "answerA": " Error \n",
      "answerB": " True \n",
      "answerC": " False \n",
      "answerD": " 0 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The function all returns false if any one of the elements of the iterable is zero and true if all the elements of the iterable are non zero. Hence the output of this function will be false. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "664",
      "question": " What will be the output of the following Python expression? \n \n advertisement \n \n \n \n \n round ( 4.5676 , 2 ) ? \n ",
      "answerA": " 4.5 \n",
      "answerB": " 4.6 \n",
      "answerC": " 4.57 \n",
      "answerD": " 4.56 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The function round is used to round off the given decimal number to the specified decimal places. In this case, the number should be rounded off to two decimal places. Hence the output will be 4."
    },
    {
      "id": "665",
      "question": "What will be the output of the following Python function? \n any ( [ 2 > 8 ,   4 > 2 ,   1 > 2 ] ) \n ",
      "answerA": " Error \n",
      "answerB": " True \n",
      "answerC": " False \n",
      "answerD": " 4>2 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The built-in function any() returns true if any or more of the elements of the iterable is true (non zero), If all the elements are zero, it returns false. \n "
    },
    {
      "id": "666",
      "question": "What will be the output of the following Python function? \n import   math \n abs ( math . sqrt ( 25 ) ) \n ",
      "answerA": " Error \n",
      "answerB": " -5 \n",
      "answerC": " 5 \n",
      "answerD": " 5.0 ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The abs() function prints the absolute value of the argument passed. For example: abs(-5)="
    },
    {
      "id": "667",
      "question": " What will be the output of the following Python function? \n sum ( 2 , 4 , 6 ) \n sum ( [ 1 , 2 , 3 ] ) \n ",
      "answerA": " Error, 6 \n",
      "answerB": " 12, Error \n",
      "answerC": " 12, 6 \n",
      "answerD": " Error, Error ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The first function will result in an error because the function sum() is used to find the sum of iterable numbers. Hence the outcomes will be Error and 6 respectively. \n "
    },
    {
      "id": "668",
      "question": "What will be the output of the following Python function? \n all ( 3 , 0 , 4.2 ) \n ",
      "answerA": " True \n",
      "answerB": " False \nc) Error \nd) 0 ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The function all() returns \u2018True\u2019 if any one or more of the elements of the iterable are non zero. In the above case, the values are not iterable, hence an error is thrown. \n "
    },
    {
      "id": "669",
      "question": "What will be the output of the following Python function? \n min ( max ( False , - 3 , - 4 ) ,   2 , 7 ) \n ",
      "answerA": " 2 \n",
      "answerB": " False \n",
      "answerC": " -3 \n",
      "answerD": " -4 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The function max() is being used to find the maximum value from among -3, -4 and false. Since false amounts to the value zero, hence we are left with min(0, 2, 7) Hence the output is 0 (false). \n More MCQs on Python Built-in Functions: \n \n Python Built-in Functions MCQ (Set 2) \n Python Built-in Functions MCQ (Set 3) \n \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 Dictionary \u2013 4 \u00bb  Next - Python Question and Answers \u2013 Built-in Functions \u2013 2   Related Posts: Apply for  Python Internship \n Apply for  Programming Internship \n Practice  Programming MCQs \n Check  Information Technology Books \n Check  Python Books \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Question and Answers \u2013 Built-in Functions \u2013 2  \n Python Question and Answers \u2013 Built-in Functions \u2013 3  \n Python Program to Find the Larger String without using Built-in Functions  \n Python Multiple Choice Questions \u2013 Mapping Functions  \n Python Multiple Choice Questions \u2013 Turtle Module  \n Python Question and Answers \u2013 Sys Module  \n Python Questions and Answers \u2013 Function \u2013 2  \n Python Question and Answers \u2013 Random module \u2013 1  \n Python Multiple Choice Questions \u2013 Argument Parsing  \n Python Multiple Choice Questions \u2013 Regular Expressions  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python MCQ Questions C# MCQ Questions Arduino MCQ Questions PHP MCQ Questions Visual Basic MCQ Questions Popular Pages: Python Programs on Trees Searching and Sorting in Python Linked List Programs in Python Python Programs on Graphs Linux MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python MCQ Questions C# MCQ Questions Arduino MCQ Questions PHP MCQ Questions Visual Basic MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Python Programs on Trees Searching and Sorting in Python Linked List Programs in Python Python Programs on Graphs Linux MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.332 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 00:24:37  \n  Compression = gzip "
    },
    {
      "id": "670",
      "question": "What will be the output of the following Python functions? \n \n \n \n \n \n chr ( \u2018 97 \u2019 ) \n chr ( 97 ) \n ",
      "answerA": "  \n    a\r\n   Error \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n ",
      "answerB": "  \n    \u2018a\u2019\r\n    a \n ",
      "answerC": "  \n    Error\r\n   a \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n ",
      "answerD": "  ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The built-in function chr() returns the alphabet corresponding to the value given as an argument. This function accepts only integer type values. In the first function, we have passed a string. Hence the first function throws an error. \n\u00a0 \u00a0 \n "
    },
    {
      "id": "671",
      "question": "What will be the output of the following Python function? \n \n advertisement \n \n \n \n \n complex ( 1 +2j ) \n ",
      "answerA": " Error \n",
      "answerB": " 1 \n",
      "answerC": " 2j \n",
      "answerD": " 1+2j ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The built-in function complex() returns the argument in a complex form. Hence the output of the function shown above will be 1+2j.   \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "672",
      "question": "What is the output of the function complex()? \n",
      "answerA": " 0j \n",
      "answerB": " 0+0j \n",
      "answerC": " 0 \n",
      "answerD": " Error ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The complex function returns 0j if both of the arguments are omitted, that is, if the function is in the form of complex() or complex(0), then the output will be 0j. \n "
    },
    {
      "id": "673",
      "question": "The function divmod(a,b), where both \u2018a\u2019 and \u2018b\u2019 are integers is evaluated as: \n",
      "answerA": " (a%b, a//",
      "answerB": ", where both \u2018a\u2019 and \u2018b\u2019 are integers is evaluated as: \na) (a%b, a//",
      "answerC": " (a//b, a*b) \n",
      "answerD": " (a/b, a%b) ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The function divmod(a,b) is evaluated as a//b, a%b, if both \u2018a\u2019 and \u2018b\u2019 are integers.   \n "
    },
    {
      "id": "674",
      "question": " What will be the output of the following Python function? \n divmod ( 10.5 , 5 ) \n divmod ( 2.4 , 1.2 ) \n ",
      "answerA": "  \n (2.00, 0.50)\r\n(2.00, 0.00) \n ",
      "answerB": "  \n (2, 0.5)\r\n(2, 0) \n ",
      "answerC": "  \n (2.0, 0.5)\r\n(2.0, 0.0) \n ",
      "answerD": "  ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " See python documentation for the function divmod. \n\u00a0 \u00a0 \n "
    },
    {
      "id": "675",
      "question": "The function complex(\u20182-3j\u2019) is valid but the function complex(\u20182 \u2013 3j\u2019) is invalid. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " When converting from a string, the string must not contain any blank spaces around the + or \u2013 operator. Hence the function complex(\u20182 \u2013 3j\u2019) will result in an error. \n "
    },
    {
      "id": "676",
      "question": "What will be the output of the following Python function? \n list ( enumerate ( [ 2 ,   3 ] ) ) \n ",
      "answerA": " Error \n",
      "answerB": " [(1, 2), (2, 3)]  \n",
      "answerC": " [(0, 2), (1, 3)]  \n",
      "answerD": " [(2, 3)]  ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The built-in function enumerate() accepts an iterable as an argument. The function shown in the above case returns containing pairs of the numbers given, starting from "
    },
    {
      "id": "677",
      "question": " What will be the output of the following Python functions? \n x = 3 \n eval ( 'x^2' ) \n ",
      "answerA": " Error \n",
      "answerB": " 1 \n",
      "answerC": " 9 \n",
      "answerD": " 6 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The function eval is use to evaluate the expression that it takes as an argument. In the above case, the eval() function is used to perform XOR operation between 3 and "
    },
    {
      "id": "678",
      "question": "What will be the output of the following Python functions? \n float ( '1e-003' ) \n float ( '2e+003' ) \n ",
      "answerA": "  \n 3.00\r\n300 \n ",
      "answerB": "  \n 0.001\r\n2000.0 \n ",
      "answerC": "  \n 0.001\r\n200 \n ",
      "answerD": "  ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The output of the first function will be 0.001 and that of the second function will be 2000."
    },
    {
      "id": "679",
      "question": "Which of the following functions does not necessarily accept only iterables as arguments? \n",
      "answerA": " enumerate() \n",
      "answerB": " all() \n",
      "answerC": " chr() \n",
      "answerD": " max() ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The functions enumerate(), all() and max() accept iterables as arguments whereas the function chr() throws an error on receiving an iterable as an argument. Also note that the function chr() accepts only integer values. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Multiple Choice Questions \u2013 Built-in Functions \u00bb  Next - Python Question and Answers \u2013 Built-in Functions \u2013 3   Related Posts: Practice  Programming MCQs \n Check  Python Books \n Check  Information Technology Books \n Apply for  Python Internship \n Apply for  Programming Internship \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Question and Answers \u2013 Built-in Functions \u2013 3  \n Python Multiple Choice Questions \u2013 Built-in Functions  \n Python Program to Find the Larger String without using Built-in Functions  \n Python Question and Answers \u2013 Sys Module  \n Python Question and Answers \u2013 Random module \u2013 1  \n Python Multiple Choice Questions \u2013 Mapping Functions  \n Python Questions and Answers \u2013 Mapping Functions \u2013 2  \n Python Question and Answers \u2013 Datetime Module \u2013 1  \n Python Question and Answers \u2013 Formatting \u2013 2  \n Python Question and Answers \u2013 Datetime Module \u2013 2  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python Programs on Trees Searching and Sorting in Python Linked List Programs in Python Python MCQ Questions Python Programs on Graphs Popular Pages: C# Programs on Functions Python Programming Examples C++ Algorithm Library PHP MCQ Questions JavaScript MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python Programs on Trees Searching and Sorting in Python Linked List Programs in Python Python MCQ Questions Python Programs on Graphs \n   \n \n \n \n \n \n \n   Popular Pages C# Programs on Functions Python Programming Examples C++ Algorithm Library PHP MCQ Questions JavaScript MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.038 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 01:22:47  \n  Compression = gzip "
    },
    {
      "id": "680",
      "question": "Which of the following functions accepts only integers as arguments? \n",
      "answerA": " ord() \n",
      "answerB": " min() \n",
      "answerC": " chr() \n",
      "answerD": " any() ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The function chr() accepts only integers as arguments. The function ord() accepts only strings. The functions min() and max() can accept floating point as well as integer arguments. \n \n \n \n \n \n "
    },
    {
      "id": "681",
      "question": "Suppose there is a list such that: l=[2,3,4]. If we want to print this list in reverse order, which of the following methods should be used? \n",
      "answerA": " reverse(l) \n",
      "answerB": " list(reverse[(l)]) \n",
      "answerC": " reversed(l) \n",
      "answerD": " list(reversed(l)) ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The built-in function reversed() can be used to reverse the elements of a list. This function accepts only an iterable as an argument. To print the output in the form of a list, we use: list(reversed(l)). The output will be: [4,3,2]. \n "
    },
    {
      "id": "682",
      "question": "What will be the output of the following Python function? \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n float ( '   -12345 \\n ' ) \n  (Note that the number of blank spaces before the number is 5) \n",
      "answerA": " \u2003\u00a0-12345.0 (5 blank spaces before the number) \n",
      "answerB": " -12345.0 \n",
      "answerC": " Error \n",
      "answerD": " -12345.000000000\u2026. (infinite decimal places) ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The function float() will remove all the blank spaces and convert the integer to a floating point number. Hence the output will be: -12345."
    },
    {
      "id": "683",
      "question": "What will be the output of the following Python function? \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n ord ( 65 ) \n ord ( \u2018A\u2019 ) \n ",
      "answerA": "  \n A\r\n65 \n \n advertisement \n \n \n \n \n ",
      "answerB": "  \n Error\r\n65 \n \n advertisement \n \n \n \n \n ",
      "answerC": "  \n A\r\nError \n ",
      "answerD": "  ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The built-in function ord() is used to return the ASCII value of the alphabet passed to it as an argument. Hence the first function results in an error and the output of the second function is "
    },
    {
      "id": "684",
      "question": " What will be the output of the following Python function? \n float ( \u2018-infinity\u2019 ) \n float ( \u2018inf\u2019 ) \n ",
      "answerA": "  \n \u2013inf\r\ninf \n ",
      "answerB": "  \n \u2013infinity\r\ninf \n ",
      "answerC": "  \n Error\r\nError \n ",
      "answerD": "  ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The output of the first function will be \u2013inf and that of the second function will be inf. \n\u00a0 \u00a0 \n "
    },
    {
      "id": "685",
      "question": "Which of the following functions will not result in an error when no arguments are passed to it? \n",
      "answerA": " min() \n",
      "answerB": " divmod() \n",
      "answerC": " all() \n",
      "answerD": " float() ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The built-in functions min(), max(), divmod(), ord(), any(), all() etc throw an error when no arguments are passed to them. However there are some built-in functions like float(), complex() etc which do not throw an error when no arguments are passed to them. The output of float() is 0."
    },
    {
      "id": "686",
      "question": "What will be the output of the following Python function? \n hex ( 15 ) \n ",
      "answerA": " f \n",
      "answerB": " 0xF \n",
      "answerC": " 0Xf \n",
      "answerD": " 0xf ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The function hex() is used to convert the given argument into its hexadecimal representation, in lower case. Hence the output of the function hex(15) is 0xf. \n "
    },
    {
      "id": "687",
      "question": " Which of the following functions does not throw an error? \n",
      "answerA": " ord() \n",
      "answerB": " ord(\u2018 \u2018) \n",
      "answerC": " ord(\u201d) \n",
      "answerD": " ord(\u201c\u201d) ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The function ord() accepts a character. Hence ord(), ord(\u201d) and ord(\u201c\u201d) throw errors. However the function ord(\u2018 \u2018) does not throw an error because in this case, we are actually passing a blank space as an argument. The output of ord(\u2018 \u2018) is 32 (ASCII value corresponding to blank space). \n "
    },
    {
      "id": "688",
      "question": "What will be the output of the following Python function? \n len ( [ \"hello\" , 2 ,   4 ,   6 ] ) \n ",
      "answerA": " 4 \n",
      "answerB": " 3 \n",
      "answerC": " Error \n",
      "answerD": " 6 ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The function len() returns the length of the number of elements in the iterable. Therefore the output of the function shown above is "
    },
    {
      "id": "689",
      "question": "What will be the output of the following Python function? \n oct ( 7 ) \n oct ( \u2018 7 \u2019 ) \n ",
      "answerA": "  \n Error\r\n07 \n ",
      "answerB": "  \n 0o7\r\nError  \n ",
      "answerC": "  \n 0o7\r\nError \n ",
      "answerD": "  ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The function oct() is used to convert its argument into octal form. This function does not accept strings. Hence the second function results in an error while the output of the first function is 0o"
    },
    {
      "id": "690",
      "question": "Which of the following is the use of function in python? \n",
      "answerA": " Functions are reusable pieces of programs \n",
      "answerB": " Functions don\u2019t provide better modularity for your application \n",
      "answerC": " you can\u2019t also create your own functions \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Functions are reusable pieces of programs. They allow you to give a name to a block of statements, allowing you to run that block using the specified name anywhere in your program and any number of times.  \n \n \n \n \n \n "
    },
    {
      "id": "691",
      "question": "Which keyword is used for function? \n",
      "answerA": " Fun \n",
      "answerB": " Define \n",
      "answerC": " def \n",
      "answerD": " Function ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The def keyword is used to create, (or define) a function in python.  \n "
    },
    {
      "id": "692",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n def sayHello ( ) :     print ( 'Hello World!' )   sayHello ( )   sayHello ( ) \n ",
      "answerA": "  \n Hello World!\r\nHello World! \n \n \n    \nNote: Join free Sanfoundry classes at  Telegram  or  Youtube \n \n \n \n \n \n \n \n ",
      "answerB": "  \n 'Hello World!'\r\n'Hello World!' \n ",
      "answerC": "  \n Hello\r\nHello \n \n advertisement \n \n \n \n \n ",
      "answerD": " None of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Functions are defined using the def keyword. After this keyword comes an identifier name for the function, followed by a pair of parentheses which may enclose some names of variables, and by the final colon that ends the line. Next follows the block of statements that are part of this function. \n def sayHello ( ) :     print ( 'Hello World!' )   # block belonging to the function # End of function # \u00a0 sayHello ( )   # call the function sayHello ( )   # call the function again \n \n "
    },
    {
      "id": "693",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n def printMax ( a, b ) :      if  a  >  b :         print ( a,  'is maximum' )     elif a  ==  b :         print ( a,  'is equal to' , b )      else :         print ( b,  'is maximum' ) printMax ( 3 ,  4 ) \n ",
      "answerA": " 3 \n",
      "answerB": " 4 \n",
      "answerC": " 4 is maximum \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Here, we define a function called printMax that uses two parameters called a and b. We find out the greater number using a simple if..else statement and then print the bigger number.  \n "
    },
    {
      "id": "694",
      "question": "What will be the output of the following Python code? \n x  =   50 def func ( x ) :     print ( 'x is' , x )     x  =   2     print ( 'Changed local x to' , x ) func ( x ) print ( 'x is now' , x ) \n ",
      "answerA": "  \n x is 50\r\nChanged local x to 2\r\nx is now 50 \n ",
      "answerB": "  \n x is 50\r\nChanged local x to 2\r\nx is now 2 \n ",
      "answerC": "  \n x is 50\r\nChanged local x to 2\r\nx is now 100 \n ",
      "answerD": " None of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The first time that we print the value of the name x with the first line in the function\u2019s body, Python uses the value of the parameter declared in the main block, above the function definition. \nNext, we assign the value 2 to x. The name x is local to our function. So, when we change the value of x in the function, the x defined in the main block remains unaffected. \nWith the last print function call, we display the value of x as defined in the main block, thereby confirming that it is actually unaffected by the local assignment within the previously called function.  \n "
    },
    {
      "id": "695",
      "question": "What will be the output of the following Python code? \n x  =   50 def  func ( ) :      global  x      print ( 'x is' ,  x )     x  =   2      print ( 'Changed global x to' ,  x ) func ( ) print ( 'Value of x is' ,  x ) \n ",
      "answerA": "  \n x is 50\r\nChanged global x to 2\r\nValue of x is 50 \n ",
      "answerB": "  \n x is 50\r\nChanged global x to 2\r\nValue of x is 2 \n ",
      "answerC": "  \n x is 50\r\nChanged global x to 50\r\nValue of x is 50 \n ",
      "answerD": " None of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The global statement is used to declare that x is a global variable \u2013 hence, when we assign a value to x inside the function, that change is reflected when we use the value of x in the main block.  \n "
    },
    {
      "id": "696",
      "question": "What will be the output of the following Python code? \n def  say ( message ,  times  =   1 ) :      print ( message * times ) say ( 'Hello' ) say ( 'World' ,   5 ) \n ",
      "answerA": "  \n Hello\r\nWorldWorldWorldWorldWorld \n ",
      "answerB": "  \n Hello\r\nWorld 5 \n ",
      "answerC": "  \n Hello\r\nWorld,World,World,World,World \n ",
      "answerD": "  ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " For some functions, you may want to make some parameters optional and use default values in case the user does not want to provide values for them. This is done with the help of default argument values. You can specify default argument values for parameters by appending to the parameter name in the function definition the assignment operator (=) followed by the default value. \nThe function named say is used to print a string as many times as specified. If we don\u2019t supply a value, then by default, the string is printed just once. We achieve this by specifying a default argument value of 1 to the parameter times. \nIn the first usage of say, we supply only the string and it prints the string once. In the second usage of say, we supply both the string and an argument 5 stating that we want to say the string message 5 times.  \n\u00a0 \u00a0 \n "
    },
    {
      "id": "840",
      "question": "What will be the output of the following Python code? \n l = [ n  for  n  in   range ( 5 ) ] \nf = lambda  x: bool ( x% 2 ) \n print ( f ( 3 ) ,  f ( 1 ) ) \n for  i  in   range ( len ( l ) ) :\n     if  f ( l [ i ] ) :\n         del  l [ i ] \n         print ( i ) \n ",
      "answerA": "  \n     True True\r\n    1\r\n    2\r\n    Error \n ",
      "answerB": "  ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above prints true if the value entered as an argument is odd, else false is printed. Hence the output: True True. The error is due to the list index being out of range.  \n\u00a0 \u00a0 \n "
    },
    {
      "id": "697",
      "question": "What will be the output of the following Python code? \n def func ( a, b = 5 , c = 10 ) :     print ( 'a is' , a,  'and b is' , b,  'and c is' , c ) \u00a0 func ( 3 ,  7 ) func ( 25 , c  =   24 ) func ( c  =   50 , a  =   100 ) \n ",
      "answerA": "  \n a is 7 and b is 3 and c is 10\r\na is 25 and b is 5 and c is 24\r\na is 5 and b is 100 and c is 50 \n ",
      "answerB": "  \n a is 3 and b is 7 and c is 10\r\na is 5 and b is 25 and c is 24\r\na is 50 and b is 100 and c is 5 \n ",
      "answerC": "  \n a is 3 and b is 7 and c is 10\r\na is 25 and b is 5 and c is 24\r\na is 100 and b is 5 and c is 50 \n ",
      "answerD": " None of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " If you have some functions with many parameters and you want to specify only some of them, then you can give values for such parameters by naming them \u2013 this is called keyword arguments \u2013 we use the name (keyword) instead of the position (which we have been using all along) to specify the arguments to the function. \nThe function named func has one parameter without a default argument value, followed by two parameters with default argument values. \n In the first usage, func(3, 7), the parameter a gets the value 3, the parameter b gets the value 7 and c gets the default value of "
    },
    {
      "id": "698",
      "question": "What will be the output of the following Python code? \n def  maximum ( x ,  y ) :      if  x  >  y:          return  x      elif  x  ==  y:          return   'The numbers are equal'      else :          return  y \u00a0 print ( maximum ( 2 ,   3 ) ) \n ",
      "answerA": " 2 \n",
      "answerB": " 3 \n",
      "answerC": " The numbers are equal \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The maximum function returns the maximum of the parameters, in this case the numbers supplied to the function. It uses a simple if..else statement to find the greater value and then returns that value.  \n "
    },
    {
      "id": "699",
      "question": "Which of the following is a feature of DocString? \n",
      "answerA": " Provide a convenient way of associating documentation with Python modules, functions, classes, and methods \n",
      "answerB": " All functions should have a docstring \n",
      "answerC": " Docstrings can be accessed by the __doc__ attribute on objects \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Python has a nifty feature called documentation strings, usually referred to by its shorter name docstrings. DocStrings are an important tool that you should make use of since it helps to document the program better and makes it easier to understand.  \n More MCQs on Python Function: \n \n Python Function MCQ (Set 2) \n Python Function MCQ (Set 3) \n Python Function MCQ (Set 4) \n \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Question and Answers \u2013 Built-in Functions \u2013 3 \u00bb  Next - Python Questions and Answers \u2013 Function \u2013 2   Related Posts: Apply for  Programming Internship \n Check  Information Technology Books \n Check  Python Books \n Practice  Programming MCQs \n Apply for  Python Internship \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 Function \u2013 2  \n Python Multiple Choice Questions \u2013 Argument Parsing  \n Python Questions and Answers \u2013 Function \u2013 3  \n Python Multiple Choice Questions \u2013 Built-in Functions  \n Python Program to Reverse a Stack using Recursion  \n Python Multiple Choice Questions \u2013 Exception Handling  \n Python Multiple Choice Questions \u2013 Mapping Functions  \n Python MCQ (Multiple Choice Questions)  \n Python Multiple Choice Questions \u2013 While and For Loops  \n Python Program to Implement Stack  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python MCQ Questions Python Programs on Trees Linked List Programs in Python Python Programs on Graphs Searching and Sorting in Python Popular Pages: PHP MCQ Questions Visual Basic MCQ Questions Object Oriented Programming MCQ Questions C++ Programming MCQ Questions Oracle Database MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python MCQ Questions Python Programs on Trees Linked List Programs in Python Python Programs on Graphs Searching and Sorting in Python \n   \n \n \n \n \n \n \n   Popular Pages PHP MCQ Questions Visual Basic MCQ Questions Object Oriented Programming MCQ Questions C++ Programming MCQ Questions Oracle Database MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.537 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 00:24:37  \n  Compression = gzip "
    },
    {
      "id": "700",
      "question": "Which are the advantages of functions in python? \n",
      "answerA": " Reducing duplication of code \n",
      "answerB": " Decomposing complex problems into simpler pieces \n",
      "answerC": " Improving clarity of the code \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": "none explanation"
    },
    {
      "id": "701",
      "question": "What are the two main types of functions? \n",
      "answerA": " Custom function \n",
      "answerB": " Built-in function & User defined function \n",
      "answerC": " User function \n",
      "answerD": " System function ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Built-in functions and user defined ones. The built-in functions are part of the Python language. Examples are: dir(), len() or abs(). The user defined functions are functions created with the def keyword.  \n "
    },
    {
      "id": "702",
      "question": "Where is function defined? \n",
      "answerA": " Module \n",
      "answerB": " Class \n",
      "answerC": " Another function \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Functions can be defined inside a module, a class or another function.  \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "703",
      "question": "What is called when a function is defined inside a class? \n",
      "answerA": " Module \n",
      "answerB": " Class \n",
      "answerC": " Another function \n",
      "answerD": " Method ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": "none explanation"
    },
    {
      "id": "704",
      "question": "Which of the following is the use of id() function in python? \n",
      "answerA": " Id  returns the identity of the object \n",
      "answerB": " Every object doesn\u2019t have a unique id \n",
      "answerC": " All of the mentioned \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": " a \n",
      "trackName": "Computer Science",
      "explanation": " Each object in Python has a unique id. The id() function returns the object\u2019s id.  \n \n \n    \nSubscribe Now:  Python Newsletter  |  Important Subjects Newsletters \n \n \n \n \n \n \n \n "
    },
    {
      "id": "705",
      "question": "Which of the following refers to mathematical function? \n",
      "answerA": " sqrt \n",
      "answerB": " rhombus \n",
      "answerC": " add \n",
      "answerD": " rhombus ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Functions that are always available for usage, functions that are contained within external modules, which must be imported and functions defined by a programmer with the def keyword. \nEg:  math import sqrt \nA sqrt() function is imported from the math module. \n \n "
    },
    {
      "id": "706",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n def  cube ( x ) :      return  x * x * x       x  =  cube ( 3 )      print  x \n ",
      "answerA": " 9 \n",
      "answerB": " 3 \n",
      "answerC": " 27 \n",
      "answerD": " 30 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " A function is created to do a specific task. Often there is a result from such a task. The return keyword is used to return values from a function. A function may or may not return a value. If a function does not have a return keyword, it will send a none value.  \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "707",
      "question": "What will be the output of the following Python code? \n def  C2F ( c ) :      return  c *  9 / 5  +  32 print  C2F ( 100 ) print  C2F ( 0 ) \n ",
      "answerA": "  \n 212\r\n32 \n ",
      "answerB": "  \n 314\r\n24 \n ",
      "answerC": "  \n 567\r\n98 \n ",
      "answerD": " None of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above is used to convert a temperature in degree celsius to fahrenheit. \n \n "
    },
    {
      "id": "708",
      "question": "What will be the output of the following Python code? \n def  power ( x ,  y = 2 ) :     r  =   1      for  i  in   range ( y ) :        r  =  r * x      return  r print  power ( 3 ) print  power ( 3 ,   3 ) \n ",
      "answerA": "  \n 212\r\n32 \n ",
      "answerB": "  \n 9\r\n27 \n ",
      "answerC": "  \n 567\r\n98 \n ",
      "answerD": " None of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The arguments in Python functions may have implicit values. An implicit value is used, if no value is provided. Here we created a power function. The function has one argument with an implicit value. We can call the function with one or two arguments.  \n "
    },
    {
      "id": "709",
      "question": "What will be the output of the following Python code? \n def   sum ( *args ) :     '''Function returns the sum     of all values'''    r  =   0     for  i  in  args:       r + =  i     return  r print   sum .__doc__ print   sum ( 1 ,   2 ,   3 ) print   sum ( 1 ,   2 ,   3 ,   4 ,   5 ) \n ",
      "answerA": "  \n 6\r\n15 \n ",
      "answerB": "  \n 6\r\n100 \n ",
      "answerC": "  \n 123\r\n12345 \n ",
      "answerD": " None of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " We use the * operator to indicate, that the function will accept arbitrary number of arguments. The sum() function will return the sum of all arguments. The first string in the function body is called the function documentation string. It is used to document the function. The string must be in triple quotes.  \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all extrance examination questions on Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Multiple Choice Questions \u2013 Function \u00bb  Next - Python Questions and Answers \u2013 Function \u2013 3   Related Posts: Check  Information Technology Books \n Practice  Programming MCQs \n Apply for  Python Internship \n Check  Python Books \n Apply for  Programming Internship \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 Function \u2013 3  \n Python Multiple Choice Questions \u2013 Function  \n Python Questions and Answers \u2013 Function \u2013 4  \n Python Multiple Choice Questions \u2013 Built-in Functions  \n Python Questions and Answers \u2013 Pickle Module  \n Python Question and Answers \u2013 Sys Module  \n Python Questions and Answers \u2013 Python Modules  \n Python Program to Implement Stack  \n Python Question and Answers \u2013 Random module \u2013 1  \n Python Program to Reverse a Stack using Recursion  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python MCQ Questions Python Programs on Trees Searching and Sorting in Python Linked List Programs in Python Python Programs on Graphs Popular Pages: Python Programming Examples PHP MCQ Questions C++ Algorithm Library Visual Basic MCQ Questions C# Programs on Functions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python MCQ Questions Python Programs on Trees Searching and Sorting in Python Linked List Programs in Python Python Programs on Graphs \n   \n \n \n \n \n \n \n   Popular Pages Python Programming Examples PHP MCQ Questions C++ Algorithm Library Visual Basic MCQ Questions C# Programs on Functions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.452 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 17:38:54  \n  Compression = gzip "
    },
    {
      "id": "710",
      "question": "Python supports the creation of anonymous functions at runtime, using a construct called __________ \n",
      "answerA": " lambda \n",
      "answerB": " pi \n",
      "answerC": " anonymous \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Python supports the creation of anonymous functions (i.e. functions that are not bound to a name) at runtime, using a construct called lambda. Lambda functions are restricted to a single expression. They can be used wherever normal functions can be used.  \n \n \n \n \n \n "
    },
    {
      "id": "711",
      "question": "What will be the output of the following Python code? \n y  =   6 z  =   lambda  x: x * y print  z ( 8 ) \n ",
      "answerA": " 48 \n",
      "answerB": " 14 \n",
      "answerC": " 64 \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The lambda keyword creates an anonymous function. The x is a parameter, that is passed to the lambda function. The parameter is followed by a colon character. The code next to the colon is the expression that is executed, when the lambda function is called. The lambda function is assigned to the z variable. \nThe lambda function is executed. The number 8 is passed to the anonymous function and it returns 48 as the result. Note that z is not a name for this function. It is only a variable to which the anonymous function was assigned.  \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "712",
      "question": "What will be the output of the following Python code? \n \n \n    \nSubscribe Now:  Python Newsletter  |  Important Subjects Newsletters \n \n \n \n \n \n \n \n lamb  =   lambda  x: x **  3 print ( lamb ( 5 ) ) \n ",
      "answerA": " 15 \n",
      "answerB": " 555 \n",
      "answerC": " 125 \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": "none explanation"
    },
    {
      "id": "713",
      "question": "Does Lambda contains return statements? \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " lambda definition does not include a return statement. it always contains an expression which is returned. Also note that we can put a lambda definition anywhere a function is expected. We don\u2019t have to assign it to a variable at all.  \n "
    },
    {
      "id": "714",
      "question": "Lambda is a statement. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " lambda is an anonymous function in Python. Hence this statement is false.  \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "715",
      "question": "Lambda contains block of statements. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": "none explanation"
    },
    {
      "id": "716",
      "question": "What will be the output of the following Python code? \n def  f ( x ,  y ,  z ) :  return  x + y + z f ( 2 ,   30 ,   400 ) \n ",
      "answerA": " 432 \n",
      "answerB": " 24000 \n",
      "answerC": " 430 \n",
      "answerD": " No output ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": "none explanation"
    },
    {
      "id": "717",
      "question": "What will be the output of the following Python code? \n def  writer ( ) : \ttitle  =   'Sir' \tname  =   ( lambda  x:title +  ' '  + x ) \t return  name \u00a0 who  =  writer ( ) who ( 'Arthur' ) \n ",
      "answerA": " Arthur Sir \n",
      "answerB": " Sir Arthur \n",
      "answerC": " Arthur \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": "none explanation"
    },
    {
      "id": "718",
      "question": "What will be the output of the following Python code? \n L  =   [ lambda  x: x **  2 ,           lambda  x: x **  3 ,           lambda  x: x **  4 ] \u00a0 for  f  in  L: \t print ( f ( 3 ) ) \n ",
      "answerA": "  \n 27\r\n81\r\n343 \n ",
      "answerB": "  \n 6\r\n9\r\n12 \n ",
      "answerC": "  \n 9\r\n27\r\n81 \n ",
      "answerD": " None of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": "none explanation"
    },
    {
      "id": "719",
      "question": "What will be the output of the following Python code? \n min   =   ( lambda  x ,  y: x  if  x  <  y  else  y )   min ( 101 * 99 ,   102 * 98 ) \n ",
      "answerA": " 9997 \n",
      "answerB": " 9999 \n",
      "answerC": " 9996 \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": " c \n",
      "trackName": "Computer Science",
      "explanation": "none explanation"
    },
    {
      "id": "720",
      "question": "What is a variable defined outside a function referred to as? \n",
      "answerA": "\tA static variable \n",
      "answerB": "\tA global variable \n",
      "answerC": "\tA local variable \n",
      "answerD": "\tAn automatic variable ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The value of a variable defined outside all function definitions is referred to as a global variable and can be used by multiple functions of the program. \n \n \n \n \n \n "
    },
    {
      "id": "721",
      "question": "What is a variable defined inside a function referred to as? \n",
      "answerA": "\tA global variable \n",
      "answerB": "\tA volatile variable \n",
      "answerC": "\tA local variable \n",
      "answerD": "\tAn automatic variable ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The variable inside a function is called as local variable and the variable definition is confined only to that function. \n "
    },
    {
      "id": "722",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n i = 0 \n def  change ( i ) :\n   i = i+ 1 \n    return  i\nchange ( 1 ) \n print ( i ) \n ",
      "answerA": "\t1 \n",
      "answerB": "\tNothing is displayed \n",
      "answerC": "\t0 \n",
      "answerD": "\tAn exception is thrown ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Any change made in to an immutable data type in a function isn\u2019t reflected outside the function. \n \n \n    \nSubscribe Now:  Python Newsletter  |  Important Subjects Newsletters \n \n \n \n \n \n \n \n "
    },
    {
      "id": "723",
      "question": "What will be the output of the following Python code? \n def  a ( b ) :\n    b  =  b +  [ 5 ] \n\u00a0\nc  =   [ 1 ,   2 ,   3 ,   4 ] \na ( c ) \n print ( len ( c ) ) \n ",
      "answerA": "\t4 \n",
      "answerB": "\t5 \n",
      "answerC": "\t1 \n",
      "answerD": "\tAn exception is thrown ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Since a list is mutable, any change made in the list in the function is reflected outside the function. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "724",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n a = 10 \nb = 20 \n def  change ( ) :\n     global  b\n    a = 45 \n    b = 56 \nchange ( ) \n print ( a ) \n print ( b ) \n ",
      "answerA": "  \n 10\r\n56 \n ",
      "answerB": "  \n 45\r\n56 \n ",
      "answerC": "  \n 10\r\n20 \n ",
      "answerD": " Syntax Error ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The statement \u201cglobal b\u201d allows the global value of b to be accessed and changed. Whereas the variable a is local and hence the change isn\u2019t reflected outside the function. \n "
    },
    {
      "id": "725",
      "question": " What will be the output of the following Python code? \n def  change ( i  =   1 ,  j  =   2 ) :\n    i  =  i + j\n    j  =  j +  1 \n     print ( i ,  j ) \nchange ( j  =   1 ,  i  =   2 ) \n ",
      "answerA": "\tAn exception is thrown because of conflicting values \n",
      "answerB": "\t1 2 \n",
      "answerC": "\t3 3 \n",
      "answerD": "\t3 2 ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The values given during function call is taken into consideration, that is, i=2 and j="
    },
    {
      "id": "726",
      "question": "What will be the output of the following Python code? \n def  change ( one ,  *two ) :\n    print ( type ( two ) ) \nchange ( 1 , 2 , 3 , 4 ) \n ",
      "answerA": "\tInteger \n",
      "answerB": "\tTuple \n",
      "answerC": "\tDictionary \n",
      "answerD": "\tAn exception is thrown ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The parameter two is a variable parameter and consists of (2,3,4). Hence the data type is tuple. \n "
    },
    {
      "id": "727",
      "question": " If a function doesn\u2019t have a return statement, which of the following does the function return? \n",
      "answerA": "\tint \n",
      "answerB": "\tnull \n",
      "answerC": "\tNone \n",
      "answerD": "\tAn exception is thrown without the return statement ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": "none explanation"
    },
    {
      "id": "728",
      "question": " What will be the output of the following Python code? \n def  display ( b ,  n ) :\n     while  n  >   0 :\n         print ( b , end = \"\" ) \n        n = n- 1 \ndisplay ( 'z' , 3 ) \n ",
      "answerA": "\tzzz \n",
      "answerB": "\tzz \n",
      "answerC": "\tAn exception is executed \n",
      "answerD": "\tInfinite loop ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The loop runs three times and \u2018z\u2019 is printed each time. \n "
    },
    {
      "id": "729",
      "question": "What will be the output of the following Python code? \n def  find ( a ,  **b ) :\n    print ( type ( b ) ) \nfind ( 'letters' , A = '1' , B = '2' ) \n ",
      "answerA": "\tString \n",
      "answerB": "\tTuple \n",
      "answerC": "\tDictionary \n",
      "answerD": "\tAn exception is thrown ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " b combines the remaining parameters into a dictionary. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 Function \u2013 3 \u00bb  Next - Python Multiple Choice Questions \u2013 Argument Parsing   Related Posts: Apply for  Python Internship \n Check  Python Books \n Apply for  Programming Internship \n Check  Information Technology Books \n Practice  Programming MCQs \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Multiple Choice Questions \u2013 Function  \n Python Questions and Answers \u2013 Function \u2013 2  \n Python Questions and Answers \u2013 Global vs Local Variables \u2013 1  \n Python Questions and Answers \u2013 Function \u2013 3  \n Python Questions and Answers \u2013 Global vs Local Variables \u2013 2  \n Python Program to Implement Stack  \n Python Program to Reverse a Stack using Recursion  \n Python Program to Implement Stack using Linked List  \n Python Program to Implement Stack using Two Queues  \n Python Questions and Answers \u2013 Classes and Objects \u2013 1  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python Programs on Graphs Python MCQ Questions Python Programs on Trees Searching and Sorting in Python Linked List Programs in Python Popular Pages: Python Programming Examples Event Handling in Java with Examples PHP MCQ Questions Object Oriented Programming MCQ Questions C# Programs on Functions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python Programs on Graphs Python MCQ Questions Python Programs on Trees Searching and Sorting in Python Linked List Programs in Python \n   \n \n \n \n \n \n \n   Popular Pages Python Programming Examples Event Handling in Java with Examples PHP MCQ Questions Object Oriented Programming MCQ Questions C# Programs on Functions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.524 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-04 00:31:44  \n  Compression = gzip "
    },
    {
      "id": "730",
      "question": "What is the type of each element in sys.argv? \n",
      "answerA": " set \n",
      "answerB": " list \n",
      "answerC": " tuple \n",
      "answerD": " string ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " It is a list of strings. \n \n \n \n \n \n "
    },
    {
      "id": "731",
      "question": "What is the length of sys.argv? \n",
      "answerA": " number of arguments \n",
      "answerB": " number of arguments + 1 \n",
      "answerC": " number of arguments \u2013 1 \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The first argument is the name of the program itself. Therefore the length of sys.argv is one more than the number arguments. \n "
    },
    {
      "id": "732",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n def  foo ( k ) :\n    k [ 0 ]   =   1 \nq  =   [ 0 ] \nfoo ( q ) \n print ( q ) \n ",
      "answerA": " [0]  \n",
      "answerB": " [1]  \n",
      "answerC": " [1, 0]  \n",
      "answerD": " [0, 1]  ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Lists are passed by reference. \n \n \n    \nNote: Join free Sanfoundry classes at  Telegram  or  Youtube \n \n \n \n \n \n \n \n "
    },
    {
      "id": "733",
      "question": "How are keyword arguments specified in the function heading? \n",
      "answerA": " one-star followed by a valid identifier \n",
      "answerB": " one underscore followed by a valid identifier \n",
      "answerC": " two stars followed by a valid identifier \n",
      "answerD": " two underscores followed by a valid identifier ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Refer documentation. \n "
    },
    {
      "id": "734",
      "question": "How many keyword arguments can be passed to a function in a single function call? \n",
      "answerA": " zero \n",
      "answerB": " one \n",
      "answerC": " zero or more \n",
      "answerD": " one or more ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Zero keyword arguments may be passed if all the arguments have default values. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "735",
      "question": "What will be the output of the following Python code? \n def  foo ( fname ,  val ) :\n     print ( fname ( val ) ) \nfoo ( max ,   [ 1 ,   2 ,   3 ] ) \nfoo ( min ,   [ 1 ,   2 ,   3 ] ) \n ",
      "answerA": " 3 1 \n",
      "answerB": " 1 3 \n",
      "answerC": " error \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " It is possible to pass function names as arguments to other functions. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "736",
      "question": "What will be the output of the following Python code? \n def  foo ( ) :\n     return  total +  1 \ntotal  =   0 \n print ( foo ( ) ) \n ",
      "answerA": " 0 \n",
      "answerB": " 1 \n",
      "answerC": " error \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " It is possible to read the value of a global variable directly. \n "
    },
    {
      "id": "737",
      "question": "What will be the output of the following Python code? \n def  foo ( ) :\n    total + =   1 \n     return  total\ntotal  =   0 \n print ( foo ( ) ) \n ",
      "answerA": " 0 \n",
      "answerB": " 1 \n",
      "answerC": " error \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " It is not possible to change the value of a global variable without explicitly specifying it. \n "
    },
    {
      "id": "738",
      "question": "What will be the output of the following Python code? \n def  foo ( x ) :\n    x  =   [ 'def' ,   'abc' ] \n     return   id ( x ) \nq  =   [ 'abc' ,   'def' ] \n print ( id ( q )   ==  foo ( q ) ) \n ",
      "answerA": " True \n",
      "answerB": " False \nc) None \nd) Error ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " A new object is created in the function. \n "
    },
    {
      "id": "739",
      "question": "What will be the output of the following Python code? \n def  foo ( i ,  x = [ ] ) :\n    x. append ( i ) \n     return  x\n for  i  in   range ( 3 ) :\n     print ( foo ( i ) ) \n ",
      "answerA": " [0] [1] [2]  \n",
      "answerB": " [0] [0, 1] [0, 1, 2]  \n",
      "answerC": " [1] [2] [3]  \n",
      "answerD": " [1] [1, 2] [1, 2, 3]  ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " When a list is a default value, the same list will be reused. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all Puzzles on Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 Function \u2013 4 \u00bb  Next - Python Questions and Answers \u2013 Argument Parsing 2   Related Posts: Check  Python Books \n Apply for  Programming Internship \n Check  Information Technology Books \n Apply for  Python Internship \n Practice  Programming MCQs \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 Argument Parsing 2  \n Python Multiple Choice Questions \u2013 Built-in Functions  \n Python Multiple Choice Questions \u2013 Function  \n Python Multiple Choice Questions \u2013 Mapping Functions  \n Python Question and Answers \u2013 Built-in Functions \u2013 3  \n Python Multiple Choice Questions \u2013 Lists  \n Python Multiple Choice Questions \u2013 Math  \n Python Multiple Choice Questions \u2013 Sets  \n C Program to Generate Fibonacci Series using Command Line Argument  \n Python Program to Find the Length of a List using Recursion  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python MCQ Questions Linked List Programs in Python Searching and Sorting in Python C++ Programming MCQ Questions JavaScript MCQ Questions Popular Pages: Python Programs on Trees C Programming MCQ Questions Visual Basic MCQ Questions Java Programming MCQ Questions Python Programs on Graphs    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python MCQ Questions Linked List Programs in Python Searching and Sorting in Python C++ Programming MCQ Questions JavaScript MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Python Programs on Trees C Programming MCQ Questions Visual Basic MCQ Questions Java Programming MCQ Questions Python Programs on Graphs \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.398 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-04 01:07:55  \n  Compression = gzip "
    },
    {
      "id": "740",
      "question": "What will be the output of the following Python code? \n \n \n \n \n \n def  foo ( k ) :\n    k  =   [ 1 ] \nq  =   [ 0 ] \nfoo ( q ) \n print ( q ) \n ",
      "answerA": " [0]  \n",
      "answerB": " [1]  \n",
      "answerC": " [1, 0]  \n",
      "answerD": " [0, 1]  ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " A new list object is created in the function and the reference is lost. This can be checked by comparing the id of k before and after k = [1]. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "741",
      "question": "How are variable length arguments specified in the function heading? \n",
      "answerA": " one star followed by a valid identifier \n",
      "answerB": " one underscore followed by a valid identifier \n",
      "answerC": " two stars followed by a valid identifier \n",
      "answerD": " two underscores followed by a valid identifier ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Refer documentation. \n "
    },
    {
      "id": "742",
      "question": "Which module in the python standard library parses options received from the command line? \n",
      "answerA": " getopt \n",
      "answerB": " os \n",
      "answerC": " getarg \n",
      "answerD": " main ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " getopt parses options received from the command line. \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n "
    },
    {
      "id": "743",
      "question": "What is the type of sys.argv? \n",
      "answerA": " set \n",
      "answerB": " list \n",
      "answerC": " tuple \n",
      "answerD": " string ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " It is a list of elements. \n "
    },
    {
      "id": "744",
      "question": "What is the value stored in sys.argv[0]? \n",
      "answerA": " null \n",
      "answerB": " you cannot access it \n",
      "answerC": " the program\u2019s name \n",
      "answerD": " the first argument ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Refer documentation. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "745",
      "question": "How are default arguments specified in the function heading? \n",
      "answerA": " identifier followed by an equal to sign and the default value \n",
      "answerB": " identifier followed by the default value within backticks (\u201c) \n",
      "answerC": " identifier followed by the default value within square brackets ([]) \n",
      "answerD": " identifier ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Refer documentation. \n "
    },
    {
      "id": "746",
      "question": "How are required arguments specified in the function heading? \n",
      "answerA": " identifier followed by an equal to sign and the default value \n",
      "answerB": " identifier followed by the default value within backticks (\u201c) \n",
      "answerC": " identifier followed by the default value within square brackets ([]) \n",
      "answerD": " identifier ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Refer documentation. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "747",
      "question": "What will be the output of the following Python code? \n def  foo ( x ) :\n    x [ 0 ]   =   [ 'def' ] \n    x [ 1 ]   =   [ 'abc' ] \n     return   id ( x ) \nq  =   [ 'abc' ,   'def' ] \n print ( id ( q )   ==  foo ( q ) ) \n ",
      "answerA": " True \n",
      "answerB": " False \nc) None \nd) Error ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The same object is modified in the function. \n "
    },
    {
      "id": "748",
      "question": "Where are the arguments received from the command line stored? \n",
      "answerA": " sys.argv \n",
      "answerB": " os.argv \n",
      "answerC": " argv \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Refer documentation. \n "
    },
    {
      "id": "749",
      "question": "What will be the output of the following Python code? \n def  foo ( i ,  x = [ ] ) :\n    x. append ( x. append ( i ) ) \n     return  x\n for  i  in   range ( 3 ) :\n    y  =  foo ( i ) \n print ( y ) \n ",
      "answerA": " [[[0]], [[[0]], [1]], [[[0]], [[[0]], [1]], [2]]]  \n",
      "answerB": " [[0], [[0], 1], [[0], [[0], 1], 2]]  \n",
      "answerC": " [0, None, 1, None, 2, None]  \n",
      "answerD": " [[[0]], [[[0]], [1]], [[[0]], [[[0]], [1]], [2]]]  ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": "none explanation"
    },
    {
      "id": "750",
      "question": "What will be the output of the following Python code? \n \n \n \n \n \n def  f1 ( ) :\n    x = 15 \n     print ( x ) \nx = 12 \nf1 ( ) \n ",
      "answerA": " Error \n",
      "answerB": " 12 \n",
      "answerC": " 15 \n",
      "answerD": " 1512 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " In the code shown above, x=15 is a local variable whereas x=12 is a global variable. Preference is given to local variable over global variable. Hence the output of the code shown above is "
    },
    {
      "id": "751",
      "question": "What will be the output of the following Python code? \n def  f1 ( ) :\n    x = 100 \n     print ( x ) \nx = + 1 \nf1 ( ) \n ",
      "answerA": " Error \n",
      "answerB": " 100 \n",
      "answerC": " 101 \n",
      "answerD": " 99 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The variable x is a local variable. It is first printed and then modified. Hence the output of this code is "
    },
    {
      "id": "752",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n def  san ( x ) :\n     print ( x+ 1 ) \nx = - 2 \nx = 4 \nsan ( 12 ) \n ",
      "answerA": " 13 \n",
      "answerB": " 10 \n",
      "answerC": " 2 \n",
      "answerD": " 5 ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The value passed to the function san() is "
    },
    {
      "id": "753",
      "question": "What will be the output of the following Python code? \n def  f1 ( ) :\n     global  x\n    x+ = 1 \n     print ( x ) \nx = 12 \n print ( \"x\" ) \n ",
      "answerA": " Error \n",
      "answerB": " 13 \n",
      "answerC": "  \n 13\r\nx \n ",
      "answerD": " x ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " In the code shown above, the variable \u2018x\u2019 is declared as global within the function. Hence the output is \u2018x\u2019. Had the variable \u2018x\u2019 been a local variable, the output would have been: \n13 \nx \n "
    },
    {
      "id": "754",
      "question": "What will be the output of the following Python code? \n def  f1 ( x ) :\n     global  x\n    x+ = 1 \n     print ( x ) \nf1 ( 15 ) \n print ( \"hello\" ) \n ",
      "answerA": " error \n",
      "answerB": " hello \n",
      "answerC": " 16 \n",
      "answerD": "  ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above will result in an error because \u2018x\u2019 is a global variable. Had it been a local variable, the output would be: 16 \n    hello \n\u00a0 \u00a0 \n "
    },
    {
      "id": "755",
      "question": "What will be the output of the following Python code? \n x = 12 \n def  f1 ( a , b = x ) :\n     print ( a , b ) \nx = 15 \nf1 ( 4 ) \n ",
      "answerA": " Error \n",
      "answerB": " 12 4 \n",
      "answerC": " 4 12 \n",
      "answerD": " 4 15 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " At the time of leader processing, the value of \u2018x\u2019 is "
    },
    {
      "id": "756",
      "question": "What will be the output of the following Python code? \n def  f ( ) :\n     global  a\n     print ( a ) \n    a  =   \"hello\" \n     print ( a )  \na  =   \"world\"  \nf ( ) \n print ( a ) \n ",
      "answerA": "  \n     hello\r\n    hello \r\n    world \n ",
      "answerB": "  \n     world \r\n    hello\r\n    hello \n ",
      "answerC": "  \n     hello\r\n    world\r\n    world \n ",
      "answerD": "  ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Since the variable \u2018a\u2019 has been explicitly specified as a global variable, the value of a passed to the function is \u2018world\u2019. Hence the output of this code is: \nworld \nhello \nhello \n\u00a0 \u00a0 \n "
    },
    {
      "id": "757",
      "question": "What will be the output of the following Python code? \n def  f1 ( a , b = [ ] ) :\n    b. append ( a ) \n     return  b\n print ( f1 ( 2 , [ 3 , 4 ] ) ) \n ",
      "answerA": " [3,2,4] \n",
      "answerB": " [2,3,4] \n",
      "answerC": " Error \n",
      "answerD": " [3,4,2] ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " In the code shown above, the integer 2 is appended to the list [3,4]. Hence the output of the code is [3,4,2]. Both the variables a and b are local variables. \n "
    },
    {
      "id": "758",
      "question": "What will be the output of the following Python code? \n def  f ( p ,  q ,  r ) :\n     global  s\n    p  =   10 \n    q  =   20 \n    r  =   30 \n    s  =   40 \n     print ( p , q , r , s ) \np , q , r , s  =   1 , 2 , 3 , 4 \nf ( 5 , 10 , 15 ) \n ",
      "answerA": " 1 2 3 4 \n",
      "answerB": " 5 10 15 4 \n",
      "answerC": " 10 20 30 40 \n",
      "answerD": " 5 10 15 40 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The above code shows a combination of local and global variables. The output of this code is: 10 20 30 40 \n "
    },
    {
      "id": "759",
      "question": "What will be the output of the following Python code? \n def  f ( x ) :\n     print ( \"outer\" ) \n     def  f1 ( a ) :\n         print ( \"inner\" ) \n         print ( a , x ) \nf ( 3 ) \nf1 ( 1 ) \n ",
      "answerA": "  \n outer\r\nerror \n ",
      "answerB": "  \n inner \r\nerror  \n ",
      "answerC": "  \n outer\r\ninner \n ",
      "answerD": " error ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The error will be caused due to the statement f1(1) because the function is nested. If f1(1) had been called inside the function, the output would have been different and there would be no error. \n "
    },
    {
      "id": "760",
      "question": "What will be the output of the following Python code? \n x  =   5  \n def  f1 ( ) :\n     global  x\n    x  =   4 \n def  f2 ( a , b ) :\n     global  x\n     return  a+b+x\nf1 ( ) \ntotal  =  f2 ( 1 , 2 ) \n print ( total ) \n ",
      "answerA": " Error \n",
      "answerB": " 7 \n",
      "answerC": " 8 \n",
      "answerD": " 15 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " In the code shown above, the variable \u2018x\u2019 has been declared as a global variable under both the functions f1 and f"
    },
    {
      "id": "761",
      "question": "What will be the output of the following Python code? \n x = 100 \n def  f1 ( ) :\n     global  x\n    x = 90 \n def  f2 ( ) :\n     global  x\n    x = 80 \n print ( x ) \n ",
      "answerA": " 100 \n",
      "answerB": " 90 \n",
      "answerC": " 80 \n",
      "answerD": " Error ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The output of the code shown above is "
    },
    {
      "id": "762",
      "question": "Read the following Python code carefully and point out the global variables? \n y ,  z  =   1 ,   2 \n def  f ( ) :\n     global  x\n    x  =  y+z \n ",
      "answerA": " x \n",
      "answerB": " y and z \n",
      "answerC": " x, y and z \n",
      "answerD": " Neither x, nor y, nor z ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " In the code shown above, x, y and z are global variables inside the function f. y and z are global because they are not assigned in the function. x is a global variable because it is explicitly specified so in the code. Hence, x, y and z are global variables. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 Argument Parsing 2 \u00bb  Next - Python Questions and Answers \u2013 Global vs Local Variables \u2013 2   Related Posts: Check  Information Technology Books \n Practice  Programming MCQs \n Check  Python Books \n Apply for  Python Internship \n Apply for  Programming Internship \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 Global vs Local Variables \u2013 2  \n Python Questions and Answers \u2013 Function \u2013 4  \n Python Program to Implement Stack  \n Python Questions and Answers \u2013 Decorators  \n Python Program to Implement Stack using Linked List  \n Python Program to Reverse a Stack using Recursion  \n Python Questions and Answers \u2013 Lists \u2013 6  \n Python Questions and Answers \u2013 While and For Loops \u2013 2  \n Python Questions and Answers \u2013 While and For Loops \u2013 6  \n Python Questions and Answers \u2013 While and For Loops \u2013 4  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python Programs on Trees Linked List Programs in Python Python MCQ Questions Python Programs on Graphs Searching and Sorting in Python Popular Pages: Python Programming Examples C# Programs on Functions C++ Algorithm Library Java Array Programs PHP MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python Programs on Trees Linked List Programs in Python Python MCQ Questions Python Programs on Graphs Searching and Sorting in Python \n   \n \n \n \n \n \n \n   Popular Pages Python Programming Examples C# Programs on Functions C++ Algorithm Library Java Array Programs PHP MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.944 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 01:39:01  \n  Compression = gzip "
    },
    {
      "id": "763",
      "question": "Which of the following data structures is returned by the functions globals() and locals()? \n",
      "answerA": " list \n",
      "answerB": " set \n",
      "answerC": " dictionary \n",
      "answerD": " tuple ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Both the functions, that is, globals() and locals() return value of the data structure dictionary. \n \n \n \n \n \n "
    },
    {
      "id": "764",
      "question": "What will be the output of the following Python code? \n x = 1 \n def  cg ( ) :\n\t global  x\n\tx = x+ 1 \t\ncg ( ) \nx \n ",
      "answerA": " 2 \n",
      "answerB": " 1 \n",
      "answerC": " 0 \n",
      "answerD": " Error ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Since \u2018x\u2019 has been declared a global variable, it can be modified very easily within the function. Hence the output is "
    },
    {
      "id": "765",
      "question": "On assigning a value to a variable inside a function, it automatically becomes a global variable. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " On assigning a value to a variable inside a function, t automatically becomes a local variable. Hence the above statement is false. \n \n \n    \nSubscribe Now:  Python Newsletter  |  Important Subjects Newsletters \n \n \n \n \n \n \n \n "
    },
    {
      "id": "766",
      "question": "What will be the output of the following Python code? \n e = \"butter\" \n def  f ( a ) :  print ( a ) +e\nf ( \"bitter\" ) \n ",
      "answerA": " error \n",
      "answerB": "  \n     butter\r\n    error \n \n advertisement \n \n \n \n \n ",
      "answerC": "  \n     bitter\r\n    error \n \n advertisement \n \n \n \n \n ",
      "answerD": " bitterbutter ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The output of the code shown above will be \u2018bitter\u2019, followed by an error. The error is because the operand \u2018+\u2019 is unsupported on the types used above. \n "
    },
    {
      "id": "767",
      "question": "What happens if a local variable exists with the same name as the global variable you want to access? \n",
      "answerA": " Error \n",
      "answerB": " The local variable is shadowed \n",
      "answerC": " Undefined behavior \n",
      "answerD": " The global variable is shadowed ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " If a local variable exists with the same name as the local variable that you want to access, then the global variable is shadowed. That is, preference is given to the local variable. \n "
    },
    {
      "id": "768",
      "question": "What will be the output of the following Python code? \n a = 10 \n globals ( ) [ 'a' ] = 25 \n print ( a ) \n ",
      "answerA": " 10 \n",
      "answerB": " 25 \n",
      "answerC": " Junk value \n",
      "answerD": " Error ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " In the code shown above, the value of \u2018a\u2019 can be changed by using globals() function. The dictionary returned is accessed using key of the variable \u2018a\u2019 and modified to "
    },
    {
      "id": "769",
      "question": "What will be the output of the following Python code? \n def  f ( ) : x = 4 \nx = 1 \nf ( ) \nx \n ",
      "answerA": " Error \n",
      "answerB": " 4 \n",
      "answerC": " Junk value \n",
      "answerD": " 1 ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " In the code shown above, when we call the function f, a new namespace is created. The assignment x=4 is performed in the local namespace and does not affect the global namespace. Hence the output is "
    },
    {
      "id": "770",
      "question": "______________ returns a dictionary of the module namespace. \n________________ returns a dictionary of the current namespace. \n",
      "answerA": "  \n locals()\r\nglobals() \n ",
      "answerB": "  \n locals()\r\nlocals() \n ",
      "answerC": "  \n globals()\r\nlocals() \n ",
      "answerD": "  ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The function globals() returns a dictionary of the module namespace, whereas the function locals() returns a dictionary of the current namespace. \n\u00a0 \u00a0 \n   Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 Global vs Local Variables \u2013 1 \u00bb  Next - Python Questions and Answers \u2013 Recursion   Related Posts: Check  Python Books \n Apply for  Programming Internship \n Apply for  Python Internship \n Practice  Programming MCQs \n Check  Information Technology Books \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 Global vs Local Variables \u2013 1  \n Python Program to Concatenate Two Dictionaries  \n Python Program to Find the Sum of All the Items in a Dictionary  \n Python Program to Add a Key-Value Pair to the Dictionary  \n Python Questions and Answers \u2013 Dictionary \u2013 4  \n Python Questions and Answers \u2013 Dictionary \u2013 2  \n PHP Coding Questions and Answers \u2013 Variables \u2013 4  \n Python Questions and Answers \u2013 Function \u2013 4  \n Python Questions and Answers \u2013 Dictionary \u2013 3  \n Python Program to Multiply All the Items in a Dictionary  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python Programs on Graphs Python MCQ Questions Python Programs on Trees Searching and Sorting in Python Linked List Programs in Python Popular Pages: Python Programming Examples C++ Algorithm Library PHP MCQ Questions Data Science MCQ Questions C# Programs on Functions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python Programs on Graphs Python MCQ Questions Python Programs on Trees Searching and Sorting in Python Linked List Programs in Python \n   \n \n \n \n \n \n \n   Popular Pages Python Programming Examples C++ Algorithm Library PHP MCQ Questions Data Science MCQ Questions C# Programs on Functions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.466 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 01:22:37  \n  Compression = gzip "
    },
    {
      "id": "771",
      "question": "Which is the most appropriate definition for recursion? \n",
      "answerA": "\tA function that calls itself \n",
      "answerB": "\tA function execution instance that calls another execution instance of the same function \n",
      "answerC": "\tA class method that calls another class method \n",
      "answerD": "\tAn in-built method that is automatically called ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The appropriate definition for a recursive function is a function execution instance that calls another execution instance of the same function either directly or indirectly. \n \n \n \n \n \n "
    },
    {
      "id": "772",
      "question": "Only problems that are recursively defined can be solved using recursion. \n",
      "answerA": "\tTrue \n",
      "answerB": "\tFalse ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " There are many other problems can also be solved using recursion. \n "
    },
    {
      "id": "773",
      "question": "Which of these is false about recursion? \n",
      "answerA": "\tRecursive function can be replaced by a non-recursive function \n",
      "answerB": "\tRecursive functions usually take more memory space than non-recursive function \n",
      "answerC": "\tRecursive functions run faster than non-recursive function \n",
      "answerD": "\tRecursion makes programs easier to understand ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The speed of a program using recursion is slower than the speed of its non-recursive equivalent. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "774",
      "question": "Fill in the line of the following Python code for calculating the factorial of a number. \n def  fact ( num ) :\n     if  num  ==   0 : \n         return   1 \n     else :\n         return  _____________________ \n ",
      "answerA": "\tnum*fact(num-1) \n",
      "answerB": "\t(num-1)*(num-2) \n",
      "answerC": "\tnum*(num-1) \n",
      "answerD": "\tfact(num)*fact(num-1) ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Suppose n=5 then, 5*4*3*2*1 is returned which is the factorial of "
    },
    {
      "id": "775",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n def   test ( i , j ) :\n     if ( i == 0 ) :\n         return  j\n     else :\n         return   test ( i- 1 , i+j ) \n print ( test ( 4 , 7 ) ) \n ",
      "answerA": "\t13 \n",
      "answerB": "\t7 \n",
      "answerC": "\tInfinite loop \n",
      "answerD": "\t17 ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The test(i-1,i+j) part of the function keeps calling the function until the base condition of the function is satisfied. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "776",
      "question": " What will be the output of the following Python code? \n l = [ ] \n def  convert ( b ) :\n     if ( b == 0 ) :\n         return  l\n    dig = b% 2 \n    l. append ( dig ) \n    convert ( b// 2 ) \nconvert ( 6 ) \nl. reverse ( ) \n for  i  in  l:\n     print ( i , end = \"\" ) \n ",
      "answerA": "\t011 \n",
      "answerB": "\t110 \n",
      "answerC": "\t3 \n",
      "answerD": "\tInfinite loop ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The above code gives the binary equivalent of the number. \n "
    },
    {
      "id": "777",
      "question": "What is tail recursion? \n",
      "answerA": "\tA recursive function that has two base cases \n",
      "answerB": "\tA function where the recursive functions leads to an infinite loop \n",
      "answerC": "\tA recursive function where the function doesn\u2019t return anything and just prints the values \n",
      "answerD": "\tA function where the recursive call is the last thing executed by the function ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " A recursive function is tail recursive when recursive call is executed by the function in the last. \n "
    },
    {
      "id": "842",
      "question": "Which of the following numbers will not be a part of the output list of the following Python code? \n def  sf ( a ) :\n     return  a% 3 != 0   and  a% 5 != 0 \nm = filter ( sf ,   range ( 1 ,   31 ) ) \n print ( list ( m ) ) \n ",
      "answerA": " 1 \n",
      "answerB": " 29 \n",
      "answerC": " 6 \n",
      "answerD": " 10 ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The output list of the code shown above will not contain any element that is divisible by 3 or "
    },
    {
      "id": "778",
      "question": " Observe the following Python code? \n def  a ( n ) :\n     if  n  ==   0 :\n         return   0 \n     else :\n         return  n*a ( n -  1 ) \n def  b ( n ,  tot ) :\n     if  n  ==   0 :\n         return  tot\n     else :\n         return  b ( n- 2 ,  tot- 2 ) \n ",
      "answerA": "\tBoth a() and b() aren\u2019t tail recursive \n",
      "answerB": "\tBoth a() and b() are tail recursive \n",
      "answerC": "\tb() is tail recursive but a() isn\u2019t \n",
      "answerD": "\ta() is tail recursive but b() isn\u2019t ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " A recursive function is tail recursive when recursive call is executed by the function in the last. \n "
    },
    {
      "id": "779",
      "question": " Which of the following statements is false about recursion? \n",
      "answerA": "\tEvery recursive function must have a base case \n",
      "answerB": "\tInfinite recursion can occur if the base case isn\u2019t properly mentioned \n",
      "answerC": "\tA recursive function makes the code easier to understand \n",
      "answerD": "\tEvery recursive function must have a return value ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " A recursive function needn\u2019t have a return value.  \n "
    },
    {
      "id": "780",
      "question": "What will be the output of the following Python code? \n def  fun ( n ) :\n     if   ( n  >   100 ) :\n         return  n -  5 \n     return  fun ( fun ( n+ 11 ) ) ; \n\u00a0\n print ( fun ( 45 ) ) \n ",
      "answerA": "\t50 \n",
      "answerB": "\t100 \n",
      "answerC": "\t74 \n",
      "answerD": "\tInfinite loop ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The fun(fun(n+11)) part of the code keeps executing until the value of n becomes greater than 100, after which n-5 is returned and printed. \n "
    },
    {
      "id": "781",
      "question": "Recursion and iteration are the same programming approach. \n",
      "answerA": "\tTrue \n",
      "answerB": "\tFalse ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " In recursion, the function calls itself till the base condition is reached whereas iteration means repetition of process for example in for-loops. \n "
    },
    {
      "id": "782",
      "question": " What happens if the base condition isn\u2019t defined in recursive programs? \n",
      "answerA": "\tProgram gets into an infinite loop \n",
      "answerB": "\tProgram runs once \n",
      "answerC": "\tProgram runs n number of times where n is the argument given to the function \n",
      "answerD": "\tAn exception is thrown ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The program will run until the system gets out of memory. \n "
    },
    {
      "id": "783",
      "question": " Which of these is not true about recursion? \n",
      "answerA": "\tMaking the code look clean \n",
      "answerB": "\tA complex task can be broken into sub-problems \n",
      "answerC": "\tRecursive calls take up less memory \n",
      "answerD": "\tSequence generation is easier than a nested iteration ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Recursive calls take up a lot of memory and time as memory is taken up each time the function is called. \n "
    },
    {
      "id": "784",
      "question": " Which of these is not true about recursion? \n",
      "answerA": "\tIt\u2019s easier to code some real-world problems using recursion than non-recursive equivalent \n",
      "answerB": "\tRecursive functions are easy to debug \n",
      "answerC": "\tRecursive calls take up a lot of memory \n",
      "answerD": "\tPrograms using recursion take longer time than their non-recursive equivalent ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Recursive functions may be hard to debug as the logic behind recursion may be hard to follow. \n "
    },
    {
      "id": "785",
      "question": " What will be the output of the following Python code? \n def  a ( n ) :\n     if  n  ==   0 :\n         return   0 \n     elif  n  ==   1 :\n         return   1 \n     else :\n         return  a ( n- 1 ) +a ( n- 2 ) \n for  i  in   range ( 0 , 4 ) :\n     print ( a ( i ) , end = \" \" ) \n ",
      "answerA": "\t0 1 2 3 \n",
      "answerB": "\tAn exception is thrown \n",
      "answerC": "\t0 1 1 2 3 \n",
      "answerD": "\t0 1 1 2 ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The above piece of code prints the Fibonacci series. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 Global vs Local Variables \u2013 2 \u00bb  Next - Python Questions and Answers \u2013 Shallow copy vs Deep copy   Related Posts: Apply for  Python Internship \n Check  Python Books \n Apply for  Programming Internship \n Check  Information Technology Books \n Practice  Programming MCQs \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Program to Reverse a Stack using Recursion  \n Python Program to Find the Total Sum of a Nested List Using Recursion  \n Python Program to Flatten a Nested List using Recursion  \n Python Program to Find the GCD of Two Numbers using Recursion  \n Explain Recursion with Example in C  \n Python Program to Check whether a Number is Prime or Not using Recursion  \n Python Program to Find Product of Two Numbers using Recursion  \n Discrete Mathematics Questions and Answers \u2013 Recursion  \n Python Program to Check whether a String is Palindrome or not using Recursion  \n Python Program to Calculate the Power using Recursion  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: C Programs on Recursion Linked List Programs in Python Python Programs on Graphs Python Programs on Trees Searching and Sorting in Python Popular Pages: Python MCQ Questions Python Programming Examples Tree Programs in C++ C Programming Examples on Trees Tree Programs in Java    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics C Programs on Recursion Linked List Programs in Python Python Programs on Graphs Python Programs on Trees Searching and Sorting in Python \n   \n \n \n \n \n \n \n   Popular Pages Python MCQ Questions Python Programming Examples Tree Programs in C++ C Programming Examples on Trees Tree Programs in Java \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.444 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-04 00:08:53  \n  Compression = gzip "
    },
    {
      "id": "786",
      "question": "Which type of copy is shown in the following python code? \n \n \n \n \n \n l1 = [ [ 10 ,   20 ] ,   [ 30 ,   40 ] ,   [ 50 ,   60 ] ] \nls = list ( l1 ) \nls\n [ [ 10 ,   20 ] ,   [ 30 ,   40 ] ,   [ 50 ,   60 ] ] \n ",
      "answerA": " Shallow copy \n",
      "answerB": " Deep copy \n",
      "answerC": " memberwise \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above depicts shallow copy. For deep copy, the command given is: l2 = l1.copy(). \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "787",
      "question": "What will be the output of the following Python code? \n l = [ 2 ,   3 ,   [ 4 ,   5 ] ] \nl2 = l. copy ( ) \nl2 [ 0 ] = 88 \nl\nl2 \n ",
      "answerA": "  \n [88, 2, 3, [4, 5]]\r\n[88, 2, 3, [4, 5]] \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n ",
      "answerB": "  \n [2, 3, [4, 5]]\r\n[88, 3, [4, 5]] \n \n advertisement \n \n \n \n \n ",
      "answerC": "  \n [88, 2, 3, [4, 5]]\r\n[2, 3, [4, 5]] \n ",
      "answerD": "  ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above depicts deep copy. Deep copy is a process where the copying process takes place recursively. Hence the modification done on one list does not affect the other list. \n\u00a0 \u00a0 \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "788",
      "question": "In _______________ copy, the base address of the objects are copied. In _______________ copy, the base address of the objects are not copied. \n",
      "answerA": " deep. shallow \n",
      "answerB": " memberwise, shallow \n",
      "answerC": " shallow, deep \n",
      "answerD": " deep, memberwise ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " In shallow copy, the base address of the objects are copied. \nIn deep copy, the base address of the objects are not copied. \nNote that memberwise copy is another name for shallow copy. \n "
    },
    {
      "id": "789",
      "question": "The nested list undergoes shallow copy even when the list as a whole undergoes deep copy. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " A nested list undergoes shallow copy even when the list as a whole undergoes deep copy. Hence, this statement is true. \n "
    },
    {
      "id": "790",
      "question": "What will be the output of the following Python code and state the type of copy that is depicted? \n l1 = [ 2 ,   4 ,   6 ,   8 ] \nl2 = [ 1 ,   2 ,   3 ] \nl1 = l2\nl2 \n ",
      "answerA": " [2, 4, 6, 8], shallow copy \n",
      "answerB": " [2, 4, 6, 8], deep copy \n",
      "answerC": " [1, 2, 3], shallow copy \n",
      "answerD": " [1, 2, 3], deep copy ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above depicts shallow copy and the output of the code is: [1, 2, 3]. \n "
    },
    {
      "id": "791",
      "question": "copy ( ) \n id ( l1 ) == id ( l2 ) \n ",
      "answerA": " False, False \n",
      "answerB": " False, True \n",
      "answerC": " True, True \n",
      "answerD": " True, False ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The first code shown above represents shallow copy. Hence the output of the expression id(l1)==id(l2) is True. The second code depicts deep copy. Hence the output of the expression id(l1)==id(l2) in the second case is False. \n "
    },
    {
      "id": "792",
      "question": "What will be the output of the following Python code? \n l1 = [ 1 ,   2 ,   3 ,   [ 4 ] ] \nl2 = list ( l1 ) \n id ( l1 ) == id ( l2 ) \n ",
      "answerA": " True \n",
      "answerB": " False \nc) Error \nd) Address of l1 ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above shows a nested list. A nested list will undergo shallow copy when the list as a whole undergoes deep copy. Hence the output of this code is False. \n "
    },
    {
      "id": "793",
      "question": "What will be the output of the following Python code? \n l1 = [ 10 ,   20 ,   30 ,   [ 40 ] ] \nl2 = copy . deepcopy ( l1 ) \nl1 [ 3 ] [ 0 ] = 90 \nl1\nl2 \n ",
      "answerA": "  \n [10, 20, 30, [40]]\r\n[10, 20, 30, 90] \n ",
      "answerB": " Error \n",
      "answerC": "  \n [10, 20, 30 [90]]\r\n[10, 20, 30, [40]] \n ",
      "answerD": "  ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above depicts deep copy. Hence at the end of the code, l1=[10, 20, 30, [90]] and l2=[10, 20, 30, [40]]. \n\u00a0 \u00a0 \n "
    },
    {
      "id": "794",
      "question": "In ____________________ copy, the modification done on one list affects the other list. In ____________________ copy, the modification done on one list does not affect the other list. \n",
      "answerA": " shallow, deep \n",
      "answerB": " memberwise, shallow \n",
      "answerC": " deep, shallow \n",
      "answerD": " deep, memberwise ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " In shallow copy, the modification done on one list affects the other list. In deep copy, the modification done on one list does not affect the other list. \n "
    },
    {
      "id": "795",
      "question": "copy ( ) \nl2\nl1 \n ",
      "answerA": "  \n [1, 2, 3, (4)]\r\n[1, 2, 3, 4] \n ",
      "answerB": "  \n [1, 2, 3, 4]\r\n[1, 2, 3, (4)] \n ",
      "answerC": "  \n [1, 2, 3, 4]\r\n[1, 2, 3, 4] \n ",
      "answerD": "  ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " In the code shown above, the list l1 is enclosed in a tuple. When we print this list, it is printed as [1, 2, 3, 4]. Note the absence of the tuple. The code shown depicts deep copy. Hence the output of this program is: l1=[1, 2, 3, 4] and l2=[1, 2, 3, 4]. \n\u00a0 \u00a0 \n "
    },
    {
      "id": "796",
      "question": " What will be the output of the following Python code? \n def  check ( n ) :\n     if  n  <   2 :\n         return  n %  2   ==   0 \n     return  check ( n -  2 ) \n print ( check ( 11 ) ) \n ",
      "answerA": "\tFalse \n",
      "answerB": "\tTrue \n",
      "answerC": "\t1 \n",
      "answerD": "\tAn exception is thrown ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The above piece of code checks recursively whether a number is even or odd. \n "
    },
    {
      "id": "797",
      "question": " What is the base case in the Merge Sort algorithm when it is solved recursively? \n",
      "answerA": "\tn=0 \n",
      "answerB": "\tn=1 \n",
      "answerC": "\tA list of length one \n",
      "answerD": "\tAn empty list ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Merge Sort algorithm implements the recursive algorithm and when the recursive function receives a list of length 1 which is the base case, the list is returned. \n "
    },
    {
      "id": "798",
      "question": " What will be the output of the following Python code? \n a  =   [ 1 ,   2 ,   3 ,   4 ,   5 ] \nb  =   lambda  x:  ( b  ( x [ 1 : ] )  + x [ : 1 ]   if  x  else   [ ] )  \n print ( b  ( a ) ) \n ",
      "answerA": "\t1 2 3 4 5 \n",
      "answerB": "\t[5,4,3,2,1]  \n",
      "answerC": "\t[]  \n",
      "answerD": "\tError, lambda functions can\u2019t be called recursively ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The above piece of code appends the first element of the list to a reversed sublist and reverses the list using recursion. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 Recursion \u00bb  Next - Python Questions and Answers \u2013 Functional Programming Tools   Related Posts: Apply for  Python Internship \n Practice  Programming MCQs \n Check  Information Technology Books \n Check  Python Books \n Apply for  Programming Internship \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Soil Mechanics Questions and Answers \u2013 Drainage and Dewatering \u2013 Shallow and Deep Well System  \n Python Program to Copy One File to Another File  \n Python Program to Create a Mirror Copy of a Tree and Display using BFS Traversal  \n Python Questions and Answers \u2013 Lists \u2013 6  \n Python Questions and Answers \u2013 Pickle Module  \n Python Program to Implement Stack  \n Python Program to Reverse a Stack using Recursion  \n Python Questions and Answers \u2013 Global vs Local Variables \u2013 1  \n C Program to Copy One String to Another using Recursion  \n Python Questions and Answers \u2013 Decorators  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python Programs on Trees Python MCQ Questions Searching and Sorting in Python Linked List Programs in Python Python Programs on Graphs Popular Pages: Python Programming Examples C++ Algorithm Library C Programs on Recursion C Programs on File Handling Object Oriented Programming MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python Programs on Trees Python MCQ Questions Searching and Sorting in Python Linked List Programs in Python Python Programs on Graphs \n   \n \n \n \n \n \n \n   Popular Pages Python Programming Examples C++ Algorithm Library C Programs on Recursion C Programs on File Handling Object Oriented Programming MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.260 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-02 22:54:08  \n  Compression = gzip "
    },
    {
      "id": "799",
      "question": "What will be the output of the following Python code? \n \n \n \n \n \n x  =   [ [ 0 ] ,   [ 1 ] ] \n print ( ( ' ' . join ( list ( map ( str ,  x ) ) ) ) ) \n ",
      "answerA": " (\u2018[0] [1]\u2019,) \n",
      "answerB": " (\u201901\u2019,) \n",
      "answerC": " [0] [1]  \n",
      "answerD": " 01 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " (element) is the same as element. It is not a tuple with one item. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "800",
      "question": "What will be the output of the following Python code? \n x  =   [ [ 0 ] ,   [ 1 ] ] \n print ( ( ' ' . join ( list ( map ( str ,  x ) ) ) , ) ) \n ",
      "answerA": " (\u2018[0] [1]\u2019,) \n",
      "answerB": " (\u201901\u2019) \n",
      "answerC": " [0] [1]  \n",
      "answerD": " 01 ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " (element,) is not the same as element. It is a tuple with one item. \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n "
    },
    {
      "id": "801",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n x  =   [ 34 ,   56 ] \n print ( ( '' . join ( list ( map ( str ,  x ) ) ) , ) ) \n ",
      "answerA": " 3456 \n",
      "answerB": " (3456) \n",
      "answerC": " (\u20183456\u2019) \n",
      "answerD": " (\u20183456\u2019,) ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " We have created a tuple with one string in it. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "802",
      "question": "What will be the output of the following Python code? \n x  =   [ 34 ,   56 ] \n print ( ( '' . join ( list ( map ( str ,  x ) ) ) ) , ) \n ",
      "answerA": " 3456 \n",
      "answerB": " (3456) \n",
      "answerC": " (\u20183456\u2019) \n",
      "answerD": " (\u20183456\u2019,) ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " We have just created a string. \n "
    },
    {
      "id": "803",
      "question": "What will be the output of the following Python code? \n x  =   [ 34 ,   56 ] \n print ( len ( map ( str ,  x ) ) ) \n ",
      "answerA": " [34, 56]  \n",
      "answerB": " [\u201934\u2019, \u201956\u2019]  \n",
      "answerC": " 34 56 \n",
      "answerD": " error ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " TypeError, map has no len. \n "
    },
    {
      "id": "804",
      "question": "What will be the output of the following Python code? \n x  =   'abcd' \n print ( list ( map ( list ,  x ) ) ) \n ",
      "answerA": " [\u2018a\u2019, \u2018b\u2019, \u2018c\u2019, \u2018d\u2019]  \n",
      "answerB": " [\u2018abcd\u2019]  \n",
      "answerC": " [[\u2018a\u2019], [\u2018b\u2019], [\u2018c\u2019], [\u2018d\u2019]]  \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " list() is performed on each character in x. \n "
    },
    {
      "id": "805",
      "question": "What will be the output of the following Python code? \n x  =  abcd\n print ( list ( map ( list ,  x ) ) ) \n ",
      "answerA": " [\u2018a\u2019, \u2018b\u2019, \u2018c\u2019, \u2018d\u2019]  \n",
      "answerB": " [\u2018abcd\u2019]  \n",
      "answerC": " [[\u2018a\u2019], [\u2018b\u2019], [\u2018c\u2019], [\u2018d\u2019]]  \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " NameError, we have not defined abcd. \n "
    },
    {
      "id": "806",
      "question": "What will be the output of the following Python code? \n x  =   1234 \n print ( list ( map ( list ,  x ) ) ) \n ",
      "answerA": " [1, 2, 3, 4]  \n",
      "answerB": " [1234]  \n",
      "answerC": " [[1], [2], [3], [4]]  \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " TypeError, int is not iterable. \n "
    },
    {
      "id": "807",
      "question": "What will be the output of the following Python code? \n x  =   1234 \n print ( list ( map ( list ,   [ x ] ) ) ) \n ",
      "answerA": " [1, 2, 3, 4]  \n",
      "answerB": " [1234]  \n",
      "answerC": " [[1], [2], [3], [4]]  \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " TypeError, int is not iterable. \n "
    },
    {
      "id": "808",
      "question": "What will be the output of the following Python code? \n x  =   'abcd' \n print ( list ( map ( [ ] ,  x ) ) ) \n ",
      "answerA": " [\u2018a\u2019, \u2018b\u2019, \u2018c\u2019, \u2018d\u2019]  \n",
      "answerB": " [\u2018abcd\u2019]  \n",
      "answerC": " [[\u2018a\u2019], [\u2018b\u2019], [\u2018c\u2019], [\u2018d\u2019]]  \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " TypeError, list object is not callable. \n "
    },
    {
      "id": "809",
      "question": " Is Python code compiled or interpreted? \n",
      "answerA": "\tPython code is only compiled \n",
      "answerB": "\tPython code is both compiled and interpreted \n",
      "answerC": "\tPython code is only interpreted \n",
      "answerD": "\tPython code is neither compiled nor interpreted ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Many languages have been implemented using both compilers and interpreters, including C, Pascal, and Python. \n "
    },
    {
      "id": "810",
      "question": "Which of these is the definition for packages in Python? \n",
      "answerA": "\tA folder of python modules \n",
      "answerB": "\tA set of programs making use of Python modules \n",
      "answerC": "\tA set of main modules \n",
      "answerD": "\tA number of files containing Python definitions and statements ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " A folder of python programs is called as a package of modules. \n "
    },
    {
      "id": "811",
      "question": "Which of these is false about a package? \n",
      "answerA": "\tA package can have subfolders and modules \n",
      "answerB": "\tEach import package need not introduce a namespace \n",
      "answerC": "\timport folder.subfolder.mod1 imports packages \n",
      "answerD": "\tfrom folder.subfolder.mod1 import objects imports packages ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Packages provide a way of structuring Python namespace. Each import package introduces a namespace. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all interview questions on Python for freshers,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 Mapping Functions \u2013 2 \u00bb  Next - Python Questions and Answers \u2013 Python Modules   Related Posts: Apply for  Python Internship \n Apply for  Programming Internship \n Check  Information Technology Books \n Check  Python Books \n Practice  Programming MCQs \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 Mapping Functions \u2013 2  \n Python Multiple Choice Questions \u2013 Mapping Functions  \n Python Question and Answers \u2013 Built-in Functions \u2013 3  \n Python Questions and Answers \u2013 Lists \u2013 7  \n Python Questions and Answers \u2013 Lists \u2013 6  \n Python Questions and Answers \u2013 While and For Loops \u2013 5  \n Python Program to Implement Stack  \n Python Question and Answers \u2013 Sys Module  \n Python Program to Implement Stack using Linked List  \n Python Questions and Answers \u2013 Functional Programming Tools  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Linked List Programs in Python Searching and Sorting in Python Python Programs on Trees Python MCQ Questions Python Programs on Graphs Popular Pages: Python Programming Examples C# Programs on Functions C Programs on Recursion C++ Algorithm Library Linked List Programs in C    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Linked List Programs in Python Searching and Sorting in Python Python Programs on Trees Python MCQ Questions Python Programs on Graphs \n   \n \n \n \n \n \n \n   Popular Pages Python Programming Examples C# Programs on Functions C Programs on Recursion C++ Algorithm Library Linked List Programs in C \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.283 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 01:22:37  \n  Compression = gzip "
    },
    {
      "id": "812",
      "question": "What will be the output of the following Python code? \n \n \n \n \n \n x  =   [ 'ab' ,   'cd' ] \n print ( len ( list ( map ( list ,  x ) ) ) ) ) ) \n ",
      "answerA": " 2 \n",
      "answerB": " 4 \n",
      "answerC": " error \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " SyntaxError, unbalanced parenthesis. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "813",
      "question": "What will be the output of the following Python code? \n x  =   [ 'ab' ,   'cd' ] \n print ( list ( map ( list ,  x ) ) ) \n ",
      "answerA": " [\u2018a\u2019, \u2018b\u2019, \u2018c\u2019, \u2018d\u2019]  \n",
      "answerB": " [[\u2018ab\u2019], [\u2018cd\u2019]]  \n",
      "answerC": " [[\u2018a\u2019, \u2018b\u2019], [\u2018c\u2019, \u2018d\u2019]]  \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Each element of x is converted into a list. \n \n \n    \nNote: Join free Sanfoundry classes at  Telegram  or  Youtube \n \n \n \n \n \n \n \n "
    },
    {
      "id": "814",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n x  =   [ 12 ,   34 ] \n print ( len ( list ( map ( len ,  x ) ) ) ) \n ",
      "answerA": " 2 \n",
      "answerB": " 1 \n",
      "answerC": " error \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " TypeError, int has no len(). \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "815",
      "question": "What will be the output of the following Python code? \n x  =   [ 12 ,   34 ] \n print ( len ( list ( map ( int ,  x ) ) ) ) \n ",
      "answerA": " 2 \n",
      "answerB": " 1 \n",
      "answerC": " error \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " list(map()) returns a list of two items in this example. \n "
    },
    {
      "id": "816",
      "question": "What will be the output of the following Python code? \n x  =   [ 12 ,   34 ] \n print ( len ( '' . join ( list ( map ( int ,  x ) ) ) ) ) \n ",
      "answerA": " 4 \n",
      "answerB": " 2 \n",
      "answerC": " error \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Cannot perform join on a list of ints. \n "
    },
    {
      "id": "817",
      "question": "What will be the output of the following Python code? \n x  =   [ 12 ,   34 ] \n print ( len ( '' . join ( list ( map ( str ,  x ) ) ) ) ) \n ",
      "answerA": " 4 \n",
      "answerB": " 5 \n",
      "answerC": " 6 \n",
      "answerD": " error ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Each number is mapped into a string of length "
    },
    {
      "id": "818",
      "question": "What will be the output of the following Python code? \n x  =   [ 12 ,   34 ] \n print ( len ( ' ' . join ( list ( map ( int ,  x ) ) ) ) ) \n ",
      "answerA": " 4 \n",
      "answerB": " 5 \n",
      "answerC": " 6 \n",
      "answerD": " error ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " TypeError. Execute in shell to verify. \n "
    },
    {
      "id": "819",
      "question": "What will be the output of the following Python code? \n x  =   [ 12.1 ,   34.0 ] \n print ( len ( ' ' . join ( list ( map ( str ,  x ) ) ) ) ) \n ",
      "answerA": " 6 \n",
      "answerB": " 8 \n",
      "answerC": " 9 \n",
      "answerD": " error ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The floating point numbers are converted to strings and joined with a space between them. \n "
    },
    {
      "id": "820",
      "question": "What will be the output of the following Python code? \n x  =   [ 12.1 ,   34.0 ] \n print ( ' ' . join ( list ( map ( str ,  x ) ) ) ) \n ",
      "answerA": " 12 1 34 0 \n",
      "answerB": " 12.1 34 \n",
      "answerC": " 121 340 \n",
      "answerD": " 12.1 34.0 ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " str(ab.c) is \u2018ab.c\u2019. \n "
    },
    {
      "id": "821",
      "question": "What will be the output of the following Python code? \n x  =   [ [ 0 ] ,   [ 1 ] ] \n print ( len ( ' ' . join ( list ( map ( str ,  x ) ) ) ) ) \n ",
      "answerA": " 2 \n",
      "answerB": " 3 \n",
      "answerC": " 7 \n",
      "answerD": " 8 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " map() is applied to the elements of the outer loop. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all tough interview questions on Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Multiple Choice Questions \u2013 Mapping Functions \u00bb  Next - Python Questions and Answers \u2013 Mapping Functions \u2013 3   Related Posts: Apply for  Programming Internship \n Practice  Programming MCQs \n Check  Python Books \n Apply for  Python Internship \n Check  Information Technology Books \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Multiple Choice Questions \u2013 Mapping Functions  \n Python Questions and Answers \u2013 Mapping Functions \u2013 3  \n Python Question and Answers \u2013 Built-in Functions \u2013 3  \n Python Questions and Answers \u2013 Lists \u2013 6  \n Python Program to Check Expression is Correctly Parenthesized  \n Python Question and Answers \u2013 Sys Module  \n Python Questions and Answers \u2013 Exception Handling \u2013 2  \n Python Multiple Choice Questions \u2013 Built-in Functions  \n Python Questions and Answers \u2013 Global vs Local Variables \u2013 1  \n Python Program to Implement Stack  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Linked List Programs in Python Python Programs on Trees Searching and Sorting in Python Python Programs on Graphs Python MCQ Questions Popular Pages: Python Programming Examples C# Programs on Functions C Programs on Recursion C++ Algorithm Library Linked List Programs in C    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Linked List Programs in Python Python Programs on Trees Searching and Sorting in Python Python Programs on Graphs Python MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Python Programming Examples C# Programs on Functions C Programs on Recursion C++ Algorithm Library Linked List Programs in C \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.384 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 01:22:37  \n  Compression = gzip "
    },
    {
      "id": "822",
      "question": "What will be the output of the following Python code? \n \n \n \n \n \n elements  =   [ 0 ,   1 ,   2 ] \n def  incr ( x ) :\n     return  x+ 1 \n print ( list ( map ( elements ,  incr ) ) ) \n ",
      "answerA": " [1, 2, 3]  \n",
      "answerB": " [0, 1, 2]  \n",
      "answerC": " error \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The list should be the second parameter to the mapping function. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "823",
      "question": "What will be the output of the following Python code? \n elements  =   [ 0 ,   1 ,   2 ] \n def  incr ( x ) :\n     return  x+ 1 \n print ( list ( map ( incr ,  elements ) ) ) \n ",
      "answerA": " [1, 2, 3]  \n",
      "answerB": " [0, 1, 2]  \n",
      "answerC": " error \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Each element of the list is incremented. \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n "
    },
    {
      "id": "824",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n x  =   [ 'ab' ,   'cd' ] \n print ( list ( map ( upper ,  x ) ) ) \n ",
      "answerA": " [\u2018AB\u2019, \u2018CD\u2019]  \n",
      "answerB": " [\u2018ab\u2019, \u2018cd\u2019]  \n",
      "answerC": " error \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " A NameError occurs because upper is a class method. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "825",
      "question": "What will be the output of the following Python code? \n def  to_upper ( k ) :\n     return  k. upper ( ) \nx  =   [ 'ab' ,   'cd' ] \n print ( list ( map ( upper ,  x ) ) ) \n ",
      "answerA": " [\u2018AB\u2019, \u2018CD\u2019]  \n",
      "answerB": " [\u2018ab\u2019, \u2018cd\u2019]  \n",
      "answerC": " none of the mentioned \n",
      "answerD": " error ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " A NameError occurs because upper is a class method. \n "
    },
    {
      "id": "826",
      "question": "What will be the output of the following Python code? \n def  to_upper ( k ) :\n     return  k. upper ( ) \nx  =   [ 'ab' ,   'cd' ] \n print ( list ( map ( to_upper ,  x ) ) ) \n ",
      "answerA": " [\u2018AB\u2019, \u2018CD\u2019]  \n",
      "answerB": " [\u2018ab\u2019, \u2018cd\u2019]  \n",
      "answerC": " none of the mentioned \n",
      "answerD": " error ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Each element of the list is converted to uppercase. \n "
    },
    {
      "id": "827",
      "question": "What will be the output of the following Python code? \n def  to_upper ( k ) :\n    k. upper ( ) \nx  =   [ 'ab' ,   'cd' ] \n print ( list ( map ( to_upper ,  x ) ) ) \n ",
      "answerA": " [\u2018AB\u2019, \u2018CD\u2019]  \n",
      "answerB": " [\u2018ab\u2019, \u2018cd\u2019]  \n",
      "answerC": " none of the mentioned \n",
      "answerD": " error ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": "none explanation"
    },
    {
      "id": "828",
      "question": "What will be the output of the following Python code? \n x  =   [ 'ab' ,   'cd' ] \n print ( map ( len ,  x ) ) \n ",
      "answerA": " [\u2018ab\u2019, \u2018cd\u2019]  \n",
      "answerB": " [2, 2]  \n",
      "answerC": " [\u20182\u2019, \u20182\u2019]  \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " A map object is generated by map(). We must convert this to a list to be able to print it in a human readable form. \n "
    },
    {
      "id": "829",
      "question": "What will be the output of the following Python code? \n x  =   [ 'ab' ,   'cd' ] \n print ( list ( map ( len ,  x ) ) ) \n ",
      "answerA": " [\u2018ab\u2019, \u2018cd\u2019]  \n",
      "answerB": " [2, 2]  \n",
      "answerC": " [\u20182\u2019, \u20182\u2019]  \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The length of each string is "
    },
    {
      "id": "830",
      "question": "What will be the output of the following Python code? \n x  =   [ 'ab' ,   'cd' ] \n print ( len ( map ( list ,  x ) ) ) \n ",
      "answerA": " [2, 2]  \n",
      "answerB": " 2 \n",
      "answerC": " 4 \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " A TypeError occurs as map has no len(). \n "
    },
    {
      "id": "831",
      "question": "What will be the output of the following Python code? \n x  =   [ 'ab' ,   'cd' ] \n print ( len ( list ( map ( list ,  x ) ) ) ) \n ",
      "answerA": " 2 \n",
      "answerB": " 4 \n",
      "answerC": " error \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The outer list has two lists in it. So it\u2019s length is "
    },
    {
      "id": "832",
      "question": "What will be the output of the following Python code? \n \n \n \n \n \n odd = lambda  x:  bool ( x% 2 ) \nnumbers = [ n  for  n  in   range ( 10 ) ] \n print ( numbers ) \nn = list ( ) \n for  i  in  numbers:\n     if  odd ( i ) :\n         continue \n     else :\n         break \n ",
      "answerA": " [0, 2, 4, 6, 8, 10] \n",
      "answerB": " [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] \n",
      "answerC": " [1, 3, 5, 7, 9] \n",
      "answerD": " Error ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above returns a new list containing whole numbers up to 10 (excluding 10). Hence the output of the code is: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "833",
      "question": "What will be the output of the following Python code? \n f = lambda  x: bool ( x% 2 ) \n print ( f ( 20 ) ,  f ( 21 ) ) \n ",
      "answerA": " False True \n",
      "answerB": " False False \nc) True True \nd) True False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above will return true if the given argument is an odd number, and false if the given argument is an even number. Since the arguments are 20 and 21 respectively, the output of this code is: False True. \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n "
    },
    {
      "id": "834",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n import  functools\nl = [ 1 , 2 , 3 , 4 ] \n print ( functools. reduce ( lambda  x , y:x*y , l ) ) \n ",
      "answerA": " Error \n",
      "answerB": " 10 \n",
      "answerC": " 24 \n",
      "answerD": " No output ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above returns the product of all the elements of the list. Hence the output is 1*2*3*4 = "
    },
    {
      "id": "835",
      "question": "What will be the output of the following Python code? \n l = [ 1 ,  - 2 ,  - 3 ,   4 ,   5 ] \n def  f1 ( x ) :\n     return  x < 2 \nm1 = filter ( f1 ,  l ) \n print ( list ( m1 ) ) \n ",
      "answerA": " [1, 4, 5\t] \n",
      "answerB": " Error \n",
      "answerC": " [-2, -3] \n",
      "answerD": " [1, -2, -3] ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above returns only those elements from the list, which are less than "
    },
    {
      "id": "836",
      "question": "What will be the output of the following Python code? \n l = [ - 2 ,   4 ] \nm = map ( lambda  x:x* 2 ,  l ) \n print ( m ) \n ",
      "answerA": " [-4, 16] \n",
      "answerB": " Address of m \n",
      "answerC": " Error \n",
      "answerD": "  ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above returns the address of m. Had we used the statement: print(list(m)), the output would have been: [-4, 16]. \n\u00a0 \u00a0 \n "
    },
    {
      "id": "837",
      "question": "What will be the output of the following Python code? \n l = [ 1 ,  - 2 ,  - 3 ,   4 ,   5 ] \n def  f1 ( x ) :\n     return  x < - 1 \nm1 = map ( f1 ,  l ) \n print ( list ( m1 ) ) \n ",
      "answerA": " [False, False, False, False, False] \n",
      "answerB": " [False, True, True, False, False] \n",
      "answerC": " [True, False, False, True, True] \n",
      "answerD": " [True, True, True, True, True] ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " This code shown returns a list which contains True if the corresponding element of the list is less than -1, and false if the corresponding element is greater than -"
    },
    {
      "id": "838",
      "question": "What will be the output of the following Python code? \n l = [ 1 ,   2 ,   3 ,   4 ,   5 ] \nm = map ( lambda  x: 2 **x ,  l ) \n print ( list ( m ) ) \n ",
      "answerA": " [1, 4, 9, 16, 25\t] \n",
      "answerB": " [2, 4, 8, 16, 32\t] \n",
      "answerC": " [1, 0, 1, 0, 1] \n",
      "answerD": " Error ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above prints a list containing each element of the list as the power of two. That is, the output is: [2, 4, 8, 16, 32]. \n "
    },
    {
      "id": "843",
      "question": "The single line equivalent of the following Python code? \n l = [ 1 ,   2 ,   3 ,   4 ,   5 ] \n def  f1 ( x ) :\n     return  x < 0 \nm1 = filter ( f1 ,  l ) \n print ( list ( m1 ) ) \n ",
      "answerA": " filter(lambda x:x<0, l) \n",
      "answerB": " filter(lambda x, y: x<0, l) \n",
      "answerC": " filter(reduce x<0, l) \n",
      "answerD": " reduce(x: x<0, l) ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above returns a new list containing only those elements from list l, which are less than "
    },
    {
      "id": "844",
      "question": "What will be the output of the following Python code? \n list ( map ( ( lambda  x:x^ 2 ) ,   range ( 10 ) ) ) \n ",
      "answerA": " [0, 1, 4, 9, 16, 25, 36, 49, 64, 81] \n",
      "answerB": " Error \n",
      "answerC": " [2, 3, 0, 1, 6, 7, 4, 5, 10, 11] \n",
      "answerD": " No output ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The line of code shown above returns a list of each number from 1 to 10, after an XOR operation is performed on each of these numbers with "
    },
    {
      "id": "845",
      "question": "What will be the output of the following Python code? \n list ( map ( ( lambda  x:x** 2 ) ,   filter ( ( lambda  x:x% 2 == 0 ) ,   range ( 10 ) ) ) ) \n ",
      "answerA": " [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] \n",
      "answerB": " [0, 4, 16, 36, 64] \n",
      "answerC": " Error \n",
      "answerD": " No output ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The output list will contain each number up to 10 raised to 2, except odd numbers, that is, 1, 3, 5, "
    },
    {
      "id": "846",
      "question": "The output of the following codes are the same. \n [ x** 2   for  x  in   range ( 10 ) ] \n list ( map ( ( lambda  x:x** 2 ) ,   range ( 10 ) ) ) \n ",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Both of the codes shown above print each whole number up to 10, raised to the power "
    },
    {
      "id": "847",
      "question": "The output of both of the print statements is the same. \n \n \n \n \n \n import   datetime \ndt_1  =   datetime . datetime . today ( ) \ndt_2  =   datetime . datetime . now ( ) \n print ( dt_1 ) \n print ( dt_2 ) \n ",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The output of the two print statements is not the same because of the difference in time between the execution of the two print statements. There is a difference in the order of milliseconds between the two statements and this is reflected in the output. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "848",
      "question": "Which of the following functions can be used to find the coordinated universal time, assuming that the datetime module has already been imported? \n",
      "answerA": " datetime.utc() \n",
      "answerB": " datetime.datetime.utc() \n",
      "answerC": " datetime.utcnow() \n",
      "answerD": " datetime.datetime.utcnow() ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The function datetime.datetime.utcnow() can be used to find the UTC (Coordinated Universal Time), assuming that the datetime module has already been imported. The other function s shown above are invalid. \n "
    },
    {
      "id": "849",
      "question": "What will be the output of the following Python code? \n \n \n    \nNote: Join free Sanfoundry classes at  Telegram  or  Youtube \n \n \n \n \n \n \n \n import   time \n time . time ( ) \n ",
      "answerA": " The number of hours passed since 1st January, 1970 \n",
      "answerB": " The number of days passed since 1st January, 1970 \n",
      "answerC": " The number of seconds passed since 1st January, 1970 \n",
      "answerD": " The number of minutes passed since 1st January, 1970 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above will return the number of seconds passed since 1st January, "
    },
    {
      "id": "850",
      "question": "What will be the output of the following Python code, if the time module has already been imported? \n def  num ( m ) :\n\tt1  =   time . time ( ) \n\t for  i  in   range ( 0 , m ) :\n\t\t print ( i ) \n\tt2  =   time . time ( ) \n\t print ( str ( t2-t1 ) ) \n\u00a0\n    num ( 3 ) \n ",
      "answerA": "  \n    1\r\n   2\r\n   3\r\n   The time taken for the execution of the code \n \n advertisement \n \n \n \n \n ",
      "answerB": "  \n    3\r\n   The time taken for the execution of the code \n ",
      "answerC": "  \n    1\r\n   2\r\n   3\r\n   UTC time  \n ",
      "answerD": "  ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above will return the numbers 1, 2, 3, followed by the time taken in the execution of the code. \nOutput: \n1 \n2 \n3 \nThe time taken for the execution of the code \n\u00a0 \u00a0 \n "
    },
    {
      "id": "851",
      "question": "What will be the output of the following Python code? \n import   time \n time . asctime ( ) \n ",
      "answerA": " Current date only \n",
      "answerB": " UTC time \n",
      "answerC": " Current date and time \n",
      "answerD": " Current time only ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The function time.asctime(), present if the time module can be used to return the current date and time. It can also accept a parameter and return the date and time in a particular format. However in the above code, since we have not passed any parameters in the above code, the current date and time is returned. \n "
    },
    {
      "id": "852",
      "question": "What will be the output of the following Python code? \n import   time \nt = ( 2010 ,   9 ,   20 ,   8 ,   15 ,   12 ,   6 ) \n time . asctime ( t ) \n ",
      "answerA": " \u201820 Sep 2010 8:15:12 Sun\u2019 \n",
      "answerB": " \u20182010 20 Sept 08:15:12 Sun\u2019 \n",
      "answerC": " \u2018Sun Sept 20 8:15:12 2010\u2019 \n",
      "answerD": " Error ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above results in an error because this function accepts exactly 9 arguments (including day of the year and DST), but only 7 are given. Hence an error is thrown. \n "
    },
    {
      "id": "853",
      "question": "What will be the output of the following Python code? \n import   time \nt = ( 2010 ,   9 ,   20 ,   8 ,   45 ,   12 ,   6 ,   0 ,   0 ) \n time . asctime ( t ) \n ",
      "answerA": " \u2018Sep 20 2010 08:45:12 Sun\u2019 \n",
      "answerB": " \u2018Sun Sep 20 08:45:12 2010\u2019 \n",
      "answerC": " \u201920 Sep 08:45:12 Sun 2010\u2019 \n",
      "answerD": " \u20182010 20 Sep 08:45:12 Sun\u2019 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above returns the given date and time in a particular format. Hence the output of the code shown above will be: \u2018Sun Sep 20 08:45:12 2010\u2019. \n "
    },
    {
      "id": "854",
      "question": "The sleep function (under the time module) is used to ___________ \n",
      "answerA": " Pause the code for the specified number of seconds \n",
      "answerB": " Return the specified number of seconds, in terms of milliseconds \n",
      "answerC": " Stop the execution of the code \n",
      "answerD": " Return the output of the code had it been executed earlier by the specified number of seconds ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The sleep function (under the time module) is used to pause the code for the specified number of seconds. The number of seconds is taken as an argument by this function. \n "
    },
    {
      "id": "855",
      "question": "What will be the output of the following Python code? \n import   time \n for  i  in   range ( 0 , 5 ) :\n\t print ( i ) \n\t time . sleep ( 2 ) \n ",
      "answerA": " After an interval of 2 seconds, the numbers 1, 2, 3, 4, 5 are printed all together \n",
      "answerB": " After an interval of 2 seconds, the numbers 0, 1, 2, 3, 4 are printed all together \n",
      "answerC": " Prints the numbers 1, 2, 3, 4, 5 at an interval of 2 seconds between each number \n",
      "answerD": " Prints the numbers 0, 1, 2, 3, 4 at an interval of 2 seconds between each number ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The output of the code shown above will be the numbers 0, 1, 2, 3, 4 at an interval of 2 seconds each. \n "
    },
    {
      "id": "856",
      "question": "What will be the output if we try to extract only the year from the following Python code? (time.struct_time(tm_year=2017, tm_mon=6, tm_mday=25, tm_hour=18, tm_min=26, tm_sec=6, tm_wday=6, tm_yday=176, tm_isdst=0)) \n import   time \nt = time . localtime ( ) \n print ( t ) \n ",
      "answerA": " t[1] \n",
      "answerB": " tm_year \n",
      "answerC": " t[0] \n",
      "answerD": " t_year ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " To extract the year from the code shown above, we use the command t[0]. The command t[1] will return the month number (6 in the above case). The commands tm_year and t_year will result in errors. \n "
    },
    {
      "id": "857",
      "question": "State whether true or false. \n s  =   time . time ( ) \nt =   time . time ( ) \ns  ==  t \n ",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The variables \u2018s\u2019 and \u2018t\u2019 will not be equal due to the slight difference in the time of their execution. Hence the output of this code will be: False. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Question and Answers \u2013 Datetime Module \u2013 1 \u00bb  Next - Python Question and Answers \u2013 Random module \u2013 1   Related Posts: Check  Python Books \n Apply for  Programming Internship \n Check  Information Technology Books \n Practice  Programming MCQs \n Apply for  Python Internship \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Question and Answers \u2013 Datetime Module \u2013 1  \n Python Question and Answers \u2013 Random module \u2013 1  \n Python Question and Answers \u2013 Sys Module  \n Python Multiple Choice Questions \u2013 Turtle Module  \n Python Questions and Answers \u2013 Pickle Module  \n Python Questions and Answers \u2013 Python Modules  \n Python Questions and Answers \u2013 Random Module \u2013 2  \n Python Questions and Answers \u2013 Function \u2013 2  \n Python Questions and Answers \u2013 Turtle Module \u2013 3  \n Python Questions and Answers \u2013 Turtle Module \u2013 2  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python MCQ Questions Python Programs on Trees Linked List Programs in Python Python Programs on Graphs Python Programming Examples Popular Pages: Searching and Sorting in Python C# Programs on Functions JavaScript MCQ Questions Java Array Programs C++ Algorithm Library    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python MCQ Questions Python Programs on Trees Linked List Programs in Python Python Programs on Graphs Python Programming Examples \n   \n \n \n \n \n \n \n   Popular Pages Searching and Sorting in Python C# Programs on Functions JavaScript MCQ Questions Java Array Programs C++ Algorithm Library \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.182 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 01:22:50  \n  Compression = gzip "
    },
    {
      "id": "858",
      "question": "What will be the output of the following Python code? \n \n \n \n \n \n import   datetime \nd = datetime . date ( 2016 , 7 , 24 ) \n print ( d ) \n ",
      "answerA": " Error \n",
      "answerB": " 2017-07-24 \n",
      "answerC": " 2017-7-24 \n",
      "answerD": " 24-7-2017 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " In the snippet of code shown above, we are simply printing the date entered by us. We enter the date in the format: yyyy,m,dd. The date is then printed in the format: yyyy-mm-dd. Hence the output is: 2017-07-"
    },
    {
      "id": "859",
      "question": "What will be the output of the following Python code? \n import   datetime \nd = datetime . date ( 2017 , 06 , 18 ) \n print ( d ) \n ",
      "answerA": " Error \n",
      "answerB": " 2017-06-18 \n",
      "answerC": " 18-06-2017 \n",
      "answerD": " 06-18-2017 ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above will result in an error because of the format of the date entered. Had the date been entered as: d=datetime.date(2017,6,18), no error would have been thrown. \n \n \n    \nSubscribe Now:  Python Newsletter  |  Important Subjects Newsletters \n \n \n \n \n \n \n \n "
    },
    {
      "id": "860",
      "question": "What will be the output of the following Python code if the system date is 18th August, 2016? \n \n advertisement \n \n \n \n \n tday = datetime . date . today ( ) \n print ( tday. month ( ) ) \n ",
      "answerA": " August \n",
      "answerB": " Aug \n",
      "answerC": " 08 \n",
      "answerD": " 8 ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above prints the month number from the system date. Therefor the output will be 8 if the system date is 18th August, "
    },
    {
      "id": "861",
      "question": "What will be the output of the following Python code if the system date is 18th June, 2017 (Sunday)? \n import   datetime \ntday = datetime . date . today ( ) \n print ( tday ) \n ",
      "answerA": " 18-06-2017 \n",
      "answerB": " 06-18-2017 \n",
      "answerC": " 2017-06-18 \n",
      "answerD": " Error ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above prints the system date in the format yyyy-mm-dd. Hence the output of this code is: 2017-06-"
    },
    {
      "id": "862",
      "question": "What will be the output of the following Python code if the system date is 18th June, 2017 (Sunday)? \n tday = datetime . date . today ( ) \n print ( tday. weekday ( ) ) \n ",
      "answerA": " 6 \n",
      "answerB": " 1 \n",
      "answerC": " 0 \n",
      "answerD": " 7 ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above prints an integer depending on which day of the week it is. Monday-0, Tuesday-1, Wednesday-2, Thursday-3, Friday-4, Saturday-5, Sunday-"
    },
    {
      "id": "863",
      "question": "What will be the output of the following Python code if the system date is 21st June, 2017 (Wednesday)? \n tday = datetime . date . today ( ) \n print ( tday. isoweekday ( ) ) \n ",
      "answerA": " Wed \n",
      "answerB": " Wednesday \n",
      "answerC": " 2 \n",
      "answerD": " 3 ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " This code prints an integer depending on which day of the week it is. Monday-1, Tuesday-2, Wednesday-3, Thursday-4, Friday-5, Saturday-6, Sunday-"
    },
    {
      "id": "864",
      "question": "Point out the error (if any) in the code shown below if the system date is 18th June, 2017? \n tday = datetime . date . today ( ) \nbday = datetime . date ( 2017 , 9 , 18 ) \ntill_bday = bday-tday\n print ( till_bday ) \n ",
      "answerA": " 3 months, 0:00:00 \n",
      "answerB": " 90 days, 0:00:00 \n",
      "answerC": " 3 months 2 days, 0:00:00 \n",
      "answerD": " 92 days, 0:00:00 ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above can be used to find the number of days between two given dates. The output of the code shown above will thus be "
    },
    {
      "id": "865",
      "question": "The value returned when we use the function isoweekday() is ______ and that for the function weekday() is ________ if the system date is 19th June, 2017 (Monday). \n",
      "answerA": " 0,0 \n",
      "answerB": " 0,1 \n",
      "answerC": " 1,0 \n",
      "answerD": " 1,1 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The value returned when we use the function isoweekday() is 1 and that for the function weekday() is 0 if the system date is 19th June, 2017 (Monday). \n "
    },
    {
      "id": "866",
      "question": "Which of the following will throw an error if used after the following Python code? \n tday = datetime . date . today ( ) \nbday = datetime . date ( 2017 , 9 , 18 ) \nt_day = bday-tday \n ",
      "answerA": " print(t_day.seconds) \n",
      "answerB": " print(t_day.months) \n",
      "answerC": " print(t_day.max) \n",
      "answerD": " print(t_day.resolution) ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The statement: print(t_day.months) will throw an error because there is no function such as t_day.months, whereas t_day.seconds, t_day.max and t_day.resolution are valid, provided that t_day is defined. \n "
    },
    {
      "id": "867",
      "question": "What will be the output of the following Python code if the system date is: 6/19/2017 \n tday = datetime . date . today ( ) \ntdelta = datetime . timedelta ( days = 10 ) \n print ( tday+tdelta ) \n ",
      "answerA": " 2017-16-19 \n",
      "answerB": " 2017-06-9 \n",
      "answerC": " 2017-06-29 \n",
      "answerD": " Error ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above will add the specified number of days to the current date and print the new date. On adding ten days to 6/19/2017, we get 6/29/"
    },
    {
      "id": "868",
      "question": "What is the result of math.trunc(3.1)? \n",
      "answerA": " 3.0 \n",
      "answerB": " 3 \n",
      "answerC": " 0.1 \n",
      "answerD": " 1 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The integral part of the floating point number is returned. \n \n \n \n \n \n "
    },
    {
      "id": "869",
      "question": "What is the output of print(math.trunc(\u20183.1\u2019))? \n",
      "answerA": " 3 \n",
      "answerB": " 3.0 \n",
      "answerC": " error \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " TypeError, a string does not have __trunc__ method. \n "
    },
    {
      "id": "870",
      "question": "Which of the following is the same as math.exp(p)? \n",
      "answerA": " e ** p \n",
      "answerB": " math.e ** p \n",
      "answerC": " p ** e \n",
      "answerD": " p ** math.e ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " math.e is the constant defined in the math module. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "871",
      "question": "What is returned by math.expm1(p)? \n",
      "answerA": " (math.e ** p) \u2013 1 \n",
      "answerB": " math.e ** (p \u2013 1) \n",
      "answerC": " error \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " One is subtracted from the result of math.exp(p) and returned. \n "
    },
    {
      "id": "872",
      "question": "What is the default base used when math.log(x) is found? \n",
      "answerA": " e \n",
      "answerB": " 10 \n",
      "answerC": " 2 \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The natural log of x is returned by default. \n \n \n    \nSubscribe Now:  Python Newsletter  |  Important Subjects Newsletters \n \n \n \n \n \n \n \n "
    },
    {
      "id": "873",
      "question": "Which of the following aren\u2019t defined in the math module? \n",
      "answerA": " log2() \n",
      "answerB": " log10() \n",
      "answerC": " logx() \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " log2() and log10() are defined in the math module. \n "
    },
    {
      "id": "874",
      "question": "What is returned by int(math.pow(3, 2))? \n",
      "answerA": " 6 \n",
      "answerB": " 9 \n",
      "answerC": " error, third argument required \n",
      "answerD": " error, too many arguments ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " math.pow(a, b) returns a ** b. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "875",
      "question": "What is output of print(math.pow(3, 2))? \n",
      "answerA": " 9 \n",
      "answerB": " 9.0 \n",
      "answerC": " None \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " math.pow() returns a floating point number. \n "
    },
    {
      "id": "876",
      "question": "What is the value of x if x = math.sqrt(4)? \n",
      "answerA": " 2 \n",
      "answerB": " 2.0 \n",
      "answerC": " (2, -2) \n",
      "answerD": " (2.0, -2.0) ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The function returns one floating point number. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "877",
      "question": "What does math.sqrt(X, Y) do? \n",
      "answerA": " calculate the Xth root of Y \n",
      "answerB": " calculate the Yth root of X \n",
      "answerC": " error \n",
      "answerD": " return a tuple with the square root of X and Y ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The function takes only one argument. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all developer interview questions on Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 Math \u2013 2 \u00bb  Next - Python Question and Answers \u2013 Datetime Module \u2013 1   Related Posts: Apply for  Programming Internship \n Check  Python Books \n Apply for  Python Internship \n Check  Information Technology Books \n Practice  Programming MCQs \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Multiple Choice Questions \u2013 Math  \n Python Questions and Answers \u2013 Math \u2013 2  \n C# Program to Call Math Operations using Delegates  \n Python Questions and Answers \u2013 Function \u2013 2  \n Python Program to Find the Area and Perimeter of the Circle  \n Python Questions and Answers \u2013 Python Modules  \n Java Questions & Answers \u2013 Java.lang \u2013 Object & Math Class  \n Python Program to Find the Factorial of a Number  \n Python Questions and Answers \u2013 Core Data types  \n GCD of Two Numbers in Python  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python MCQ Questions Python Programming Examples Delegates in C# Python Programs on Trees Searching and Sorting in Python Popular Pages: Python Programs on Graphs Linked List Programs in Python Visual Basic MCQ Questions C++ Algorithm Library JavaScript MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python MCQ Questions Python Programming Examples Delegates in C# Python Programs on Trees Searching and Sorting in Python \n   \n \n \n \n \n \n \n   Popular Pages Python Programs on Graphs Linked List Programs in Python Visual Basic MCQ Questions C++ Algorithm Library JavaScript MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.427 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-04 01:55:48  \n  Compression = gzip "
    },
    {
      "id": "878",
      "question": "What does the function math.frexp(x) return? \n",
      "answerA": " a tuple containing the mantissa and the exponent of x \n",
      "answerB": " a list containing the mantissa and the exponent of x \n",
      "answerC": " a tuple containing the mantissa of x \n",
      "answerD": " a list containing the exponent of x ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " It returns a tuple with two elements. The first element is the mantissa and the second element is the exponent. \n \n \n \n \n \n "
    },
    {
      "id": "879",
      "question": "What is the result of math.fsum([.1 for i in range(20)])? \n",
      "answerA": " 2.0 \n",
      "answerB": " 20 \n",
      "answerC": " 2 \n",
      "answerD": " 2.0000000000000004 ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The function fsum returns an accurate floating point sum of the elements of its argument. \n "
    },
    {
      "id": "880",
      "question": "What is the result of sum([.1 for i in range(20)])? \n",
      "answerA": " 2.0 \n",
      "answerB": " 20 \n",
      "answerC": " 2 \n",
      "answerD": " 2.0000000000000004 ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " There is some loss of accuracy when we use sum with floating point numbers. Hence the function fsum is preferable. \n "
    },
    {
      "id": "881",
      "question": "What is returned by math.isfinite(float(\u2018inf\u2019))? \n",
      "answerA": " True \n",
      "answerB": " False \nc) None \nd) error ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " float(\u2018inf\u2019) is not a finite number. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "882",
      "question": "What is returned by math.isfinite(float(\u2018nan\u2019))? \n",
      "answerA": " True \n",
      "answerB": " False \nc) None \nd) error ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " float(\u2018nan\u2019) is not a finite number. \n \n \n    \nSubscribe Now:  Python Newsletter  |  Important Subjects Newsletters \n \n \n \n \n \n \n \n "
    },
    {
      "id": "883",
      "question": "What is x if x = math.isfinite(float(\u20180.0\u2019))? \n",
      "answerA": " True \n",
      "answerB": " False \nc) None \nd) error ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " float(\u20180.0\u2019) is a finite number. \n "
    },
    {
      "id": "884",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n >>>  - float ( 'inf' )  +  float ( 'inf' ) \n ",
      "answerA": " inf \n",
      "answerB": " nan \n",
      "answerC": " 0 \n",
      "answerD": " 0.0 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The result of float(\u2018inf\u2019)-float(\u2018inf\u2019) is undefined. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "885",
      "question": "What will be the output of the following Python code? \n print ( math . isinf ( float ( '-inf' ) ) ) \n ",
      "answerA": " error, the minus sign shouldn\u2019t have been inside the brackets \n",
      "answerB": " error, there is no function called isinf \n",
      "answerC": " True \n",
      "answerD": " False ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " -float(\u2018inf\u2019) is the same as float(\u2018-inf\u2019). \n "
    },
    {
      "id": "886",
      "question": "What is the value of x if x = math.ldexp(0.5, 1)? \n",
      "answerA": " 1 \n",
      "answerB": " 2.0 \n",
      "answerC": " 0.5 \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The value returned by ldexp(x, y) is x * (2 ** y). In the current case x is 1."
    },
    {
      "id": "887",
      "question": "What is returned by math.modf(1.0)? \n",
      "answerA": " (0.0, 1.0) \n",
      "answerB": " (1.0, 0.0) \n",
      "answerC": " (0.5, 1) \n",
      "answerD": " (0.5, 1.0) ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The first element is the fractional part and the second element is the integral part of the argument. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all developer questions on Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Multiple Choice Questions \u2013 Math \u00bb  Next - Python Questions and Answers \u2013 Math \u2013 3   Related Posts: Check  Python Books \n Practice  Programming MCQs \n Check  Information Technology Books \n Apply for  Programming Internship \n Apply for  Python Internship \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 Math \u2013 3  \n Python Multiple Choice Questions \u2013 Math  \n C# Program to Call Math Operations using Delegates  \n Python Questions and Answers \u2013 Tuples \u2013 2  \n Microprocessors Questions and Answers \u2013 80287 Math Coprocessor -1  \n Java Questions & Answers \u2013 Java.lang \u2013 Object & Math Class  \n Python Questions and Answers \u2013 Core Data types  \n Python Program to Sort a List of Tuples in Increasing Order by the Last Element in Each Tuple  \n C# Program to Find the Maximum Range of Data Types  \n Computer Organization Questions and Answers \u2013 Representation of Floating Number  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python MCQ Questions Searching and Sorting in Python Python Programming Examples Python Programs on Trees Python Programs on Graphs Popular Pages: Linked List Programs in Python Delegates in C# C++ Algorithm Library C++ Programs Automata Theory MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python MCQ Questions Searching and Sorting in Python Python Programming Examples Python Programs on Trees Python Programs on Graphs \n   \n \n \n \n \n \n \n   Popular Pages Linked List Programs in Python Delegates in C# C++ Algorithm Library C++ Programs Automata Theory MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.419 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 02:45:39  \n  Compression = gzip "
    },
    {
      "id": "888",
      "question": "What is returned by math.ceil(3.4)? \n",
      "answerA": " 3 \n",
      "answerB": " 4 \n",
      "answerC": " 4.0 \n",
      "answerD": " 3.0 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The ceil function returns the smallest integer that is bigger than or equal to the number itself. \n \n \n \n \n \n "
    },
    {
      "id": "889",
      "question": "What is the value returned by math.floor(3.4)? \n",
      "answerA": " 3 \n",
      "answerB": " 4 \n",
      "answerC": " 4.0 \n",
      "answerD": " 3.0 ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The floor function returns the biggest number that is smaller than or equal to the number itself. \n "
    },
    {
      "id": "890",
      "question": "What will be the output of print(math.copysign(3, -1))? \n",
      "answerA": " 1 \n",
      "answerB": " 1.0 \n",
      "answerC": " -3 \n",
      "answerD": " -3.0 ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The copysign function returns a float whose absolute value is that of the first argument and the sign is that of the second argument. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "891",
      "question": "What is displayed on executing print(math.fabs(-3.4))? \n",
      "answerA": " -3.4 \n",
      "answerB": " 3.4 \n",
      "answerC": " 3 \n",
      "answerD": " -3 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " A negative floating point number is returned as a positive floating point number. \n "
    },
    {
      "id": "892",
      "question": "Is the output of the function abs() the same as that of the function math.fabs()? \n",
      "answerA": " sometimes \n",
      "answerB": " always \n",
      "answerC": " never \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " math.fabs() always returns a float and does not work with complex numbers whereas the return type of abs() is determined by the type of value that is passed to it. \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n "
    },
    {
      "id": "893",
      "question": "What is the value returned by math.fact(6)? \n",
      "answerA": " 720 \n",
      "answerB": " 6 \n",
      "answerC": " [1, 2, 3, 6]  \n",
      "answerD": " error ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " NameError, fact() is not defined. \n "
    },
    {
      "id": "894",
      "question": "What is the value of x if x = math.factorial(0)? \n",
      "answerA": " 0 \n",
      "answerB": " 1 \n",
      "answerC": " error \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Factorial of 0 is "
    },
    {
      "id": "895",
      "question": "What is math.factorial(4.0)? \n",
      "answerA": " 24 \n",
      "answerB": " 1 \n",
      "answerC": " error \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The factorial of 4 is returned. \n "
    },
    {
      "id": "896",
      "question": "What will be the output of print(math.factorial(4.5))? \n",
      "answerA": " 24 \n",
      "answerB": " 120 \n",
      "answerC": " error \n",
      "answerD": " 24.0 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Factorial is only defined for non-negative integers. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "897",
      "question": "What is math.floor(0o10)? \n",
      "answerA": " 8 \n",
      "answerB": " 10 \n",
      "answerC": " 0 \n",
      "answerD": " 9 ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " 0o10 is 8 and floor(8) is "
    },
    {
      "id": "898",
      "question": "Which of these definitions correctly describes a module? \n",
      "answerA": "\tDenoted by triple quotes for providing the specification of certain program elements \n",
      "answerB": "\tDesign and implementation of specific functionality to be incorporated into a program \n",
      "answerC": "\tDefines the specification of how it is to be used \n",
      "answerD": "\tAny program that reuses code ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The term \u201cmodule\u201d refers to the implementation of specific functionality to be incorporated into a program. \n \n \n \n \n \n "
    },
    {
      "id": "899",
      "question": "Which of the following is not an advantage of using modules? \n",
      "answerA": "\tProvides a means of reuse of program code \n",
      "answerB": "\tProvides a means of dividing up tasks \n",
      "answerC": "\tProvides a means of reducing the size of the program \n",
      "answerD": "\tProvides a means of testing individual parts of the program ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The total size of the program remains the same regardless of whether modules are used or not. Modules simply divide the program. \n "
    },
    {
      "id": "900",
      "question": "Program code making use of a given module is called a ______ of the module. \n",
      "answerA": "\tClient \n",
      "answerB": "\tDocstring \n",
      "answerC": "\tInterface \n",
      "answerD": "\tModularity ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Program code making use of a given module is called the client of the module. There may be multiple clients for a module. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "901",
      "question": "______ is a string literal denoted by triple quotes for providing the specifications of certain program elements. \n",
      "answerA": "\tInterface \n",
      "answerB": "\tModularity \n",
      "answerC": "\tClient \n",
      "answerD": "\tDocstring ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Docstring used for providing the specifications of program elements. \n "
    },
    {
      "id": "902",
      "question": "Which of the following is true about top-down design process? \n",
      "answerA": "\tThe details of a program design are addressed before the overall design \n",
      "answerB": "\tOnly the details of the program are addressed \n",
      "answerC": "\tThe overall design of the program is addressed before the details \n",
      "answerD": "\tOnly the design of the program is addressed ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Top-down design is an approach for deriving a modular design in which the overall design. \n \n \n    \nSubscribe Now:  Python Newsletter  |  Important Subjects Newsletters \n \n \n \n \n \n \n \n "
    },
    {
      "id": "903",
      "question": " In top-down design every module is broken into same number of submodules. \n",
      "answerA": "\tTrue \n",
      "answerB": "\tFalse ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " In top-down design every module can even be broken down into different number of submodules. \n "
    },
    {
      "id": "904",
      "question": "All modular designs are because of a top-down design process. \n",
      "answerA": "\tTrue \n",
      "answerB": "\tFalse ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The details of the program can be addressed before the overall design too. Hence, all modular designs are not because of a top-down design process. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "905",
      "question": "What will be the output of the following Python code? \n #mod1 \n def  change ( a ) :\n    b = [ x* 2   for  x  in  a ] \n     print ( b ) \n #mod2 \n def  change ( a ) :\n    b = [ x*x  for  x  in  a ] \n     print ( b ) \n from  mod1  import  change\n from  mod2  import  change\n #main \ns = [ 1 , 2 , 3 ] \nchange ( s ) \n ",
      "answerA": " [2,4,6]  \n",
      "answerB": " [1,4,9]  \n",
      "answerC": "  \n [2,4,6]\r\n[1,4,9] \n \n advertisement \n \n \n \n \n ",
      "answerD": " There is a name clash ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " A name clash is when two different entities with the same identifier become part of the same scope. Since both the modules have the same function name, there is a name clash. \n "
    },
    {
      "id": "906",
      "question": " Which of the following isn\u2019t true about main modules? \n",
      "answerA": "\tWhen a python file is directly executed, it is considered main module of a program \n",
      "answerB": "\tMain modules may import any number of modules \n",
      "answerC": "\tSpecial name given to main modules is: __main__ \n",
      "answerD": "\tOther main modules can import main modules ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Main modules are not meant to be imported into other modules. \n "
    },
    {
      "id": "907",
      "question": "Which of the following is not a valid namespace? \n",
      "answerA": "\tGlobal namespace \n",
      "answerB": "\tPublic namespace \n",
      "answerC": "\tBuilt-in namespace \n",
      "answerD": "\tLocal namespace ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " During a Python program execution, there are as many as three namespaces \u2013 built-in namespace, global namespace and local namespace. \n "
    },
    {
      "id": "908",
      "question": " Which of the following is false about \u201cimport modulename\u201d form of import? \n",
      "answerA": "\tThe namespace of imported module becomes part of importing module \n",
      "answerB": "\tThis form of import prevents name clash \n",
      "answerC": "\tThe namespace of imported module becomes available to importing module \n",
      "answerD": "\tThe identifiers in module are accessed as: modulename.identifier ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " In the \u201cimport modulename\u201d form of import, the namespace of imported module becomes available to, but not part of, the importing module. \n "
    },
    {
      "id": "909",
      "question": " Which of the following is false about \u201cfrom-import\u201d form of import? \n",
      "answerA": "\tThe syntax is: from modulename import identifier \n",
      "answerB": "\tThis form of import prevents name clash \n",
      "answerC": "\tThe namespace of imported module becomes part of importing module \n",
      "answerD": "\tThe identifiers in module are accessed directly as: identifier ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " In the \u201cfrom-import\u201d form of import, there may be name clashes because names of the imported identifiers aren\u2019t specified along with the module name. \n "
    },
    {
      "id": "910",
      "question": " Which of the statements about modules is false? \n",
      "answerA": "\tIn the \u201cfrom-import\u201d form of import, identifiers beginning with two underscores are private and aren\u2019t imported \n",
      "answerB": "\tdir() built-in function monitors the items in the namespace of the main module \n",
      "answerC": "\tIn the \u201cfrom-import\u201d form of import, all identifiers regardless of whether they are private or public are imported \n",
      "answerD": "\tWhen a module is loaded, a compiled version of the module with file extension .pyc is automatically produced ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " In the \u201cfrom-import\u201d form of import, identifiers beginning with two underscores are private and aren\u2019t imported. \n "
    },
    {
      "id": "911",
      "question": "What will be the output of the following Python code? \n from   math   import  factorial\n print ( math . factorial ( 5 ) ) \n ",
      "answerA": "\t120 \n",
      "answerB": "\tNothing is printed \n",
      "answerC": "\tError, method factorial doesn\u2019t exist in math module \n",
      "answerD": "\tError, the statement should be: print(factorial(5)) ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " In the \u201cfrom-import\u201d form of import, the imported identifiers (in this case factorial()) aren\u2019t specified along with the module name. \n "
    },
    {
      "id": "912",
      "question": " What is the order of namespaces in which Python looks for an identifier? \n",
      "answerA": "\tPython first searches the global namespace, then the local namespace and finally the built-in namespace \n",
      "answerB": "\tPython first searches the local namespace, then the global namespace and finally the built-in namespace \n",
      "answerC": "\tPython first searches the built-in namespace, then the global namespace and finally the local namespace \n",
      "answerD": "\tPython first searches the built-in namespace, then the local namespace and finally the global namespace ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Python first searches for the local, then the global and finally the built-in namespace.   \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 Mapping Functions \u2013 3 \u00bb  Next - Python Multiple Choice Questions \u2013 Math   Related Posts: Check  Information Technology Books \n Apply for  Programming Internship \n Practice  Programming MCQs \n Check  Python Books \n Apply for  Python Internship \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Irrigation Engineering Questions and Answers \u2013 Regulation Modules \u2013 Semi Modules Types  \n Python Questions and Answers \u2013 Pickle Module  \n Separation Processes Questions and Answers \u2013 Membrane Modules  \n Python Questions and Answers \u2013 Function \u2013 2  \n Python Questions and Answers \u2013 Mapping Functions \u2013 3  \n GCD of Two Numbers in Python  \n Irrigation Engineering Questions and Answers \u2013 Regulation Modules \u2013 Outlet Types  \n Python Program to Generate Random Numbers from 1 to 20 and Append Them to the List  \n JavaScript Questions & Answers \u2013 Modules in JavaScript  \n Python Program to Find the Area and Perimeter of the Circle  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Searching and Sorting in Python Python Programs on Trees Python Programs on Graphs Linked List Programs in Python Python MCQ Questions Popular Pages: Python Programming Examples Java Applet Programs Arduino MCQ Questions JavaScript MCQ Questions Compiler Design MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Searching and Sorting in Python Python Programs on Trees Python Programs on Graphs Linked List Programs in Python Python MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Python Programming Examples Java Applet Programs Arduino MCQ Questions JavaScript MCQ Questions Compiler Design MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.553 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 15:00:23  \n  Compression = gzip "
    },
    {
      "id": "913",
      "question": "Which of the following functions returns a dictionary mapping group names to group numbers? \n",
      "answerA": " re.compile.group \n",
      "answerB": " re.compile.groupindex \n",
      "answerC": " re.compile.index \n",
      "answerD": " re.compile.indexgroup ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The function re.compile.groupindex returns a dictionary mapping group names to group numbers. \n \n \n \n \n \n "
    },
    {
      "id": "914",
      "question": "Which of the following statements regarding the output of the function re.match is incorrect? \n",
      "answerA": " \u2018pq*\u2019 will match \u2018pq\u2019 \n",
      "answerB": " \u2018pq?\u2019 matches \u2018p\u2019 \n",
      "answerC": " \u2018p{4}, q\u2019 does not match \u2018pppq\u2019 \n",
      "answerD": " \u2018pq+\u2019 matches \u2018p\u2019 ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " All of the above statements are correct except that \u2018pq+\u2019 match \u2018p\u2019. \u2018pq+\u2019 will match \u2018p\u2019 followed by any non-zero number of q\u2019s, but it will not match \u2018p\u2019. \n "
    },
    {
      "id": "915",
      "question": "The following Python code snippet results in an error. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n c = re . compile ( r '( \\d +)( \\[ A-Z]+)([a-z]+)' ) \nc. groupindex \n ",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " In the code shown above, none of the group names match the group numbers. In such a case, no error is thrown. The output of the code is an empty dictionary, that is, {}. \n \n \n    \nSubscribe Now:  Python Newsletter  |  Important Subjects Newsletters \n \n \n \n \n \n \n \n "
    },
    {
      "id": "916",
      "question": "Which of the following functions does not accept any argument? \n",
      "answerA": " re.purge \n",
      "answerB": " re.compile \n",
      "answerC": " re.findall \n",
      "answerD": " re.match ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The function re.purge is used to clear the cache and it does not accept any arguments. \n "
    },
    {
      "id": "917",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n a  =   re . compile ( '0-9' ) \na. findall ( '3 trees' ) \n ",
      "answerA": " [] \n",
      "answerB": " [\u20183\u2019] \n",
      "answerC": " Error \n",
      "answerD": " [\u2018trees\u2019] ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The output of the code shown above is an empty list. This is due to the way the arguments have been passed to the function re.compile. Carefully read the code shown below in order to understand the correct syntax: \n>>> a = re.compile(\u2018[0-9]\u2019) \n>>> a.findall(\u20183 trees\u2019) \n[\u20183\u2019]. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "918",
      "question": "Which of the following lines of code will not show a match? \n",
      "answerA": " >>> re.match(\u2018ab*\u2019, \u2018a\u2019) \n",
      "answerB": " >>> re.match(\u2018ab*\u2019, \u2018ab\u2019) \n",
      "answerC": " >>> re.match(\u2018ab*\u2019, \u2018abb\u2019) \n",
      "answerD": " >>> re.match(\u2018ab*\u2019, \u2018ba\u2019) ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " In the code shown above, ab* will match to \u2018a\u2019 or \u2018ab\u2019 or \u2018a\u2019 followed by any number of b\u2019s. Hence the only line of code from the above options which does not result in a match is: \n>>> re.match(\u2018ab*\u2019, \u2018ba\u2019). \n "
    },
    {
      "id": "919",
      "question": "What will be the output of the following Python code? \n m  =   re . search ( 'a' ,   'The blue umbrella' ) \nm. re . pattern \n ",
      "answerA": " {} \n",
      "answerB": "  \u2018The blue umbrella\u2019 \n",
      "answerC": " \u2018a\u2019 \n",
      "answerD": " No output ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The PatternObject is used to produce the match. The real regular expression pattern string must be retrieved from the PatternObject\u2019s pattern method. Hence the output of this code is: \u2018a\u2019. \n "
    },
    {
      "id": "920",
      "question": "What will be the output of the following Python code? \n re . sub ( 'Y' ,   'X' ,   'AAAAAA' ,  count = 2 ) \n ",
      "answerA": " \u2018YXAAAA\u2019 \n",
      "answerB": " (\u2018YXAAAA\u2019) \n",
      "answerC": " (\u2018AAAAAA\u2019) \n",
      "answerD": " \u2018AAAAAA\u2019 ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above demonstrates the function re.sub, which returns a string. The pattern specified is substituted in the string and returned. Hence the output of the code shown above is:  \u2018AAAAAA\u2019. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 Regular Expressions \u2013 4 \u00bb  Next - Python Questions and Answers \u2013 Files \u2013 1   Related Posts: Apply for  Programming Internship \n Check  Python Books \n Practice  Programming MCQs \n Check  Information Technology Books \n Apply for  Python Internship \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 Regular Expressions \u2013 3  \n Python Multiple Choice Questions \u2013 Regular Expressions  \n Python Questions and Answers \u2013 Regular Expressions \u2013 2  \n Python Questions and Answers \u2013 Regular Expressions \u2013 4  \n Python Questions and Answers \u2013 Regular Expressions \u2013 1  \n Theory of Computation \u2013 Regular Expressions and Regular Languages  \n JavaScript Questions & Answers \u2013 Pattern Matching and Regular Expressions  \n Compilers Questions and Answers \u2013 Finite Automata and Regular Expressions \u2013 2  \n Automata Theory Questions and Answers \u2013  Building Regular Expressions  \n Bioinformatics Questions and Answers \u2013 Motif and Domain Databases Using Regular Expressions  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Linked List Programs in Python Python Programs on Graphs Python Programs on Trees Searching and Sorting in Python Python MCQ Questions Popular Pages: Python Programming Examples C# Programs on LINQ JavaScript MCQ Questions C++ Algorithm Library Neural Networks MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Linked List Programs in Python Python Programs on Graphs Python Programs on Trees Searching and Sorting in Python Python MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Python Programming Examples C# Programs on LINQ JavaScript MCQ Questions C++ Algorithm Library Neural Networks MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.174 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 01:22:44  \n  Compression = gzip "
    },
    {
      "id": "921",
      "question": "What will be the output of the following Python code? \n \n \n \n \n \n re . split ( r '(",
      "answerA": "(t)' ,   'Maths is a difficult subject' ) \n ",
      "answerB": " [\u2018Maths\u2019, \u2018is\u2019, \u2018a\u2019, \u2018difficult\u2019, \u2018subject\u2019] \n",
      "answerC": " \u2018Maths is a difficult subject\u2019 \n",
      "answerD": " [\u2018M\u2019, \u2018a\u2019, \u2018t\u2019, \u2018hs is a difficult subject\u2019] ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above demonstrates the use of the function re.match. The first argument of this function specifies the pattern. Since the pattern contains groups, those groups are incorporated in the resultant list as well. Hence the output of the code shown above is [\u2018M\u2019, \u2018a\u2019, \u2018t\u2019, \u2018hs is a difficult subject\u2019]. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "922",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n import   re \ns  =   'abc123 xyz666 lmn-11 def77' \n re . sub ( r ' \\b ([a-z]+)( \\d +)' ,  r ' \\2 \\1 :' ,  s ) \n ",
      "answerA": " \u2018123abc: 666xyz: lmn-11 77def:\u2019 \n",
      "answerB": " \u201877def: lmn-11: 666xyz: 123abc\u2019 \n",
      "answerC": " \u2018abc123:\u2019, \u2018xyz666:\u2019, \u2018lmn-11:\u2019, \u2018def77:\u2019 \n",
      "answerD": " \u2018abc123: xyz666: lmn-11: def77\u2019 ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The function re.sub returns a string produced by replacing every non overlapping occurrence of the first argument with the second argument in the third argument. Hence the output is: \u2018123abc: 666xyz: lmn-11 77def:\u2019  \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "923",
      "question": "What will be the output of the following Python code? \n re . subn ( 'A' ,   'X' ,   'AAAAAA' ,  count = 4 ) \n ",
      "answerA": " \u2018XXXXAA, 4\u2019 \n",
      "answerB": " (\u2018AAAAAA\u2019, 4) \n",
      "answerC": " (\u2018XXXXAA\u2019, 4) \n",
      "answerD": " \u2018AAAAAA, 4\u2019 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The line of code shown above demonstrates the function re.subn. This function is very similar to the function re.sub except that in the former, a tuple is returned instead of a string. The output of the code shown above is: (\u2018XXXXAA\u2019, 4). \n "
    },
    {
      "id": "924",
      "question": " What will be the output of the following Python code? \n n  =   re . sub ( r ' \\w +' ,   'Hello' ,   'Cats and dogs' ) \n ",
      "answerA": "  \n     Hello\r\n    Hello\r\n    Hello \n ",
      "answerB": " \u2018Hello Hello Hello\u2019 \n",
      "answerC": " [\u2018Hello\u2019, \u2018Hello\u2019, \u2018Hello\u2019] \n",
      "answerD": " (\u2018Hello\u2019, \u2018Hello\u2019, \u2018Hello\u2019) ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above demonstrates the function re.sub. Since the string given as an argument consists of three words. The output of the code is: \u2018Hello Hello Hello\u2019. Had the string consisted of 4 words, the output would be: \u2018Hello Hello Hello Hello\u2019 \n "
    },
    {
      "id": "925",
      "question": "What will be the output of the following Python code? \n w  =   re . compile ( '[A-Za-z]+' ) \nw. findall ( 'It will rain today' ) \n ",
      "answerA": " \u2018It will rain today\u2019 \n",
      "answerB": " (\u2018It will rain today\u2019) \n",
      "answerC": " [\u2018It will rain today\u2019] \n",
      "answerD": " [\u2018It\u2019, \u2018will\u2019, \u2018rain\u2019, \u2018today\u2019] ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above demonstrates the function re.findall. Since all the words in the string match the criteria, the output of the code is: [\u2018It\u2019, \u2018will\u2019, \u2018rain\u2019, \u2018today\u2019]. \n "
    },
    {
      "id": "926",
      "question": "In the functions re.search.start(group) and re.search.end(group), if the argument groups not specified, it defaults to __________ \n",
      "answerA": " Zero \n",
      "answerB": " None \n",
      "answerC": " One \n",
      "answerD": " Error ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " In the functions re.search.start(group) and re.search.end(group), if the argument groups not specified, it defaults to Zero. \n "
    },
    {
      "id": "927",
      "question": " What will be the output of the following Python code? \n re . split ( r ' \\s +' ,   'Chrome is better than explorer' ,  maxspilt = 3 ) \n ",
      "answerA": " [\u2018Chrome\u2019, \u2018is\u2019, \u2018better\u2019, \u2018than\u2019,  \u2018explorer\u2019] \n",
      "answerB": " [\u2018Chrome\u2019, \u2018is\u2019, \u2018better\u2019, \u2018than explorer\u2019] \n",
      "answerC": " (\u2018Chrome\u2019, \u2018is\u2019, \u2018better\u2019, \u2018than explorer\u2019) \n",
      "answerD": " \u2018Chrome is better\u2019 \u2018than explorer\u2019 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above demonstrates the use of the function re.split, including the use of maxsplit. Since maxsplit is equal to 3, the output of the code shown above is:[\u2018Chrome\u2019, \u2018is\u2019, \u2018better\u2019, \u2018than explorer\u2019] \n "
    },
    {
      "id": "928",
      "question": "What will be the output of the following Python code? \n a = re . compile ( '[0-9]+' ) \na. findall ( '7 apples and 3 mangoes' ) \n ",
      "answerA": " [\u2018apples\u2019 \u2018and\u2019 \u2018mangoes\u2019] \n",
      "answerB": " (7, 3) \n",
      "answerC": " [\u20187\u2019, \u20183\u2019] \n",
      "answerD": " Error ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above demonstrates the use of the functions re.compile and re.findall. Since we have specified in the code that only digits from 0-9 be found, hence the output of this code is: [\u20187\u2019, \u20183\u2019]. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 Regular Expressions \u2013 3 \u00bb  Next - Python Questions and Answers \u2013 Regular Expressions \u2013 5   Related Posts: Apply for  Python Internship \n Check  Information Technology Books \n Check  Python Books \n Apply for  Programming Internship \n Practice  Programming MCQs \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 Regular Expressions \u2013 2  \n Python Questions and Answers \u2013 Regular Expressions \u2013 3  \n Python Questions and Answers \u2013 Regular Expressions \u2013 1  \n Python Questions and Answers \u2013 Regular Expressions \u2013 5  \n Python Multiple Choice Questions \u2013 Regular Expressions  \n PHP Multiple Choice Questions \u2013 Strings and Regular Expressions  \n Python Program to Implement Stack  \n JavaScript Questions & Answers \u2013 Pattern Matching and Regular Expressions  \n Python Questions and Answers \u2013 Global vs Local Variables \u2013 1  \n Python Program to Reverse a Stack using Recursion  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python Programs on Trees Searching and Sorting in Python Linked List Programs in Python Python Programs on Graphs Python MCQ Questions Popular Pages: Python Programming Examples Event Handling in Java with Examples C# String Programs C++ Algorithm Library JavaScript MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python Programs on Trees Searching and Sorting in Python Linked List Programs in Python Python Programs on Graphs Python MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Python Programming Examples Event Handling in Java with Examples C# String Programs C++ Algorithm Library JavaScript MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.317 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 00:28:14  \n  Compression = gzip "
    },
    {
      "id": "929",
      "question": "What will be the output of the following Python code? \n \n \n \n \n \n re . split ( r '(n \\d )=' ,   'n1=3.1, n2=5, n3=4.565' ) \n ",
      "answerA": " Error \n",
      "answerB": " [\u201d, \u2018n1\u2019, \u20183.1, \u2018, \u2018n2\u2019, \u20185, \u2018, \u2018n3\u2019, \u20184.565\u2019] \n",
      "answerC": " [\u2018n1\u2019, \u20183.1, \u2018, \u2018n2\u2019, \u20185, \u2018, \u2018n3\u2019, \u20184.565\u2019] \n",
      "answerD": " [\u20183.1, \u2018, \u20185, \u2018, \u20184.565\u2019] ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " In the snippet of code shown above, we extract the numbers as a list of floating point values, including the initial empty string. The example shown above demonstrate how groups in the regular expression influence the result of re.split. Hence the output of the code shown above is: \n[\u201d, \u2018n1\u2019, \u20183.1, \u2018, \u2018n2\u2019, \u20185, \u2018, \u2018n3\u2019, \u20184.565\u2019]. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "930",
      "question": "The function of re.search is __________ \n",
      "answerA": " Matches a pattern at the start of the string \n",
      "answerB": " Matches a pattern at the end of the string \n",
      "answerC": " Matches a pattern from any part of a string \n",
      "answerD": " Such a function does not exist ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The re module of Python consists of a function re.search. It\u2019s function is to match a pattern from anywhere in a string. \n "
    },
    {
      "id": "931",
      "question": "Which of the following functions creates a Python object? \n",
      "answerA": " re.compile(str) \n",
      "answerB": " re.assemble(str) \n",
      "answerC": " re.regex(str) \n",
      "answerD": " re.create(str) ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The function re.compile(srt) compiles a pattern of regular expression into an object of regular expression. Hence re.compile(str) is the only function from the above options which creates an object. \n \n \n    \nSubscribe Now:  Python Newsletter  |  Important Subjects Newsletters \n \n \n \n \n \n \n \n "
    },
    {
      "id": "932",
      "question": "Which of the following pattern matching modifiers permits whitespace and comments inside the regular expression? \n",
      "answerA": " re.L \n",
      "answerB": " re.S \n",
      "answerC": " re.U \n",
      "answerD": " re.X ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The modifier re.X allows whitespace and comments inside the regular expressions. \n "
    },
    {
      "id": "933",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n s  =   'welcome home' \nm  =   re . match ( r '(.*)(.*?)' ,  s ) \n print ( m. group ( ) ) \n ",
      "answerA": " (\u2018welcome\u2019, \u2018home\u2019) \n",
      "answerB": " [\u2018welcome\u2019, \u2018home\u2019] \n",
      "answerC": " welcome home \n",
      "answerD": " [\u2018welcome\u2019 // \u2018home\u2019\t] ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above shows the function re.match combined with the use of special characters. Hence the output of this code is: welcome home. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "934",
      "question": "The function of re.match is ____________ \n",
      "answerA": " Error \n",
      "answerB": " Matches a pattern anywhere in the string \n",
      "answerC": " Matches a pattern at the end of the string \n",
      "answerD": " Matches a pattern at the start of the string ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The function of re.match matches a pattern at the start of the string. \n "
    },
    {
      "id": "935",
      "question": "The special character \\B matches the empty string, but only when it is _____________ \n",
      "answerA": " at the beginning or end of a word \n",
      "answerB": " not at the beginning or end of a word \n",
      "answerC": " at the beginning of the word \n",
      "answerD": " at the end of the word ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The special character \\B matches the empty string, but only when it is not at the beginning or end of a word. \n "
    },
    {
      "id": "936",
      "question": "What will be the output of the following Python code? \n import   re \ns  =   \"A new day\" \nm  =   re . match ( r '(.*)(.*?)' ,  s ) \n print ( m. group ( 2 ) ) \n\u00a0\n print ( m. group ( 0 ) ) \n ",
      "answerA": "  \n No output\r\nA new day \n ",
      "answerB": "  \n No output\r\nNo output \n ",
      "answerC": "  \n [\u2018A\u2019, \u2018new\u2019, \u2018day\u2019]\r\n(\u2018A\u2019, \u2018new\u2019, \u2018day\u2019) \n ",
      "answerD": "  ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above demonstrates the use of the function re.match, with different arguments given to the group method. Hence the first function does not return any output whereas the second function returns the output: A new day \n\u00a0 \u00a0 \n "
    },
    {
      "id": "937",
      "question": "Which of the following special characters matches a pattern only at the end of the string? \n",
      "answerA": " \\B \n",
      "answerB": " \\X \n",
      "answerC": " \\Z \n",
      "answerD": " \\A ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " \\B matches a pattern which is not at the beginning or end of a string. \\X refers to re.VERBOSE. \\A matches a pattern only at the start of a string. \\Z matches a pattern only at the end of a string. \n "
    },
    {
      "id": "938",
      "question": "The output of the following two Python codes are the same. \n p  =   re . compile ( 'hello' ) \nr  =  p. match ( 'hello everyone' ) \n print ( r. group ( 0 ) ) \n\u00a0\nr  =   re . match ( 'hello' ,   'hello everyone' ) \n print ( r. group ( 0 ) ) \n ",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The two codes shown above are equivalent. Both of these codes result in the same output, that is: hello. Hence this statement is true. \n "
    },
    {
      "id": "939",
      "question": "What will be the output of the following Python code? \n re . match ( 'sp(.*)am' ,   'spam' ) \n ",
      "answerA": " <_sre.SRE_Match object; span=(1, 4), match=\u2019spam\u2019> \n",
      "answerB": " <_sre.SRE_Match object; span=(0, 4), match=\u2019spam\u2019> \n",
      "answerC": " No output \n",
      "answerD": " Error ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above demonstrates the function re.match, combined with a special character. The output of the code shown is: <_sre.SRE_Match object; span=(0, 4), match=\u2019spam\u2019> \n "
    },
    {
      "id": "940",
      "question": "Which of the following special characters represents a comment (that is, the contents of the parenthesis are simply ignores)? \n",
      "answerA": " (?:\u2026) \n",
      "answerB": " (?=\u2026) \n",
      "answerC": " (?!\u2026) \n",
      "answerD": " (?#\u2026) ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The special character (?#\u2026) represent a comment, that is, the contents of the parenthesis are simply ignored. \n "
    },
    {
      "id": "941",
      "question": "Which of the codes shown below results in a match? \n",
      "answerA": " re.match(\u2018George(?=Washington)\u2019, \u2018George Washington\u2019) \n",
      "answerB": " re.match(\u2018George(?=Washington)\u2019, \u2018George\u2019) \n",
      "answerC": " re.match(\u2018George(?=Washington)\u2019, \u2018GeorgeWashington\u2019) \n",
      "answerD": " re.match(\u2018George(?=Washington)\u2019, \u2018Georgewashington\u2019) ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above demonstrates the use of the function re.match, along  with the special character ?=. This results in a match only when \u2018George\u2019 is immediately followed by \u2018Washington\u2019. Also, we have not used the module to ignore case. Hence the match is case-sensitive. Therefore the only option which results in a match is: \nre.match(\u2018George(?=Washington)\u2019, \u2018GeorgeWashington\u2019) \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 Regular Expressions \u2013 2 \u00bb  Next - Python Questions and Answers \u2013 Regular Expressions \u2013 4   Related Posts: Apply for  Python Internship \n Check  Python Books \n Apply for  Programming Internship \n Check  Information Technology Books \n Practice  Programming MCQs \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 Regular Expressions \u2013 1  \n Python Multiple Choice Questions \u2013 Regular Expressions  \n Python Questions and Answers \u2013 Regular Expressions \u2013 5  \n Python Questions and Answers \u2013 Regular Expressions \u2013 2  \n Python Questions and Answers \u2013 Regular Expressions \u2013 4  \n Automata Theory Questions and Answers \u2013  Converting Regular Expressions to Automata  \n JavaScript Questions & Answers \u2013 Pattern Matching and Regular Expressions  \n Theory of Computation \u2013 Regular Expressions and Regular Languages  \n PHP Multiple Choice Questions \u2013 Strings and Regular Expressions  \n Data Science Questions and Answers \u2013 Regular Expressions and Text Variables  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python Programs on Trees Searching and Sorting in Python Python Programs on Graphs Linked List Programs in Python Python Programming Examples Popular Pages: Python MCQ Questions Searching and Sorting Algorithms in C String Programs in C++ String Programs in C Java String Programs: Code Examples & Solutions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python Programs on Trees Searching and Sorting in Python Python Programs on Graphs Linked List Programs in Python Python Programming Examples \n   \n \n \n \n \n \n \n   Popular Pages Python MCQ Questions Searching and Sorting Algorithms in C String Programs in C++ String Programs in C Java String Programs: Code Examples & Solutions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.676 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 01:22:42  \n  Compression = gzip "
    },
    {
      "id": "942",
      "question": "What will be the output of the following Python code? \n \n \n \n \n \n re . compile ( 'hello' ,   re . X ) \n ",
      "answerA": " [\u2018h\u2019, \u2018e\u2019, \u2018l\u2019, \u2018l\u2019, \u2018o\u2019] \n",
      "answerB": " re.compile(\u2018hello\u2019, re.VERBOSE) \n",
      "answerC": " Error \n",
      "answerD": " Junk value ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The compile function compiles a pattern of regular expression into an object of regular expression. Re.X is a flag which is also used as re.VERBOSE. Hence the output of this code is: re.compile(\u2018hello\u2019, re.VERBOSE). \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "943",
      "question": "What will be the output of the following Python code? \n re . split ( '[a-c]' ,   '0a3B6' ,   re . I ) \n ",
      "answerA": " Error \n",
      "answerB": " [\u2018a\u2019, \u2018B\u2019] \n",
      "answerC": " [\u20180\u2019, \u20183B6\u2019] \n",
      "answerD": " [\u2018a\u2019] ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The function re.split() splits the string on the basis of the pattern given in the parenthesis. Since we have used the flag e.I (that is, re.IGNORECASE), the output is: [\u20180\u2019, \u20183B6\u2019]. \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n "
    },
    {
      "id": "944",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n re . sub ( 'morning' ,   'evening' ,   'good morning' ) \n ",
      "answerA": " \u2018good evening\u2019 \n",
      "answerB": " \u2018good\u2019 \n",
      "answerC": " \u2018morning\u2019 \n",
      "answerD": " \u2018evening\u2019 ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above first searches for the pattern \u2018morning\u2019 in the string \u2018good morning\u2019 and then replaces this pattern with \u2018evening\u2019. Hence the output of this code is: \u2018good evening\u2019. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "945",
      "question": "The function re.error raises an exception if a particular string contains no match for the given pattern. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The function re.error raises an exception when a string passed to one of its functions here is not a valid regular expression. It does not raise an exception if a particular string does not contain a match for the given pattern. \n "
    },
    {
      "id": "946",
      "question": "What will be the output of the following Python code? \n re . escape ( 'new**world' ) \n ",
      "answerA": " \u2018new world\u2019 \n",
      "answerB": " \u2018new\\\\*\\\\*world\u2019 \n",
      "answerC": " \u2018**\u2019 \n",
      "answerD": " \u2018new\u2019, \u2018*\u2019, \u2018*\u2019, \u2018world\u2019 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The function re.escape escapes all the characters in the pattern other than ASCII letters and numbers. Hence the output of the code shown above is: \u2018new\\\\*\\\\*world\u2019. \n "
    },
    {
      "id": "947",
      "question": "What will be the output of the following Python code? \n re . fullmatch ( 'hello' ,   'hello world' ) \n ",
      "answerA": " No output \n",
      "answerB": " [] \n",
      "answerC": " <_sre.SRE_Match object; span=(0, 5), match='hello'> \n",
      "answerD": " Error ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The function re.fullmatch applies the pattern to the entire string and returns an object if match is found and none if match in not found. In the code shown above, match is not found. Hence there is no output. \n "
    },
    {
      "id": "948",
      "question": "Choose the option wherein the two choices do not refer to the same option. \n",
      "answerA": "  \n    re.I\r\n   re.IGNORECASE \n ",
      "answerB": "  \n    re.M\r\n   re.MULTILINE \n ",
      "answerC": "  \n    re.X\r\n   re.VERBOSE \n ",
      "answerD": "  ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The function re.L is also written as re.LOCALE. There is no function such as re.LOWERCASE in the re module of Python. \n\u00a0 \u00a0 \n "
    },
    {
      "id": "949",
      "question": "The difference between the functions re.sub and re.subn is that re.sub returns a _______________ whereas re.subn returns a __________________ \n",
      "answerA": " string, list \n",
      "answerB": " list, tuple \n",
      "answerC": " string, tuple \n",
      "answerD": " tuple, list ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The difference the functions re.sub and re.subn is that re.sub returns a string whereas re.subn returns a tuple. \n "
    },
    {
      "id": "950",
      "question": "What will be the output of the following Python code? \n re . split ( 'mum' ,   'mumbai*' ,   1 ) \n ",
      "answerA": " Error \n",
      "answerB": " [\u201d, \u2018bai*\u2019] \n",
      "answerC": " [\u201d, \u2018bai\u2019] \n",
      "answerD": " [\u2018bai*\u2019] ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above splits the string based on the pattern given as an argument. Hence the output of the code is: [\u201d, \u2018bai*\u2019]. \n "
    },
    {
      "id": "951",
      "question": "What will be the output of the following Python code? \n re . findall ( 'good' ,   'good is good' ) \n re . findall ( 'good' ,   'bad is good' ) \n ",
      "answerA": "  \n [\u2018good\u2019, \u2018good\u2019]\r\n[\u2018good\u2019] \n ",
      "answerB": "  \n (\u2018good\u2019, \u2018good\u2019)\r\n(good) \n ",
      "answerC": "  \n (\u2018good\u2019)\r\n(\u2018good\u2019) \n ",
      "answerD": " ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The function findall returns a list of all the non overlapping matches in a string. Hence the output of the first function is: [\u2018good\u2019, \u2018good\u2019]  and that of the second function is: [\u2018good\u2019]. \n\u00a0 \u00a0 \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 Regular Expressions \u2013 1 \u00bb  Next - Python Questions and Answers \u2013 Regular Expressions \u2013 3   Related Posts: Apply for  Programming Internship \n Check  Information Technology Books \n Apply for  Python Internship \n Check  Python Books \n Practice  Programming MCQs \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 Regular Expressions \u2013 3  \n Python Questions and Answers \u2013 Regular Expressions \u2013 5  \n Python Multiple Choice Questions \u2013 Regular Expressions  \n Python Questions and Answers \u2013 Regular Expressions \u2013 1  \n Python Questions and Answers \u2013 Regular Expressions \u2013 4  \n Theory of Computation \u2013 Regular Expressions and Regular Languages  \n Compilers Questions and Answers \u2013 Finite Automata and Regular Expressions \u2013 2  \n PHP Multiple Choice Questions \u2013 Strings and Regular Expressions  \n Theory of Computation \u2013 Construction of Regular Expressions from Deterministic Finite Automata  \n Automata Theory Questions and Answers \u2013  Converting Regular Expressions to Automata  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python MCQ Questions Python Programs on Trees Searching and Sorting in Python Linked List Programs in Python Python Programs on Graphs Popular Pages: Python Programming Examples Automata Theory MCQ Questions PHP MCQ Questions Compiler Design MCQ Questions Data Science MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python MCQ Questions Python Programs on Trees Searching and Sorting in Python Linked List Programs in Python Python Programs on Graphs \n   \n \n \n \n \n \n \n   Popular Pages Python Programming Examples Automata Theory MCQ Questions PHP MCQ Questions Compiler Design MCQ Questions Data Science MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.525 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 01:22:42  \n  Compression = gzip "
    },
    {
      "id": "952",
      "question": "The character Dot (that is, \u2018.\u2019) in the default mode, matches any character other than _____________ \n",
      "answerA": " caret \n",
      "answerB": " ampersand \n",
      "answerC": " percentage symbol \n",
      "answerD": " newline ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The character Dot (that is, \u2018,\u2019) in the default mode, matches any character other than newline. If DOTALL flag is used, then it matches any character other than newline. \n \n \n \n \n \n "
    },
    {
      "id": "953",
      "question": "The expression a{5} will match _____________ characters with the previous regular expression. \n",
      "answerA": " 5 or less \n",
      "answerB": " exactly 5 \n",
      "answerC": " 5 or more \n",
      "answerD": " exactly 4 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The character {m} is used to match exactly m characters to the previous regular expression. Hence the expression a{5} will match exactly 5 characters and not less than that. \n "
    },
    {
      "id": "954",
      "question": "________ matches the start of the string. \n    ________ matches the end of the string. \n",
      "answerA": " \u2018^\u2019, \u2018$\u2019 \n",
      "answerB": " \u2018$\u2019, \u2018^\u2019 \n",
      "answerC": " \u2018$\u2019, \u2018?\u2019 \n",
      "answerD": " \u2018?\u2019, \u2018^\u2019 ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " \u2018^\u2019 (carat) matches the start of the string. \n             \u2018$\u2019 (dollar sign) matches the end of the string. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "955",
      "question": "Which of the following will result in an error? \n",
      "answerA": "  \n >>> p = re.compile(\"d\")\r\n>>> p.search(\"door\") \n ",
      "answerB": " >>> p = re.escape(\u2018hello\u2019) \n",
      "answerC": " >>> p = re.subn() \n",
      "answerD": " >>> p = re.purge() ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The function re.subn() will result in an error. This is because subn() requires 3 positional arguments while we have entered none. \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n "
    },
    {
      "id": "956",
      "question": "What will be the output of the following Python code? \n re . split ( ' \\W +' ,   'Hello, hello, hello.' ) \n ",
      "answerA": " [\u2018Hello\u2019, \u2018hello\u2019, \u2018hello.\u2019] \n",
      "answerB": " [\u2018Hello, \u2018hello\u2019, \u2018hello\u2019] \n",
      "answerC": " [\u2018Hello\u2019, \u2018hello\u2019, \u2018hello\u2019, \u2018.\u2019] \n",
      "answerD": " [\u2018Hello\u2019, \u2018hello\u2019, \u2018hello\u2019, \u201d] ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " In the code shown above, the function split() splits the string based on the pattern given as an argument in the parenthesis. Note: split will never split a string on an empty pattern match. Hence the output of this code is: [\u2018Hello\u2019, \u2018hello\u2019, \u2018hello\u2019, \u201d]. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "957",
      "question": "What will be the output of the following Python function? \n \n advertisement \n \n \n \n \n re . findall ( \"hello world\" ,   \"hello\" ,   1 ) \n ",
      "answerA": " [\u201chello\u201d] \n",
      "answerB": " [\t] \n",
      "answerC": " hello \n",
      "answerD": " hello world ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The function findall returns the word matched if and only if both the pattern and the string match completely, that is, they are exactly the same. Observe the example shown below: \n>>> re.findall(\u201chello\u201d, \u201chello\u201d, 1)                                                                                                                                                      The output is: [\u2018hello\u2019]                                                                                                                                                                     Hence the output of the code shown in this question is []. \n "
    },
    {
      "id": "958",
      "question": "Choose the function whose output can be: <_sre.SRE_Match object; span=(4, 8), match=\u2019aaaa\u2019>. \n",
      "answerA": " >>> re.search(\u2018aaaa\u2019, \u201calohaaaa\u201d, 0) \n",
      "answerB": " >>> re.match(\u2018aaaa\u2019, \u201calohaaaa\u201d, 0) \n",
      "answerC": " >>> re.match(\u2018aaa\u2019, \u201calohaaa\u201d, 0) \n",
      "answerD": " >>> re.search(\u2018aaa\u2019, \u201calohaaa\u201d, 0) ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The output shown above is that of a search function, whose pattern is \u2018aaaa\u2019 and the string is that of 8 characters. The only option which matches all these criteria is: \n >>> re.search(\u2018aaaa\u2019, \u201calohaaaa\u201d, 0) \n "
    },
    {
      "id": "959",
      "question": " Which of the following functions clears the regular expression cache? \n",
      "answerA": " re.sub() \n",
      "answerB": " re.pos() \n",
      "answerC": " re.purge() \n",
      "answerD": " re.subn() ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The function which clears the regular expression cache is re.purge(). Note that this function takes zero positional arguments. \n "
    },
    {
      "id": "960",
      "question": "What will be the output of the following Python code? \n import   re \n re . ASCII \n ",
      "answerA": " 8 \n",
      "answerB": " 32 \n",
      "answerC": " 64 \n",
      "answerD": " 256 ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The expression re.ASCII returns the total number of ASCII characters that are present, that is "
    },
    {
      "id": "961",
      "question": "Which of the following functions results in case insensitive matching? \n",
      "answerA": " re.A \n",
      "answerB": " re.U \n",
      "answerC": " re.I \n",
      "answerD": " re.X ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The function re.I (that is, re.IGNORECASE) results in case-insensitive matching. That is, expressions such as [A-Z] will match lowercase characters too. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Multiple Choice Questions \u2013 Regular Expressions \u00bb  Next - Python Questions and Answers \u2013 Regular Expressions \u2013 2   Related Posts: Apply for  Python Internship \n Practice  Programming MCQs \n Check  Information Technology Books \n Check  Python Books \n Apply for  Programming Internship \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 Regular Expressions \u2013 3  \n Python Questions and Answers \u2013 Regular Expressions \u2013 2  \n Python Questions and Answers \u2013 Regular Expressions \u2013 5  \n Python Multiple Choice Questions \u2013 Regular Expressions  \n Python Questions and Answers \u2013 Regular Expressions \u2013 4  \n JavaScript Questions & Answers \u2013 Pattern Matching and Regular Expressions  \n PHP Multiple Choice Questions \u2013 Strings and Regular Expressions  \n Data Science Questions and Answers \u2013 Regular Expressions and Text Variables  \n Theory of Computation \u2013 Regular Expressions and Regular Languages  \n Java Questions & Answers \u2013 Regular Expression  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: C# String Programs Python Programming Examples Python MCQ Questions String Programs in C++ String Programs in C Popular Pages: Java String Programs: Code Examples & Solutions Visual Basic MCQ Questions Event Handling in Java with Examples Python Programs on Trees Searching and Sorting in Python    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics C# String Programs Python Programming Examples Python MCQ Questions String Programs in C++ String Programs in C \n   \n \n \n \n \n \n \n   Popular Pages Java String Programs: Code Examples & Solutions Visual Basic MCQ Questions Event Handling in Java with Examples Python Programs on Trees Searching and Sorting in Python \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.574 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 01:22:42  \n  Compression = gzip "
    },
    {
      "id": "962",
      "question": "Which module in Python supports regular expressions? \n",
      "answerA": " re \n",
      "answerB": " regex \n",
      "answerC": " pyregex \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " re is a part of the standard library and can be imported using: import re. \n \n \n \n \n \n "
    },
    {
      "id": "963",
      "question": "Which of the following creates a pattern object? \n",
      "answerA": " re.create(str) \n",
      "answerB": " re.regex(str) \n",
      "answerC": " re.compile(str) \n",
      "answerD": " re.assemble(str) ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " It converts a given string into a pattern object. \n "
    },
    {
      "id": "964",
      "question": "What does the function re.match do? \n",
      "answerA": " matches a pattern at the start of the string \n",
      "answerB": " matches a pattern at any position in the string \n",
      "answerC": " such a function does not exist \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": "none explanation"
    },
    {
      "id": "965",
      "question": "What does the function re.search do? \n",
      "answerA": " matches a pattern at the start of the string \n",
      "answerB": " matches a pattern at any position in the string \n",
      "answerC": " such a function does not exist \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " It will look for the pattern at any position in the string. \n "
    },
    {
      "id": "966",
      "question": "What will be the output of the following Python code? \n \n \n    \nNote: Join free Sanfoundry classes at  Telegram  or  Youtube \n \n \n \n \n \n \n \n sentence  =   'we are humans' \nmatched  =   re . match ( r '(.*) (.*?) (.*)' ,  sentence ) \n print ( matched. groups ( ) ) \n ",
      "answerA": " (\u2018we\u2019, \u2018are\u2019, \u2018humans\u2019) \n",
      "answerB": " (we, are, humans) \n",
      "answerC": " (\u2018we\u2019, \u2018humans\u2019) \n",
      "answerD": " \u2018we are humans\u2019 ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " This function returns all the subgroups that have been matched. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "967",
      "question": "What will be the output of the following Python code? \n sentence  =   'we are humans' \nmatched  =   re . match ( r '(.*) (.*?) (.*)' ,  sentence ) \n print ( matched. group ( ) ) \n ",
      "answerA": " (\u2018we\u2019, \u2018are\u2019, \u2018humans\u2019) \n",
      "answerB": " (we, are, humans) \n",
      "answerC": " (\u2018we\u2019, \u2018humans\u2019) \n",
      "answerD": " \u2018we are humans\u2019 ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " This function returns the entire match. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "968",
      "question": "What will be the output of the following Python code? \n sentence  =   'we are humans' \nmatched  =   re . match ( r '(.*) (.*?) (.*)' ,  sentence ) \n print ( matched. group ( 2 ) ) \n ",
      "answerA": " \u2018are\u2019 \n",
      "answerB": " \u2018we\u2019 \n",
      "answerC": " \u2018humans\u2019 \n",
      "answerD": " \u2018we are humans\u2019 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " This function returns the particular subgroup. \n "
    },
    {
      "id": "969",
      "question": "What will be the output of the following Python code? \n sentence  =   'horses are fast' \nregex  =   re . compile ( '(?P<animal> \\w +) (?P<verb> \\w +) (?P<adjective> \\w +)' ) \nmatched  =   re . search ( regex ,  sentence ) \n print ( matched. groupdict ( ) ) \n ",
      "answerA": " {\u2018animal\u2019: \u2018horses\u2019, \u2018verb\u2019: \u2018are\u2019, \u2018adjective\u2019: \u2018fast\u2019} \n",
      "answerB": " (\u2018horses\u2019, \u2018are\u2019, \u2018fast\u2019) \n",
      "answerC": " \u2018horses are fast\u2019 \n",
      "answerD": " \u2018are\u2019 ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " This function returns a dictionary that contains all the matches. \n "
    },
    {
      "id": "970",
      "question": "What will be the output of the following Python code? \n sentence  =   'horses are fast' \nregex  =   re . compile ( '(?P<animal> \\w +) (?P<verb> \\w +) (?P<adjective> \\w +)' ) \nmatched  =   re . search ( regex ,  sentence ) \n print ( matched. groups ( ) ) \n ",
      "answerA": " {\u2018animal\u2019: \u2018horses\u2019, \u2018verb\u2019: \u2018are\u2019, \u2018adjective\u2019: \u2018fast\u2019} \n",
      "answerB": " (\u2018horses\u2019, \u2018are\u2019, \u2018fast\u2019) \n",
      "answerC": " \u2018horses are fast\u2019 \n",
      "answerD": " \u2018are\u2019 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " This function returns all the subgroups that have been matched. \n "
    },
    {
      "id": "971",
      "question": "What will be the output of the following Python code? \n sentence  =   'horses are fast' \nregex  =   re . compile ( '(?P<animal> \\w +) (?P<verb> \\w +) (?P<adjective> \\w +)' ) \nmatched  =   re . search ( regex ,  sentence ) \n print ( matched. group ( 2 ) ) \n ",
      "answerA": " {\u2018animal\u2019: \u2018horses\u2019, \u2018verb\u2019: \u2018are\u2019, \u2018adjective\u2019: \u2018fast\u2019} \n",
      "answerB": " (\u2018horses\u2019, \u2018are\u2019, \u2018fast\u2019) \n",
      "answerC": " \u2018horses are fast\u2019 \n",
      "answerD": " \u2018are\u2019 ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " This function returns the particular subgroup. \n More MCQs on Python Regular Expressions: \n \n Python Regular Expressions MCQ (Set 2) \n Python Regular Expressions MCQ (Set 3) \n Python Regular Expressions MCQ (Set 4) \n Python Regular Expressions MCQ (Set 5) \n Python Regular Expressions MCQ (Set 6) \n \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 Pickle Module \u00bb  Next - Python Questions and Answers \u2013 Regular Expressions \u2013 1   Related Posts: Apply for  Programming Internship \n Apply for  Python Internship \n Check  Python Books \n Check  Information Technology Books \n Practice  Programming MCQs \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 Regular Expressions \u2013 3  \n Python Questions and Answers \u2013 Regular Expressions \u2013 1  \n Python Questions and Answers \u2013 Regular Expressions \u2013 2  \n Python Questions and Answers \u2013 Regular Expressions \u2013 5  \n Theory of Computation \u2013 Regular Expressions and Regular Languages  \n PHP Multiple Choice Questions \u2013 Strings and Regular Expressions  \n Python Questions and Answers \u2013 Regular Expressions \u2013 4  \n Automata Theory Questions and Answers \u2013  Converting Regular Expressions to Automata  \n JavaScript Questions & Answers \u2013 Pattern Matching and Regular Expressions  \n Data Science Questions and Answers \u2013 Regular Expressions and Text Variables  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python MCQ Questions Data Science MCQ Questions Automata Theory MCQ Questions JavaScript MCQ Questions PHP MCQ Questions Popular Pages: Compiler Design MCQ Questions Visual Basic MCQ Questions Neural Networks MCQ Questions Python Programs on Trees Java Programming MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python MCQ Questions Data Science MCQ Questions Automata Theory MCQ Questions JavaScript MCQ Questions PHP MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Compiler Design MCQ Questions Visual Basic MCQ Questions Neural Networks MCQ Questions Python Programs on Trees Java Programming MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.489 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 17:49:02  \n  Compression = gzip "
    },
    {
      "id": "972",
      "question": "Which of the following is not a valid mode to open a file? \n",
      "answerA": " ab \n",
      "answerB": " rw \n",
      "answerC": " r+ \n",
      "answerD": " w+ ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Use r+, w+ or a+ to perform both read and write operations using a single file object. \n \n \n \n \n \n "
    },
    {
      "id": "973",
      "question": "What is the difference between r+ and w+ modes? \n",
      "answerA": " no difference \n",
      "answerB": " in r+ the pointer is initially placed at the beginning of the file and the pointer is at the end for w+ \n",
      "answerC": " in w+ the pointer is initially placed at the beginning of the file and the pointer is at the end for r+ \n",
      "answerD": " depends on the operating system ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " none. \n "
    },
    {
      "id": "974",
      "question": "How do you get the name of a file from a file object (fp)? \n",
      "answerA": " fp.name \n",
      "answerB": " fp.file(name) \n",
      "answerC": " self.__name__(fp) \n",
      "answerD": " fp.__name__() ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " name is an attribute of the file object. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "975",
      "question": "Which of the following is not a valid attribute of a file object (fp)? \n",
      "answerA": " fp.name \n",
      "answerB": " fp.closed \n",
      "answerC": " fp.mode \n",
      "answerD": " fp.size ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " fp.size has not been implemented. \n "
    },
    {
      "id": "976",
      "question": "How do you close a file object (fp)? \n",
      "answerA": " close(fp) \n",
      "answerB": " fclose(fp) \n",
      "answerC": " fp.close() \n",
      "answerD": " fp.__close__() ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " close() is a method of the file object. \n \n \n    \nNote: Join free Sanfoundry classes at  Telegram  or  Youtube \n \n \n \n \n \n \n \n "
    },
    {
      "id": "977",
      "question": "How do you get the current position within the file? \n",
      "answerA": " fp.seek() \n",
      "answerB": " fp.tell() \n",
      "answerC": " fp.loc \n",
      "answerD": " fp.pos ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " It gives the current position as an offset from the start of file. \n "
    },
    {
      "id": "978",
      "question": "How do you rename a file? \n",
      "answerA": " fp.name = \u2018new_name.txt\u2019 \n",
      "answerB": " os.rename(existing_name, new_name) \n",
      "answerC": " os.rename(fp, new_name) \n",
      "answerD": " os.set_name(existing_name, new_name) ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " os.rename() is used to rename files. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "979",
      "question": "How do you delete a file? \n",
      "answerA": " del(fp) \n",
      "answerB": " fp.delete() \n",
      "answerC": " os.remove(\u2018file\u2019) \n",
      "answerD": " os.delete(\u2018file\u2019) ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " os.remove() is used to delete files. \n "
    },
    {
      "id": "980",
      "question": "How do you change the file position to an offset value from the start? \n",
      "answerA": " fp.seek(offset, 0) \n",
      "answerB": " fp.seek(offset, 1) \n",
      "answerC": " fp.seek(offset, 2) \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " 0 indicates that the offset is with respect to the start. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "981",
      "question": "What happens if no arguments are passed to the seek function? \n",
      "answerA": " file position is set to the start of file \n",
      "answerB": " file position is set to the end of file \n",
      "answerC": " file position remains unchanged \n",
      "answerD": " error ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " seek() takes at least one argument. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all written questions on Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 Files \u2013 4 \u00bb  Next - Python Questions and Answers \u2013 Operator Overloading   Related Posts: Check  Python Books \n Check  Information Technology Books \n Apply for  Python Internship \n Practice  Programming MCQs \n Apply for  Programming Internship \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 Files \u2013 1  \n Python Questions and Answers \u2013 Files \u2013 4  \n Python Questions and Answers \u2013 Files \u2013 2  \n Python Questions and Answers \u2013 Files \u2013 3  \n Temporary Files in C \u2013 tmpfile() and tmpnam()  \n MATLAB Questions and Answers \u2013 M-Files  \n Difference between I/O on Standard Streams and Files in C  \n Unix Questions and Answers \u2013 Handling Multiple Files and Buffers  \n C++ Programming Questions and Answers \u2013 File Handling  \n C Program to Merge Contents of Two Files into a Third File  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python MCQ Questions C Programs on File Handling Python Programming Examples Linked List Programs in Python Python Programs on Graphs Popular Pages: C Tutorial C# Programs on File Handling Python Programs on Trees Searching and Sorting in Python Object Oriented Programming MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python MCQ Questions C Programs on File Handling Python Programming Examples Linked List Programs in Python Python Programs on Graphs \n   \n \n \n \n \n \n \n   Popular Pages C Tutorial C# Programs on File Handling Python Programs on Trees Searching and Sorting in Python Object Oriented Programming MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.703 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 01:22:45  \n  Compression = gzip "
    },
    {
      "id": "982",
      "question": "In file handling, what does this terms means \u201cr, a\u201d? \n",
      "answerA": " read, append \n",
      "answerB": " append, read \n",
      "answerC": " write, append \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " r- reading,  a-appending. \n \n \n \n \n \n "
    },
    {
      "id": "983",
      "question": "What is the use of \u201cw\u201d in file handling? \n",
      "answerA": " Read \n",
      "answerB": " Write \n",
      "answerC": " Append \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " This opens the file for writing. It will create the file if it doesn\u2019t exist, and if it does, it will overwrite it. \nfh = open(\u201cfilename_here\u201d, \u201cw\u201d). \n "
    },
    {
      "id": "984",
      "question": "What is the use of \u201ca\u201d in file handling? \n",
      "answerA": " Read \n",
      "answerB": " Write \n",
      "answerC": " Append \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " This opens the fhe file in appending mode. That means, it will be open for writing and everything will be written to the end of the file. \nfh =open(\u201cfilename_here\u201d, \u201ca\u201d). \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "985",
      "question": "Which function is used to read all the characters? \n",
      "answerA": " Read() \n",
      "answerB": " Readcharacters() \n",
      "answerC": " Readall() \n",
      "answerD": " Readchar() ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The read function reads all characters fh = open(\u201cfilename\u201d, \u201cr\u201d) \ncontent = fh.read(). \n "
    },
    {
      "id": "986",
      "question": "Which function is used to read single line from file? \n",
      "answerA": " Readline() \n",
      "answerB": " Readlines() \n",
      "answerC": " Readstatement() \n",
      "answerD": " Readfullline() ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The readline function reads a single line from the file fh = open(\u201cfilename\u201d, \u201cr\u201d) \ncontent = fh.readline(). \n \n \n    \nSubscribe Now:  Python Newsletter  |  Important Subjects Newsletters \n \n \n \n \n \n \n \n "
    },
    {
      "id": "987",
      "question": "Which function is used to write all the characters? \n",
      "answerA": " write() \n",
      "answerB": " writecharacters() \n",
      "answerC": " writeall() \n",
      "answerD": " writechar() ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " To write a fixed sequence of characters to a file \nfh = open(\u201chello.txt\u201d,\u201dw\u201d) \nwrite(\u201cHello World\u201d). \n "
    },
    {
      "id": "988",
      "question": "Which function is used to write a list of string in a file? \n",
      "answerA": " writeline() \n",
      "answerB": " writelines() \n",
      "answerC": " writestatement() \n",
      "answerD": " writefullline() ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " With the writeline function you can write a list of strings to a file \nfh = open(\u201chello.txt\u201d, \u201cw\u201d) \nlines_of_text = [\u201ca line of text\u201d, \u201canother line of text\u201d, \u201ca third line\u201d]\nfh.writelines(lines_of_text).  \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "989",
      "question": "Which function is used to close a file in python? \n",
      "answerA": " Close() \n",
      "answerB": " Stop() \n",
      "answerC": " End() \n",
      "answerD": " Closefile() ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " f.close()to close it and free up any system resources taken up by the open file.  \n "
    },
    {
      "id": "990",
      "question": "Is it possible to create a text file in python? \n",
      "answerA": " Yes \n",
      "answerB": " No \n",
      "answerC": " Machine dependent \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Yes we can create a file in python. Creation of file is as shown below. \nfile = open(\u201cnewfile.txt\u201d, \u201cw\u201d) \nfile.write(\u201chello world in the new file\\n\u201d) \nfile.write(\u201cand another line\\n\u201d) \nfile.close(). \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "991",
      "question": "Which of the following are the modes of both writing and reading in binary format in file? \n",
      "answerA": " wb+ \n",
      "answerB": " w \n",
      "answerC": " wb \n",
      "answerD": " w+ ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Here is the description below \n\u201cw\u201d  Opens a file for writing only. Overwrites the file if the file exists. If the file does not exist, creates a new file for writing. \n\u201cwb\u201d Opens a file for writing only in binary format. Overwrites the file if the file exists. If the file does not exist, creates a new file for writing. \n\u201cw+\u201d Opens a file for both writing and reading. Overwrites the existing file if the file exists. If the file does not exist, creates a new file for reading and writing. \n\u201cwb+\u201d Opens a file for both writing and reading in binary format. Overwrites the existing file if the file exists. If the file does not exist, creates a new file for reading and writing. \n \n Sanfoundry Global Education & Learning Series \u2013 Python. \n TTo practice all scripting interview questions on Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 Files \u2013 3 \u00bb  Next - Python Questions and Answers \u2013 Files \u2013 5   Related Posts: Practice  Programming MCQs \n Check  Python Books \n Check  Information Technology Books \n Apply for  Programming Internship \n Apply for  Python Internship \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 Files \u2013 1  \n Python Questions and Answers \u2013 Files \u2013 3  \n Python Program to Append the Content of One File to the End of Another File  \n Python Questions and Answers \u2013 Files \u2013 2  \n Python Questions and Answers \u2013 Files \u2013 5  \n Python Program to Read a String from the User and Append it into a File  \n Temporary Files in C \u2013 tmpfile() and tmpnam()  \n Python Program to Copy One File to Another File  \n Unix Questions and Answers \u2013 Handling Multiple Files and Buffers  \n Difference between I/O on Standard Streams and Files in C  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: C Programs on File Handling C# Programs on File Handling Python Programming Examples Python MCQ Questions Event Handling in Java with Examples Popular Pages: Linked List Programs in Python Java Applet Programs Linux MCQ Questions Python Programs on Trees Searching and Sorting in Python    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics C Programs on File Handling C# Programs on File Handling Python Programming Examples Python MCQ Questions Event Handling in Java with Examples \n   \n \n \n \n \n \n \n   Popular Pages Linked List Programs in Python Java Applet Programs Linux MCQ Questions Python Programs on Trees Searching and Sorting in Python \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.674 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 01:22:45  \n  Compression = gzip "
    },
    {
      "id": "992",
      "question": "Which is/are the basic I/O connections in file? \n",
      "answerA": " Standard Input \n",
      "answerB": " Standard Output \n",
      "answerC": " Standard Errors \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Standard input, standard output and standard error. Standard input is the data that goes to the program. The standard input comes from a keyboard. Standard output is where we print our data with the print keyword. Unless redirected, it is the terminal console. The standard error is a stream where programs write their error messages. It is usually the text terminal.  \n \n \n \n \n \n "
    },
    {
      "id": "993",
      "question": "What will be the output of the following Python code? (If entered name is sanfoundry) \n import   sys print   'Enter your name: ' , name  =   '' while   True :    c  =   sys . stdin . read ( 1 )     if  c  ==   ' \\n ' :        break    name  =  name + c \u00a0 print   'Your name is:' ,  name \n ",
      "answerA": " sanfoundry \n",
      "answerB": " sanfoundry, sanfoundry \n",
      "answerC": " San \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " In order to work with standard I/O streams, we must import the sys module. The read() method reads one character from the standard input. In our example we get a prompt saying \u201cEnter your name\u201d. We enter our name and press enter. The enter key generates the new line character: \\n. \nOutput: \nEnter your name: sanfoundry \n Your name is: sanfoundry \n \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "994",
      "question": "What will be the output of the following Python code? \n \n \n    \nSubscribe Now:  Python Newsletter  |  Important Subjects Newsletters \n \n \n \n \n \n \n \n import   sys sys . stdout . write ( ' Hello \\n ' ) sys . stdout . write ( 'Python \\n ' ) \n ",
      "answerA": " Compilation Error \n",
      "answerB": " Runtime Error \n",
      "answerC": " Hello Python \n",
      "answerD": "  ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": "none explanation"
    },
    {
      "id": "995",
      "question": "What is the pickling? \n",
      "answerA": " It is used for object serialization \n",
      "answerB": " It is used for object deserialization \n",
      "answerC": " None of the mentioned \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": "  Pickle is the standard mechanism for object serialization. Pickle uses a simple stack-based virtual machine that records the instructions used to reconstruct the object. This makes pickle vulnerable to security risks by malformed or maliciously constructed data, that may cause the deserializer to import arbitrary modules and instantiate any object. \n   \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "996",
      "question": "What is unpickling? \n",
      "answerA": " It is used for object serialization \n",
      "answerB": " It is used for object deserialization \n",
      "answerC": " None of the mentioned \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " We have been working with simple textual data. What if we are working with objects rather than simple text? For such situations, we can use the pickle module. This module serializes Python objects. The Python objects are converted into byte streams and written to text files. This process is called pickling. The inverse operation, reading from a file and reconstructing objects is called deserializing or unpickling.  \n "
    },
    {
      "id": "997",
      "question": "What is the correct syntax of open() function? \n",
      "answerA": " file = open(file_name [, access_mode][, buffering]) \n",
      "answerB": " file object = open(file_name [, access_mode][, buffering]) \n",
      "answerC": " file object = open(file_name) \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Open() function correct syntax with the parameter details as shown below: \nfile object = open(file_name [, access_mode][, buffering]) \nHere is parameters\u2019 detail: \nfile_name: The file_name argument is a string value that contains the name of the file that you want to access. \naccess_mode: The access_mode determines the mode in which the file has to be opened, i.e., read, write, append, etc. A complete list of possible values is given below in the table. This is optional parameter and the default file access mode is read (r). \nbuffering: If the buffering value is set to 0, no buffering will take place. If the buffering value is 1, line buffering will be performed while accessing a file. If you specify the buffering value as an integer greater than 1, then buffering action will be performed with the indicated buffer size. If negative, the buffer size is the system default(default behavior).  \n "
    },
    {
      "id": "998",
      "question": "What will be the output of the following Python code? \n fo  =   open ( \"foo.txt\" ,   \"wb\" ) print   \"Name of the file: \" ,  fo. name fo. flush ( ) fo. close ( ) \n ",
      "answerA": " Compilation Error \n",
      "answerB": " Runtime Error \n",
      "answerC": " No Output \n",
      "answerD": " Flushes the file when closing them ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The method flush() flushes the internal buffer. Python automatically flushes the files when closing them. But you may want to flush the data before closing any file.  \n "
    },
    {
      "id": "999",
      "question": "Correct syntax of file.writelines() is? \n",
      "answerA": " file.writelines(sequence) \n",
      "answerB": " fileObject.writelines() \n",
      "answerC": " fileObject.writelines(sequence) \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The method writelines() writes a sequence of strings to the file. The sequence can be any iterable object producing strings, typically a list of strings. There is no return value. \nSyntax \nFollowing is the syntax for writelines() method: \nfileObject.writelines( sequence ). \n "
    },
    {
      "id": "1000",
      "question": "Correct syntax of file.readlines() is? \n",
      "answerA": " fileObject.readlines( sizehint ); \n",
      "answerB": " fileObject.readlines(); \n",
      "answerC": " fileObject.readlines(sequence) \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The method readlines() reads until EOF using readline() and returns a list containing the lines. If the optional sizehint argument is present, instead of reading up to EOF, whole lines totalling approximately sizehint bytes (possibly after rounding up to an internal buffer size) are read. \nSyntax \nFollowing is the syntax for readlines() method: \nfileObject.readlines( sizehint ); \nParameters \nsizehint \u2014 This is the number of bytes to be read from the file.  \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all scripting questions on Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 Files \u2013 2 \u00bb  Next - Python Questions and Answers \u2013 Files \u2013 4   Related Posts: Apply for  Python Internship \n Check  Information Technology Books \n Apply for  Programming Internship \n Practice  Programming MCQs \n Check  Python Books \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 Files \u2013 2  \n Python Questions and Answers \u2013 Files \u2013 1  \n Python Question and Answers \u2013 Sys Module  \n Python Questions and Answers \u2013 Exception Handling \u2013 3  \n Python Program to Remove the nth Index Character from a Non-Empty String  \n Difference between I/O on Standard Streams and Files in C  \n Python Questions and Answers \u2013 Files \u2013 4  \n Python Program to Reverse a Stack using Recursion  \n Python Program to Check String is Palindrome using Stack  \n Python Program to Sort Hyphen Separated Sequence of Words in Alphabetical Order  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python MCQ Questions Linked List Programs in Python Python Programming Examples Python Programs on Trees Python Programs on Graphs Popular Pages: Java String Programs: Code Examples & Solutions C++ Algorithm Library C Programming MCQ Questions String Programs in C C Programs on File Handling    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python MCQ Questions Linked List Programs in Python Python Programming Examples Python Programs on Trees Python Programs on Graphs \n   \n \n \n \n \n \n \n   Popular Pages Java String Programs: Code Examples & Solutions C++ Algorithm Library C Programming MCQ Questions String Programs in C C Programs on File Handling \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.612 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 01:22:42  \n  Compression = gzip "
    },
    {
      "id": "1001",
      "question": "Which are the two built-in functions to read a line of text from standard input, which by default comes from the keyboard? \n",
      "answerA": " Raw_input & Input \n",
      "answerB": " Input & Scan \n",
      "answerC": " Scan & Scanner \n",
      "answerD": " Scanner ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Python provides two built-in functions to read a line of text from standard input, which by default comes from the keyboard. These functions are: \nraw_input and input  \n \n \n \n \n \n "
    },
    {
      "id": "1002",
      "question": "What will be the output of the following Python code? \n str   =   raw_input ( \"Enter your input: \" ) ; print   \"Received input is : \" ,   str \n ",
      "answerA": "  \n Enter your input: Hello Python\r\nReceived input is :  Hello Python \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n ",
      "answerB": "  \n Enter your input: Hello Python\r\nReceived input is :  Hello  \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n ",
      "answerC": "  \n Enter your input: Hello Python\r\nReceived input is :  Python \n ",
      "answerD": " None of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The raw_input([prompt]) function reads one line from standard input and returns it as a string. This would prompt you to enter any string and it would display same string on the screen. When I typed \u201cHello Python!\u201d  \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1003",
      "question": "What will be the output of the following Python code? \n str   =   input ( \"Enter your input: \" ) ; print   \"Received input is : \" ,   str \n ",
      "answerA": "  \n Enter your input: [x*5 for x in range(2,10,2)]\r\nReceived input is :  [x*5 for x in range(2,10,2)] \n \n advertisement \n \n \n \n \n ",
      "answerB": "  \n Enter your input: [x*5 for x in range(2,10,2)]\r\nReceived input is :  [10, 30, 20, 40] \n ",
      "answerC": "  \n Enter your input: [x*5 for x in range(2,10,2)]\r\nReceived input is :  [10, 10, 30, 40] \n ",
      "answerD": " None of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": "none explanation"
    },
    {
      "id": "1004",
      "question": "Which one of the following is not attributes of file? \n",
      "answerA": " closed \n",
      "answerB": " softspace \n",
      "answerC": " rename \n",
      "answerD": " mode ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " rename is not the attribute of file rest all are files attributes. \n \r\nAttribute\tDescription\r\nfile.closed\tReturns true if file is closed, false otherwise.\r\nfile.mode\tReturns access mode with which file was opened.\r\nfile.name\tReturns name of the file.\r\nfile.softspace\tReturns false if space explicitly required with print, true otherwise. \n \n "
    },
    {
      "id": "1005",
      "question": "What is the use of tell() method in python? \n",
      "answerA": " tells you the current position within the file \n",
      "answerB": " tells you the end position within the file \n",
      "answerC": " tells you the file is opened or not \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The tell() method tells you the current position within the file; in other words, the next read or write will occur at that many bytes from the beginning of the file.  \n "
    },
    {
      "id": "1006",
      "question": "What is the current syntax of rename() a file? \n",
      "answerA": " rename(current_file_name, new_file_name) \n",
      "answerB": " rename(new_file_name, current_file_name,) \n",
      "answerC": " rename(()(current_file_name, new_file_name)) \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " This is the correct syntax which has shown below. \nrename(current_file_name, new_file_name)  \n "
    },
    {
      "id": "1007",
      "question": "What is the current syntax of remove() a file? \n",
      "answerA": " remove(file_name) \n",
      "answerB": " remove(new_file_name, current_file_name,) \n",
      "answerC": " remove(() , file_name)) \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " remove(file_name)  \n "
    },
    {
      "id": "1008",
      "question": "What will be the output of the following Python code? \n fo  =   open ( \"foo.txt\" ,   \"rw+\" ) print   \"Name of the file: \" ,  fo. name \u00a0 # Assuming file has following 5 lines # This is 1st line # This is 2nd line # This is 3rd line # This is 4th line # This is 5th line \u00a0 for  index  in   range ( 5 ) :    line  =  fo. next ( )     print   \"Line No %d - %s\"  %  ( index ,  line ) \u00a0 # Close opened file fo. close ( ) \n ",
      "answerA": " Compilation Error \n",
      "answerB": " Syntax Error \n",
      "answerC": " Displays  Output \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " It displays the output as shown below. The method next() is used when a file is used as an iterator, typically in a loop, the next() method is called repeatedly. This method returns the next input line, or raises StopIteration when EOF is hit. \nOutput: \n \r\nName of the file:  foo.txt\r\nLine No 0 - This is 1st line\r\n\r\nLine No 1 - This is 2nd line\r\n\r\nLine No 2 - This is 3rd line\r\n\r\nLine No 3 - This is 4th line\r\n\r\nLine No 4 - This is 5th line \n \n "
    },
    {
      "id": "1009",
      "question": "What is the use of seek() method in files? \n",
      "answerA": " sets the file\u2019s current position at the offset \n",
      "answerB": " sets the file\u2019s previous position at the offset \n",
      "answerC": " sets the file\u2019s current position within the file \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": " a \n",
      "trackName": "Computer Science",
      "explanation": " Sets the file\u2019s current position at the offset. The method seek() sets the file\u2019s current position at the offset. \nFollowing is the syntax for seek() method: \nfileObject.seek(offset[, whence]) \n Parameters \noffset \u2014 This is the position of the read/write pointer within the file. \n whence \u2014 This is optional and defaults to 0 which means absolute file positioning, other values are 1 which means seek relative to the current position and 2 means seek relative to the file\u2019s end. \n \n "
    },
    {
      "id": "1010",
      "question": "What is the use of truncate() method in file? \n",
      "answerA": " truncates the file size \n",
      "answerB": " deletes the content of the file \n",
      "answerC": " deletes the file size \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The method truncate() truncates the file size. Following is the syntax for truncate() method: \nfileObject.truncate( [ size ]) \n Parameters \nsize \u2014 If this optional argument is present, the file is truncated to (at most) that size.  \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all certification questions on Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 Files \u2013 1 \u00bb  Next - Python Questions and Answers \u2013 Files \u2013 3   Related Posts: Check  Python Books \n Check  Information Technology Books \n Apply for  Python Internship \n Apply for  Programming Internship \n Practice  Programming MCQs \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 Files \u2013 3  \n Python Program that Displays which Letters are in First String but not in Second  \n Python Program to Find Common Characters in Two Strings  \n Python Program that Displays Letters that are not Common in Two Strings  \n Python Program to Check if the Substring is Present in the Given String  \n Python Program to Print All Letters Present in Both Strings  \n Python Program to Reverse a Stack using Recursion  \n Python Questions and Answers \u2013 Files \u2013 4  \n Python Program to Find the Larger String without using Built-in Functions  \n Python Questions and Answers \u2013 Files \u2013 1  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python Programs on Trees Searching and Sorting in Python Linked List Programs in Python Python MCQ Questions Python Programs on Graphs Popular Pages: Python Programming Examples C++ Algorithm Library Computer Graphics MCQ Questions C++ STL Java String Programs: Code Examples & Solutions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python Programs on Trees Searching and Sorting in Python Linked List Programs in Python Python MCQ Questions Python Programs on Graphs \n   \n \n \n \n \n \n \n   Popular Pages Python Programming Examples C++ Algorithm Library Computer Graphics MCQ Questions C++ STL Java String Programs: Code Examples & Solutions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.256 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 01:22:42  \n  Compression = gzip "
    },
    {
      "id": "1011",
      "question": "To open a file c:\\scores.txt for reading, we use _____________ \n",
      "answerA": " infile = open(\u201cc:\\scores.txt\u201d, \u201cr\u201d) \n",
      "answerB": " infile = open(\u201cc:\\\\scores.txt\u201d, \u201cr\u201d) \n",
      "answerC": " infile = open(file = \u201cc:\\scores.txt\u201d, \u201cr\u201d) \n",
      "answerD": " infile = open(file = \u201cc:\\\\scores.txt\u201d, \u201cr\u201d) ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Execute help(open) to get more details. \n \n \n \n \n \n "
    },
    {
      "id": "1012",
      "question": "To open a file c:\\scores.txt for writing, we use ____________ \n",
      "answerA": " outfile = open(\u201cc:\\scores.txt\u201d, \u201cw\u201d) \n",
      "answerB": " outfile = open(\u201cc:\\\\scores.txt\u201d, \u201cw\u201d) \n",
      "answerC": " outfile = open(file = \u201cc:\\scores.txt\u201d, \u201cw\u201d) \n",
      "answerD": " outfile = open(file = \u201cc:\\\\scores.txt\u201d, \u201cw\u201d) ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " w is used to indicate that file is to be written to.  \n "
    },
    {
      "id": "1013",
      "question": "To open a file c:\\scores.txt for appending data, we use ____________ \n",
      "answerA": " outfile = open(\u201cc:\\\\scores.txt\u201d, \u201ca\u201d) \n",
      "answerB": " outfile = open(\u201cc:\\\\scores.txt\u201d, \u201crw\u201d) \n",
      "answerC": " outfile = open(file = \u201cc:\\scores.txt\u201d, \u201cw\u201d) \n",
      "answerD": " outfile = open(file = \u201cc:\\\\scores.txt\u201d, \u201cw\u201d) ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " a is used to indicate that data is to be appended.  \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1014",
      "question": "Which of the following statements are true? \n",
      "answerA": " When you open a file for reading, if the file does not exist, an error occurs \n",
      "answerB": " When you open a file for writing, if the file does not exist, a new file is created \n",
      "answerC": " When you open a file for writing, if the file exists, the existing file is overwritten with the new file \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The program will throw an error. \n "
    },
    {
      "id": "1015",
      "question": "To read two characters from a file object infile, we use ____________ \n",
      "answerA": " infile.read(2) \n",
      "answerB": " infile.read() \n",
      "answerC": " infile.readline() \n",
      "answerD": " infile.readlines() ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Execute in the shell to verify. \n \n \n    \nNote: Join free Sanfoundry classes at  Telegram  or  Youtube \n \n \n \n \n \n \n \n "
    },
    {
      "id": "1016",
      "question": "To read the entire remaining contents of the file as a string from a file object infile, we use ____________ \n",
      "answerA": " infile.read(2) \n",
      "answerB": " infile.read() \n",
      "answerC": " infile.readline() \n",
      "answerD": " infile.readlines() ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " read function is used to read all the lines in a file.  \n "
    },
    {
      "id": "1017",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n f  =  None for  i in range  ( 5 ) :     with open ( \"data.txt\" ,  \"w\" )  as f :          if  i  >   2 :              break print ( f. closed ) \n ",
      "answerA": " True \n",
      "answerB": " False \nc) None \nd) Error ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The WITH statement when used with open file guarantees that the file object is closed when the with block exits. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1018",
      "question": "To read the next line of the file from a file object infile, we use ____________ \n",
      "answerA": " infile.read(2) \n",
      "answerB": " infile.read() \n",
      "answerC": " infile.readline() \n",
      "answerD": " infile.readlines() ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Execute in the shell to verify. \n "
    },
    {
      "id": "1019",
      "question": "To read the remaining lines of the file from a file object infile, we use ____________ \n",
      "answerA": " infile.read(2) \n",
      "answerB": " infile.read() \n",
      "answerC": " infile.readline() \n",
      "answerD": " infile.readlines() ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Execute in the shell to verify. \n "
    },
    {
      "id": "1020",
      "question": "The readlines() method returns ____________ \n",
      "answerA": " str \n",
      "answerB": " a list of lines \n",
      "answerC": " a list of single characters \n",
      "answerD": " a list of integers ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Every line is stored in a list and returned. \n More MCQs on Python Files: \n \n Python Files MCQ (Set 2) \n Python Files MCQ (Set 3) \n Python Files MCQ (Set 4) \n Python Files MCQ (Set 5) \n \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 Regular Expressions \u2013 5 \u00bb  Next - Python Questions and Answers \u2013 Files \u2013 2   Related Posts: Apply for  Programming Internship \n Check  Python Books \n Check  Information Technology Books \n Practice  Programming MCQs \n Apply for  Python Internship \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 Files \u2013 4  \n Python Questions and Answers \u2013 Files \u2013 5  \n Python Questions and Answers \u2013 Files \u2013 3  \n Python Questions and Answers \u2013 Files \u2013 2  \n Temporary Files in C \u2013 tmpfile() and tmpnam()  \n MATLAB Questions and Answers \u2013 M-Files  \n Difference between I/O on Standard Streams and Files in C  \n Python Program to Append the Content of One File to the End of Another File  \n Unix Questions and Answers \u2013 Handling Multiple Files and Buffers  \n Python Program to Reverse a Stack using Recursion  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: C Programs on File Handling Python MCQ Questions Python Programming Examples Python Programs on Trees Searching and Sorting in Python Popular Pages: Linked List Programs in Python Python Programs on Graphs Event Handling in Java with Examples C# Programs on File Handling MCA Questions and Answers    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics C Programs on File Handling Python MCQ Questions Python Programming Examples Python Programs on Trees Searching and Sorting in Python \n   \n \n \n \n \n \n \n   Popular Pages Linked List Programs in Python Python Programs on Graphs Event Handling in Java with Examples C# Programs on File Handling MCA Questions and Answers \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.674 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 00:27:04  \n  Compression = gzip "
    },
    {
      "id": "1021",
      "question": "The assignment of more than one function to a particular operator is _______ \n",
      "answerA": "\tOperator over-assignment \n",
      "answerB": "\tOperator overriding \n",
      "answerC": "\tOperator overloading \n",
      "answerD": "\tOperator instance ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The assignment of more than one function to a particular operator is called as operator overloading. \n \n \n \n \n \n "
    },
    {
      "id": "1022",
      "question": "Which of the following is not a class method? \n",
      "answerA": "\tNon-static \n",
      "answerB": "\tStatic \n",
      "answerC": "\tBounded \n",
      "answerD": "\tUnbounded ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The three different class methods in Python are static, bounded and unbounded methods. \n "
    },
    {
      "id": "1023",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n def  add ( c , k ) :\n    c. test = c. test + 1 \n    k = k+ 1 \n class  A:\n     def   __init__ ( self ) :\n         self . test   =   0 \n def  main ( ) :\n    Count = A ( ) \n    k = 0 \n\u00a0\n     for  i  in   range ( 0 , 25 ) :\n        add ( Count , k ) \n     print ( \"Count.test=\" ,  Count. test ) \n     print ( \"k =\" ,  k ) \nmain ( ) \n ",
      "answerA": " Exception is thrown \n",
      "answerB": "  \n Count.test=25\r\nk=25 \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n ",
      "answerC": "  \n Count.test=25\r\nk=0 \n ",
      "answerD": "  ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The program has no error. Here, test is a member of the class while k isn\u2019t. Hence test keeps getting incremented 25 time while k remains "
    },
    {
      "id": "1024",
      "question": " Which of the following Python code creates an empty class? \n",
      "answerA": " \n class  A:\n     return \n ",
      "answerB": " \n \n advertisement \n \n \n \n \n class  A:\n     pass \n ",
      "answerC": " \n class  A: \n ",
      "answerD": " It is not possible to create an empty class ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Execute in python shell to verify. \n "
    },
    {
      "id": "1025",
      "question": "Is the following Python code valid? \n class  B ( object ) :\n   def  first ( self ) :\n     print ( \"First method called\" ) \n   def  second ( ) :\n     print ( \"Second method called\" ) \nob  =  B ( ) \nB. first ( ob ) \n ",
      "answerA": "\tIt isn\u2019t as the object declaration isn\u2019t right \n",
      "answerB": "\tIt isn\u2019t as there isn\u2019t any __init__ method for initializing class members \n",
      "answerC": "\tYes, this method of calling is called unbounded method call \n",
      "answerD": "\tYes, this method of calling is called bounded method call ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The method may be created in the method demonstrated in the code as well and this is called as the unbounded method call. Calling the method using obj.one() is the bounded method call. \n "
    },
    {
      "id": "1026",
      "question": " What are the methods which begin and end with two underscore characters called? \n",
      "answerA": "\tSpecial methods \n",
      "answerB": "\tIn-built methods \n",
      "answerC": "\tUser-defined methods \n",
      "answerD": "\tAdditional methods ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Special methods like __init__ begin and end with two underscore characters. \n "
    },
    {
      "id": "1027",
      "question": " Special methods need to be explicitly called during object creation. \n",
      "answerA": "\tTrue \n",
      "answerB": "\tFalse ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Special methods are automatically called during object creation. \n "
    },
    {
      "id": "1028",
      "question": " What will be the output of the following Python code? \n >>>   class  demo ( ) :\n\t def   __repr__ ( self ) :\n\t\t return   '__repr__ built-in function called' \n\t def   __str__ ( self ) :\n\t\t return   '__str__ built-in function called' \n >>>  s = demo ( ) \n >>>   print ( s ) \n ",
      "answerA": "\tError \n",
      "answerB": "\tNothing is printed \n",
      "answerC": "\t__str__ called \n",
      "answerD": "\t__repr__ called ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " __str__ is used for producing a string representation of an object\u2019s value that Python can evaluate. Execute in python shell to verify. \n "
    },
    {
      "id": "1029",
      "question": "What will be the output of the following Python code? \n >>>   class  demo ( ) :\n\t def   __repr__ ( self ) :\n\t\t return   '__repr__ built-in function called' \n\t def   __str__ ( self ) :\n\t\t return   '__str__  built-in function called' \n >>>  s = demo ( ) \n >>>   print ( s ) \n ",
      "answerA": "\t__str__ called \n",
      "answerB": "\t__repr__ called \n",
      "answerC": "\tError \n",
      "answerD": "\tNothing is printed ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " __str__ is used for producing a string representation of an object\u2019s value that is most readable for humans. Execute in python shell to verify. \n "
    },
    {
      "id": "1030",
      "question": "What is hasattr(obj,name) used for? \n",
      "answerA": "\tTo access the attribute of the object \n",
      "answerB": "\tTo delete an attribute \n",
      "answerC": "\tTo check if an attribute exists or not \n",
      "answerD": "\tTo set an attribute ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " hasattr(obj,name) checks if an attribute exists or not and returns True or False. \n "
    },
    {
      "id": "1031",
      "question": "age = 7 \n print ( hasattr ( stud1 ,   'age' ) ) \n ",
      "answerA": "\tError as age isn\u2019t defined \n",
      "answerB": "\tTrue \n",
      "answerC": "\tFalse \n",
      "answerD": "\t7 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Execute in python shell to verify. \n "
    },
    {
      "id": "1032",
      "question": "What is delattr(obj,name) used for? \n",
      "answerA": "\tTo print deleted attribute \n",
      "answerB": "\tTo delete an attribute \n",
      "answerC": "\tTo check if an attribute is deleted or not \n",
      "answerD": "\tTo set an attribute ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " delattr(obj,name) deletes an attribute in a class. \n "
    },
    {
      "id": "1033",
      "question": "__del__ method is used to destroy instances of a class. \n",
      "answerA": "\tTrue \n",
      "answerB": "\tFalse ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": "  ___del__ method acts as a destructor and is used to destroy objects of classes. \n "
    },
    {
      "id": "1034",
      "question": "What will be the output of the following Python code? \n class  stud:\n   \u2018Base  class   for   all  students\u2019\n    def   __init__ ( self ,  roll_no ,  grade ) :\n       self . roll_no   =  roll_no\n       self . grade   =  grade\n    def  display  ( self ) :\n       print ( \"Roll no : \" ,   self . roll_no ,    \", Grade: \" ,   self . grade ) \n print ( student.__doc__ ) \n ",
      "answerA": "\tException is thrown \n",
      "answerB": "\t__main__ \n",
      "answerC": "\tNothing is displayed \n",
      "answerD": "\tBase class for all students ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": "  ___doc__ built-in class attribute is used to print the class documentation string or none, if undefined. \n "
    },
    {
      "id": "1035",
      "question": "What does print(Test.__name__) display (assuming Test is the name of the class)? \n",
      "answerA": "\t() \n",
      "answerB": "\tException is thrown \n",
      "answerC": "\tTest \n",
      "answerD": "\t__main__ ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": "  __name__ built-in class attribute is used to display the class name. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 Classes and Objects \u2013 1 \u00bb  Next - Python Multiple Choice Questions \u2013 Inheritance   Related Posts: Check  Python Books \n Apply for  Programming Internship \n Apply for  Python Internship \n Practice  Programming MCQs \n Check  Information Technology Books \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 Classes and Objects \u2013 1  \n Python Questions and Answers \u2013 Operator Overloading  \n Python Questions and Answers \u2013 Polymorphism  \n Python Program to Find the Area of a Rectangle Using Classes  \n Python Program to Append, Delete and Display Elements of a List using Classes  \n Python Questions and Answers \u2013 Function \u2013 2  \n Python Program to Find the Gravitational Force between Two Objects  \n Python Questions and Answers \u2013 Inheritance \u2013 2  \n Python Program to Calculate Grade of a Student  \n Python Questions and Answers \u2013 Encapsulation  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Java Programs on Classes and Objects Python MCQ Questions Python Programs on Trees Linked List Programs in Python Python Programs on Graphs Popular Pages: Searching and Sorting in Python Python Programming Examples Training Classes Photos PHP MCQ Questions C# Programs on Functions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Java Programs on Classes and Objects Python MCQ Questions Python Programs on Trees Linked List Programs in Python Python Programs on Graphs \n   \n \n \n \n \n \n \n   Popular Pages Searching and Sorting in Python Python Programming Examples Training Classes Photos PHP MCQ Questions C# Programs on Functions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.642 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 03:15:03  \n  Compression = gzip "
    },
    {
      "id": "1036",
      "question": "_____ represents an entity in the real world with its identity and behaviour. \n",
      "answerA": "\tA method \n",
      "answerB": "\tAn object \n",
      "answerC": "\tA class \n",
      "answerD": "\tAn operator ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " An object represents an entity in the real world that can be distinctly identified. A class may define an object. \n \n \n \n \n \n "
    },
    {
      "id": "1037",
      "question": "_____  is used to create an object. \n",
      "answerA": "\tclass \n",
      "answerB": "\tconstructor \n",
      "answerC": "\tUser-defined functions \n",
      "answerD": "\tIn-built functions ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The values assigned by the constructor to the class members is used to create the object. \n "
    },
    {
      "id": "1038",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n class   test :\n      def   __init__ ( self , a = \"Hello World\" ) :\n          self . a = a\n\u00a0\n      def  display ( self ) :\n          print ( self . a ) \nobj = test ( ) \nobj. display ( ) \n ",
      "answerA": "\tThe program has an error because constructor can\u2019t have default arguments \n",
      "answerB": "\tNothing is displayed \n",
      "answerC": "\t\u201cHello World\u201d is displayed \n",
      "answerD": "\tThe program has an error display function doesn\u2019t have parameters ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The program has no error. \u201cHello World\u201d is displayed. Execute in python shell to verify. \n \n \n    \nSubscribe Now:  Python Newsletter  |  Important Subjects Newsletters \n \n \n \n \n \n \n \n "
    },
    {
      "id": "1039",
      "question": "What is setattr() used for? \n",
      "answerA": "\tTo access the attribute of the object \n",
      "answerB": "\tTo set an attribute \n",
      "answerC": "\tTo check if an attribute exists or not \n",
      "answerD": "\tTo delete an attribute ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " setattr(obj,name,value) is used to set an attribute. If attribute doesn\u2019t exist, then it would be created. \n "
    },
    {
      "id": "1040",
      "question": "What is getattr() used for? \n",
      "answerA": "\tTo access the attribute of the object \n",
      "answerB": "\tTo delete an attribute \n",
      "answerC": "\tTo check if an attribute exists or not \n",
      "answerD": "\tTo set an attribute ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " getattr(obj,name) is used to get the attribute of an object. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1041",
      "question": "What will be the output of the following Python code? \n class  change:\n     def   __init__ ( self ,  x ,  y ,  z ) :\n         self . a   =  x + y + z\n\u00a0\nx  =  change ( 1 , 2 , 3 ) \ny  =   getattr ( x ,   'a' ) \n setattr ( x ,   'a' ,  y+ 1 ) \n print ( x. a ) \n ",
      "answerA": "\t6 \n",
      "answerB": "\t7 \n",
      "answerC": "\tError \n",
      "answerD": "\t0 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " First, a=1+2+3="
    },
    {
      "id": "1042",
      "question": "What will be the output of the following Python code? \n   class   test :\n      def   __init__ ( self , a ) :\n          self . a = a\n\u00a0\n      def  display ( self ) :\n          print ( self . a ) \nobj = test ( ) \nobj. display ( ) \n ",
      "answerA": "\tRuns normally, doesn\u2019t display anything \n",
      "answerB": "\tDisplays 0, which is the automatic default value \n",
      "answerC": "\tError as one argument is required while creating the object \n",
      "answerD": "\tError as display function requires additional argument ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Since, the __init__ special method has another argument a other than self, during object creation, one argument is required. For example: obj=test(\u201cHello\u201d) \n "
    },
    {
      "id": "1043",
      "question": " Is the following Python code correct? \n >>>   class  A:\n\t def   __init__ ( self , b ) :\n\t\t self . b = b\n\t def  display ( self ) :\n\t\t print ( self . b ) \n >>>  obj = A ( \"Hello\" ) \n >>>   del  obj \n ",
      "answerA": "\tTrue \n",
      "answerB": "\tFalse ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " It is possible to delete an object of the class. On further typing obj in the python shell, it throws an error because the defined object has now been deleted. \n "
    },
    {
      "id": "1044",
      "question": "What will be the output of the following Python code? \n class   test :\n     def   __init__ ( self ) :\n         self . variable   =   'Old' \n         self . Change ( self . variable ) \n     def  Change ( self ,  var ) :\n        var  =   'New' \nobj = test ( ) \n print ( obj. variable ) \n ",
      "answerA": "\tError because function change can\u2019t be called in the __init__ function \n",
      "answerB": "\t\u2018New\u2019 is printed \n",
      "answerC": "\t\u2018Old\u2019 is printed \n",
      "answerD": "\tNothing is printed ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " This is because strings are immutable. Hence any change made isn\u2019t reflected in the original string. \n "
    },
    {
      "id": "1045",
      "question": "What is Instantiation in terms of OOP terminology? \n",
      "answerA": "\tDeleting an instance of class \n",
      "answerB": "\tModifying an instance of class \n",
      "answerC": "\tCopying an instance of class \n",
      "answerD": "\tCreating an instance of class ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Instantiation refers to creating an object/instance for a class. \n "
    },
    {
      "id": "1046",
      "question": " What will be the output of the following Python code? \n class  fruits:\n     def   __init__ ( self ,  price ) :\n         self . price   =  price\nobj = fruits ( 50 ) \n\u00a0\nobj. quantity = 10 \nobj. bags = 2 \n\u00a0\n print ( obj. quantity + len ( obj. __dict__ ) ) \n ",
      "answerA": "\t12 \n",
      "answerB": "\t52 \n",
      "answerC": "\t13 \n",
      "answerD": "\t60 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " In the above code, obj.quantity has been initialised to "
    },
    {
      "id": "1047",
      "question": " What will be the output of the following Python code? \n   class  Demo:\n     def   __init__ ( self ) :\n         pass \n\u00a0\n     def   test ( self ) :\n         print ( __name__ ) \n\u00a0\nobj  =  Demo ( ) \nobj. test ( ) \n ",
      "answerA": "\tException is thrown \n",
      "answerB": "\t__main__ \n",
      "answerC": "\tDemo \n",
      "answerD": "\ttest ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Since the above code is being run not as a result of an import from another module, the variable will have value \u201c__main__\u201d. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 Operator Overloading \u00bb  Next - Python Questions and Answers \u2013 Classes and Objects \u2013 2   Related Posts: Check  Python Books \n Check  Information Technology Books \n Practice  Programming MCQs \n Apply for  Programming Internship \n Apply for  Python Internship \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 Classes and Objects \u2013 2  \n Python Program to Find the Area of a Rectangle Using Classes  \n Python Questions and Answers \u2013 Inheritance \u2013 2  \n Python Program to Append, Delete and Display Elements of a List using Classes  \n Python Program to Create Dictionary from an Object  \n Python Multiple Choice Questions \u2013 Inheritance  \n Java Programs on Classes and Objects  \n Python Questions and Answers \u2013 Encapsulation  \n Python Program to Implement Graph  \n Python Program to Implement Stack using Linked List  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Java Programs on Classes and Objects Python Programs on Trees Linked List Programs in Python Python Programs on Graphs Python MCQ Questions Popular Pages: Searching and Sorting in Python Python Programming Examples Training Classes Photos PHP MCQ Questions Programming MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Java Programs on Classes and Objects Python Programs on Trees Linked List Programs in Python Python Programs on Graphs Python MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Searching and Sorting in Python Python Programming Examples Training Classes Photos Programming MCQ Questions C# String Programs \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.614 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 01:22:45  \n  Compression = gzip "
    },
    {
      "id": "1048",
      "question": "Which function is called when the following Python code is executed? \n \n \n \n \n \n f  =  foo ( ) \nformat ( f ) \n ",
      "answerA": " format() \n",
      "answerB": " __format__() \n",
      "answerC": " str() \n",
      "answerD": " __str__() ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Both str(f) and format(f) call f.__str__(). \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1049",
      "question": "Which of the following Python code will print True? \n a  =  foo ( 2 ) \nb  =  foo ( 3 ) \n print ( a  <  b ) \n ",
      "answerA": " \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n class  foo:\n     def   __init__ ( self ,  x ) :\n         self . x   =  x\n     def   __lt__ ( self ,  other ) :\n         if   self . x   <  other. x :\n             return   False \n         else :\n             return   True \n ",
      "answerB": " ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " __lt__ overloads the < operator>. \n \n\u00a0 \u00a0 \n "
    },
    {
      "id": "1050",
      "question": "Which function overloads the + operator? \n",
      "answerA": " __add__() \n",
      "answerB": " __plus__() \n",
      "answerC": " __sum__() \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Refer documentation. \n "
    },
    {
      "id": "1051",
      "question": "Which operator is overloaded by __invert__()? \n",
      "answerA": " ! \n",
      "answerB": " ~ \n",
      "answerC": " ^ \n",
      "answerD": " \u2013 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " __invert__() overloads ~. \n "
    },
    {
      "id": "1052",
      "question": "Which function overloads the == operator? \n",
      "answerA": " __eq__() \n",
      "answerB": " __equ__() \n",
      "answerC": " __isequal__() \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The other two do not exist. \n "
    },
    {
      "id": "1053",
      "question": "Which operator is overloaded by __lg__()? \n",
      "answerA": " < \n",
      "answerB": " > \n",
      "answerC": " != \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " __lg__() is invalid. \n "
    },
    {
      "id": "1054",
      "question": "Which function overloads the >> operator? \n",
      "answerA": " __more__() \n",
      "answerB": " __gt__() \n",
      "answerC": " __ge__() \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " __rshift__() overloads the >> operator. \n "
    },
    {
      "id": "1055",
      "question": "Let A and B be objects of class Foo. Which functions are called when print(A + B) is executed? \n",
      "answerA": " __add__(), __str__() \n",
      "answerB": " __str__(), __add__() \n",
      "answerC": " __sum__(), __str__() \n",
      "answerD": " __str__(), __sum__() ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The function __add__() is called first since it is within the bracket. The function __str__() is then called on the object that we received after adding A and B. \n "
    },
    {
      "id": "1056",
      "question": "Which operator is overloaded by the __or__() function? \n",
      "answerA": " || \n",
      "answerB": " | \n",
      "answerC": " // \n",
      "answerD": " / ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The function __or__() overloads the bitwise OR operator |. \n "
    },
    {
      "id": "1057",
      "question": "Which function overloads the // operator? \n",
      "answerA": " __div__() \n",
      "answerB": " __ceildiv__() \n",
      "answerC": " __floordiv__() \n",
      "answerD": " __truediv__() ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " __floordiv__() is for //. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all interview questions on Python for experienced people,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 Files \u2013 5 \u00bb  Next - Python Questions and Answers \u2013 Classes and Objects \u2013 1   Related Posts: Apply for  Programming Internship \n Apply for  Python Internship \n Check  Information Technology Books \n Practice  Programming MCQs \n Check  Python Books \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 Classes and Objects \u2013 2  \n Python MCQ \u2013 String \u2013 4  \n C++ Programming Questions and Answers \u2013 Operator Overloading \u2013 2  \n Operator Overloading Program in C++  \n Python Program to Implement Stack  \n C++ Programming Questions and Answers \u2013 Operator Overloading \u2013 1  \n Python Program to Reverse a Stack using Recursion  \n Python MCQ \u2013 String \u2013 8  \n Python Program to Implement Stack using Queue  \n Assignment Operator Overloading in C++  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Searching and Sorting in Python Python MCQ Questions Python Programs on Trees Linked List Programs in Python Python Programs on Graphs Popular Pages: Python Programming Examples C++ Algorithm Library Cloud Computing MCQ Questions C# Programs on Functions C# String Programs    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Searching and Sorting in Python Python MCQ Questions Python Programs on Trees Linked List Programs in Python Python Programs on Graphs \n   \n \n \n \n \n \n \n   Popular Pages Python Programming Examples C++ Algorithm Library Cloud Computing MCQ Questions C# Programs on Functions C# String Programs \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.607 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 01:22:45  \n  Compression = gzip "
    },
    {
      "id": "1058",
      "question": "Which of these is not a fundamental features of OOP? \n",
      "answerA": "\tEncapsulation \n",
      "answerB": "\tInheritance \n",
      "answerC": "\tInstantiation \n",
      "answerD": "\tPolymorphism ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Instantiation simply refers to creation of an instance of class. It is not a fundamental feature of OOP. \n \n \n \n \n \n "
    },
    {
      "id": "1059",
      "question": "Which of the following is the most suitable definition for encapsulation? \n",
      "answerA": "\tAbility of a class to derive members of another class as a part of its own definition \n",
      "answerB": "\tMeans of bundling instance variables and methods in order to restrict access to certain class members \n",
      "answerC": "\tFocuses on variables and passing of variables to functions \n",
      "answerD": "\tAllows for implementation of elegant software that is well designed and easily modified ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The values assigned by the constructor to the class members is used to create the object. \n "
    },
    {
      "id": "1060",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n class  Demo:\n     def   __init__ ( self ) :\n         self . a   =   1 \n         self .__b  =   1 \n\u00a0\n     def  display ( self ) :\n         return   self .__b\nobj  =  Demo ( ) \n print ( obj. a ) \n ",
      "answerA": "      The program has an error because there isn\u2019t any function to return self.a \n",
      "answerB": "      The program has an error because b is private and display(self) is returning a private member \n",
      "answerC": "\tThe program runs fine and 1 is printed \n",
      "answerD": "\tThe program has an error as you can\u2019t name a class member using __b ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The program has no error because the class member which is public is printed. 1  is displayed. Execute in python shell to verify. \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n "
    },
    {
      "id": "1061",
      "question": "What will be the output of the following Python code? \n class  Demo:\n     def   __init__ ( self ) :\n         self . a   =   1 \n         self .__b  =   1 \n\u00a0\n     def  display ( self ) :\n         return   self .__b\n\u00a0\nobj  =  Demo ( ) \n print ( obj.__b ) \n ",
      "answerA": "\tThe program has an error because there isn\u2019t any function to return self.a \n",
      "answerB": "\tThe program has an error because b is private and display(self) is returning a private member \n",
      "answerC": "\tThe program has an error because b is private and hence can\u2019t be printed \n",
      "answerD": "\tThe program runs fine and 1 is printed ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Variables beginning with two underscores are said to be private members of the class and they can\u2019t be accessed directly. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1062",
      "question": "Methods of a class that provide access to private members of the class are called as ______ and ______ \n",
      "answerA": "\tgetters/setters \n",
      "answerB": "\t__repr__/__str__ \n",
      "answerC": "\tuser-defined functions/in-built functions \n",
      "answerD": "\t__init__/__del__ ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The purpose of getters and setters is to get(return) and set(assign) private instance variables of a class. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1063",
      "question": " Which of these is a private data field? \n def  Demo:\n def   __init__ ( self ) :\n    __a  =   1 \n     self .__b  =   1 \n     self .__c__  =   1 \n    __d__ =   1 \n ",
      "answerA": "\t__a \n",
      "answerB": "\t__b \n",
      "answerC": "\t__c__ \n",
      "answerD": "\t__d__ ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Variables such as self.__b are private members of the class. \n "
    },
    {
      "id": "1064",
      "question": "What will be the output of the following Python code? \n class  Demo:\n      def   __init__ ( self ) :\n          self . a   =   1 \n          self .__b  =   1 \n\u00a0\n      def  get ( self ) :\n          return   self .__b\n\u00a0\nobj  =  Demo ( ) \n print ( obj. get ( ) ) \n ",
      "answerA": "\tThe program has an error because there isn\u2019t any function to return self.a \n",
      "answerB": "\tThe program has an error because b is private and display(self) is returning a private member \n",
      "answerC": "\tThe program has an error because b is private and hence can\u2019t be printed \n",
      "answerD": "\tThe program runs fine and 1 is printed ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Here, get(self) is a member of the class. Hence, it can even return a private member of the class. Because of this reason, the program runs fine and 1 is printed. \n "
    },
    {
      "id": "1065",
      "question": "What will be the output of the following Python code? \n class  Demo:\n      def   __init__ ( self ) :\n          self . a   =   1 \n          self .__b  =   1 \n      def  get ( self ) :\n          return   self .__b\nobj  =  Demo ( ) \nobj. a = 45 \n print ( obj. a ) \n ",
      "answerA": "\tThe program runs properly and prints 45 \n",
      "answerB": "\tThe program has an error because the value of members of a class can\u2019t be changed from outside the class \n",
      "answerC": "\tThe program runs properly and prints 1 \n",
      "answerD": "\tThe program has an error because the value of members outside a class can only be changed as self.a=45 ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " It is possible to change the values of public class members using the object of the class. \n "
    },
    {
      "id": "1066",
      "question": " Private members of a class cannot be accessed. \n",
      "answerA": "\tTrue \n",
      "answerB": "\tFalse ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Private members of a class are accessible if written as follows: obj._Classname__privatemember. Such renaming of identifiers is called as name mangling. \n "
    },
    {
      "id": "1067",
      "question": "The purpose of name mangling is to avoid unintentional access of private class members. \n",
      "answerA": "\tTrue \n",
      "answerB": "\tFalse ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Name mangling prevents unintentional access of private members of a class, while still allowing access when needed. Unless the variable is accessed with its mangled name, it will not be found. \n "
    },
    {
      "id": "1068",
      "question": "What will be the output of the following Python code? \n class  fruits:\n     def   __init__ ( self ) :\n         self . price   =   100 \n         self .__bags  =   5 \n     def  display ( self ) :\n         print ( self .__bags ) \nobj = fruits ( ) \nobj. display ( ) \n ",
      "answerA": "\tThe program has an error because display() is trying to print a private class member \n",
      "answerB": "\tThe program runs fine but nothing is printed \n",
      "answerC": "\tThe program runs fine and 5 is printed \n",
      "answerD": "\tThe program has an error because display() can\u2019t be accessed ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Private class members can be printed by methods which are members of the class. \n "
    },
    {
      "id": "1069",
      "question": "What will be the output of the following Python code? \n   class  student:\n     def   __init__ ( self ) :\n         self . marks   =   97 \n         self .__cgpa  =   8.7 \n     def  display ( self ) :\n         print ( self . marks ) \nobj = student ( ) \n print ( obj._student__cgpa ) \n ",
      "answerA": "\tThe program runs fine and 8.7 is printed \n",
      "answerB": "\tError because private class members can\u2019t be accessed \n",
      "answerC": "\tError because the proper syntax for name mangling hasn\u2019t been implemented \n",
      "answerD": "\tThe program runs fine but nothing is printed ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Name mangling has been properly implemented in the code given above and hence the program runs properly. \n "
    },
    {
      "id": "1070",
      "question": " Which of the following is false about protected class members? \n",
      "answerA": "\tThey begin with one underscore \n",
      "answerB": "\tThey can be accessed by subclasses \n",
      "answerC": "\tThey can be accessed by name mangling method \n",
      "answerD": "\tThey can be accessed within a class ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Protected class members can\u2019t be accessed by name mangling. \n "
    },
    {
      "id": "1071",
      "question": "What will be the output of the following Python code? \n class  objects:\n     def   __init__ ( self ) :\n         self . colour   =   None \n         self ._shape  =   \"Circle\"  \n\u00a0\n     def  display ( self ,  s ) :\n         self ._shape  =  s\nobj = objects ( ) \n print ( obj._objects_shape ) \n ",
      "answerA": "\tThe program runs fine because name mangling has been properly implemented \n",
      "answerB": "\tError because the member shape is a protected member \n",
      "answerC": "\tError because the proper syntax for name mangling hasn\u2019t been implemented \n",
      "answerD": "\tError because the member shape is a private member ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Protected members begin with one underscore and they can only be accessed within a class or by subclasses. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 Polymorphism \u00bb  Next - Python Multiple Choice Questions \u2013 Exception Handling   Related Posts: Apply for  Programming Internship \n Check  Python Books \n Check  Information Technology Books \n Practice  Programming MCQs \n Apply for  Python Internship \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Multiple Choice Questions \u2013 Inheritance  \n Object Oriented Programming using C++ Questions and Answers \u2013 Encapsulation  \n Python Questions and Answers \u2013 Polymorphism  \n Python Program to Implement Stack  \n Python Program to Implement Stack using Linked List  \n Python Program to Reverse a Stack using Recursion  \n Python Questions and Answers \u2013 Classes and Objects \u2013 1  \n Python Program to Implement Stack using Two Queues  \n Python Program to Implement Stack using Queue  \n Python Program to Implement Queues using Stack  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python MCQ Questions Python Programs on Trees Searching and Sorting in Python Linked List Programs in Python Python Programs on Graphs Popular Pages: Python Programming Examples Object Oriented Programming MCQ Questions Java Programs on Classes and Objects Advanced C Programming JavaScript MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python MCQ Questions Python Programs on Trees Searching and Sorting in Python Linked List Programs in Python Python Programs on Graphs \n   \n \n \n \n \n \n \n   Popular Pages Python Programming Examples Object Oriented Programming MCQ Questions Java Programs on Classes and Objects Advanced C Programming JavaScript MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.472 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 01:22:48  \n  Compression = gzip "
    },
    {
      "id": "1072",
      "question": " Which of the following best describes polymorphism? \n",
      "answerA": "\tAbility of a class to derive members of another class as a part of its own definition \n",
      "answerB": "\tMeans of bundling instance variables and methods in order to restrict access to certain class members \n",
      "answerC": "\tFocuses on variables and passing of variables to functions \n",
      "answerD": "\tAllows for objects of different types and behaviour to be treated as the same general type ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Polymorphism is a feature of object-oriented programming languages. It allows for the implementation of elegant software that is well designed and easily modified. \n \n \n \n \n \n "
    },
    {
      "id": "1073",
      "question": "What is the biggest reason for the use of polymorphism? \n",
      "answerA": "\tIt allows the programmer to think at a more abstract level \n",
      "answerB": "\tThere is less program code to write \n",
      "answerC": "\tThe program will have a more elegant design and will be easier to maintain and update \n",
      "answerD": "\tProgram code takes up less space ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Polymorphism allows for the implementation of elegant software. \n "
    },
    {
      "id": "1074",
      "question": "What is the use of duck typing? \n",
      "answerA": "\tMore restriction on the type values that can be passed to a given method \n",
      "answerB": "\tNo restriction on the type values that can be passed to a given method \n",
      "answerC": "\tLess restriction on the type values that can be passed to a given method \n",
      "answerD": "\tMakes the program code smaller ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " In Python, any set of classes with a common set of methods can be treated similarly. This is called duck typing. Hence duck typing imposes less restrictions. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1075",
      "question": "What will be the output of the following Python code? \n class  A:\n     def   __str__ ( self ) :\n         return   '1' \n class  B ( A ) :\n     def   __init__ ( self ) :\n         super ( ) . __init__ ( ) \n class  C ( B ) :\n     def   __init__ ( self ) :\n         super ( ) . __init__ ( ) \n def  main ( ) :\n    obj1  =  B ( ) \n    obj2  =  A ( ) \n    obj3  =  C ( ) \n     print ( obj1 ,  obj2 , obj3 ) \nmain ( ) \n ",
      "answerA": "\t1 1 1 \n",
      "answerB": "\t1 2 3 \n",
      "answerC": "\t\u20181\u2019 \u20181\u2019 \u20181\u2019 \n",
      "answerD": "\tAn exception is thrown ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The super().__init__() in the subclasses has been properly invoked and none of other subclasses return any other value. Hence 1 is returned each time the object is created and printed. \n \n \n    \nSubscribe Now:  Python Newsletter  |  Important Subjects Newsletters \n \n \n \n \n \n \n \n "
    },
    {
      "id": "1076",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n class  Demo:\n     def   __init__ ( self ) :\n         self . x   =   1 \n     def  change ( self ) :\n         self . x   =   10 \n class  Demo_derived ( Demo ) :\n     def  change ( self ) :\n         self . x = self . x + 1 \n         return   self . x \n def  main ( ) :\n    obj  =  Demo_derived ( ) \n     print ( obj. change ( ) ) \n\u00a0\nmain ( ) \n ",
      "answerA": "\t11 \n",
      "answerB": "\t2 \n",
      "answerC": "\t1 \n",
      "answerD": "\tAn exception is thrown ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The derived class method change() overrides the base class method. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1077",
      "question": " A class in which one or more methods are only implemented to raise an exception is called an abstract class. \n",
      "answerA": "\tTrue \n",
      "answerB": "\tFalse ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " A class in which one or more methods are unimplemented or implemented for the methods throw an exception is called an abstract class. \n "
    },
    {
      "id": "1078",
      "question": " Overriding means changing behaviour of methods of derived class methods in the base class. \n",
      "answerA": "\tTrue \n",
      "answerB": "\tFalse ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Overriding means if there are two same methods present in the superclass and the subclass, the contents of the subclass method are executed. \n "
    },
    {
      "id": "1079",
      "question": "What will be the output of the following Python code? \n class  A:\n     def   __repr__ ( self ) :\n         return   \"1\" \n class  B ( A ) :\n     def   __repr__ ( self ) :\n         return   \"2\" \n class  C ( B ) :\n     def   __repr__ ( self ) :\n         return   \"3\" \no1  =  A ( ) \no2  =  B ( ) \no3  =  C ( ) \n print ( obj1 ,  obj2 ,  obj3 ) \n ",
      "answerA": "\t1 1 1 \n",
      "answerB": "\t1 2 3 \n",
      "answerC": "\t\u20181\u2019 \u20181\u2019 \u20181\u2019 \n",
      "answerD": "\tAn exception is thrown ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " When different objects are invoked, each of the individual classes return their individual values and hence it is printed. \n "
    },
    {
      "id": "1080",
      "question": "What will be the output of the following Python code? \n class  A:\n     def   __init__ ( self ) :\n         self . multiply ( 15 ) \n         print ( self . i ) \n\u00a0\n     def  multiply ( self ,  i ) :\n         self . i   =   4  * i ; \n class  B ( A ) :\n     def   __init__ ( self ) :\n         super ( ) . __init__ ( ) \n\u00a0\n     def  multiply ( self ,  i ) :\n         self . i   =   2  * i ; \nobj  =  B ( ) \n ",
      "answerA": "\t15 \n",
      "answerB": "\t60 \n",
      "answerC": "\tAn exception is thrown \n",
      "answerD": "\t30 ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The derived class B overrides base class A. \n "
    },
    {
      "id": "1081",
      "question": "What will be the output of the following Python code? \n class  Demo:\n     def  check ( self ) :\n         return   \" Demo's check \"   \n     def  display ( self ) :\n         print ( self . check ( ) ) \n class  Demo_Derived ( Demo ) :\n     def  check ( self ) :\n         return   \" Derived's check \" \nDemo ( ) . display ( ) \nDemo_Derived ( ) . display ( ) \n ",
      "answerA": "\tDemo\u2019s check Derived\u2019s check \n",
      "answerB": "\tDemo\u2019s check Demo\u2019s check \n",
      "answerC": "\tDerived\u2019s check Demo\u2019s check \n",
      "answerD": "\tSyntax error ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Demo().display() invokes the display() method in class Demo and Demo_Derived().display() invokes the display() method in class Demo_Derived.  \n "
    },
    {
      "id": "1082",
      "question": "What will be the output of the following Python code? \n class  A:\n     def   __init__ ( self ) :\n         self . multiply ( 15 ) \n     def  multiply ( self ,  i ) :\n         self . i   =   4  * i ; \n class  B ( A ) :\n     def   __init__ ( self ) :\n         super ( ) . __init__ ( ) \n         print ( self . i ) \n\u00a0\n     def  multiply ( self ,  i ) :\n         self . i   =   2  * i ; \nobj  =  B ( ) \n ",
      "answerA": "\t15 \n",
      "answerB": "\t30 \n",
      "answerC": "\tAn exception is thrown \n",
      "answerD": "\t60 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The derived class B overrides base class A. \n "
    },
    {
      "id": "1083",
      "question": "What will be the output of the following Python code? \n class  Demo:\n     def  __check ( self ) :\n         return   \" Demo's check \" \n     def  display ( self ) :\n         print ( self . check ( ) ) \n class  Demo_Derived ( Demo ) :\n     def  __check ( self ) :\n         return   \" Derived's check \" \nDemo ( ) . display ( ) \nDemo_Derived ( ) . display ( ) \n ",
      "answerA": "\tDemo\u2019s check Derived\u2019s check \n",
      "answerB": "\tDemo\u2019s check Demo\u2019s check \n",
      "answerC": "\tDerived\u2019s check Demo\u2019s check \n",
      "answerD": "\tSyntax error ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The method check is private so it can\u2019t be accessed by the derived class. Execute the code in the Python shell.  \n "
    },
    {
      "id": "1084",
      "question": "What will be the output of the following Python code? \n class  A:\n     def   __init__ ( self ,  x ,  y ) :\n         self . x   =  x\n         self . y   =  y\n     def   __str__ ( self ) :\n         return   1 \n     def   __eq__ ( self ,  other ) :\n         return   self . x  *  self . y   ==  other. x  * other. y \nobj1  =  A ( 5 ,   2 ) \nobj2  =  A ( 2 ,   5 ) \n print ( obj1  ==  obj2 ) \n ",
      "answerA": "\tFalse \n",
      "answerB": "\t1 \n",
      "answerC": "\tTrue \n",
      "answerD": "\tAn exception is thrown ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Since 5*2==2*5, True is printed. Execute it in the Python shell to verify. \n "
    },
    {
      "id": "1085",
      "question": "two ( ) ) \n ",
      "answerA": "\tA \n",
      "answerB": "\tAn exception is thrown \n",
      "answerC": "\tA B \n",
      "answerD": "\tB ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The derived class method two() overrides the method two() in the base class A.  \n "
    },
    {
      "id": "1086",
      "question": " Which of the following statements is true? \n",
      "answerA": "\tA non-private method in a superclass can be overridden \n",
      "answerB": "\tA subclass method can be overridden by the superclass \n",
      "answerC": "\tA private method in a superclass can be overridden \n",
      "answerD": "\tOverriding isn\u2019t possible in Python ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " A public method in the base class can be overridden by the same named method in the subclass. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 Inheritance \u2013 2 \u00bb  Next - Python Questions and Answers \u2013 Encapsulation   Related Posts: Apply for  Python Internship \n Apply for  Programming Internship \n Check  Information Technology Books \n Check  Python Books \n Practice  Programming MCQs \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Object Oriented Programming using C++ Questions and Answers \u2013 Polymorphism  \n C# Questions & Answers \u2013  Polymorphism  \n Python Questions and Answers \u2013 Encapsulation  \n Python Multiple Choice Questions \u2013 Inheritance  \n GCD of Two Numbers in Python  \n Python Questions and Answers \u2013 Dictionary \u2013 2  \n Python Program to Swap Two Numbers without using Third Variable  \n Python Program to Find the Sum of Sine Series  \n Python Program to Find the Sum of Cosine Series  \n C++ Programming Questions and Answers \u2013 C++ Concepts \u2013 3  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python MCQ Questions Searching and Sorting in Python Java Programs on Classes and Objects Python Programs on Trees Linked List Programs in Python Popular Pages: Python Programs on Graphs Python Programming Examples C# Array Programs Object Oriented Programming MCQ Questions C# MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python MCQ Questions Searching and Sorting in Python Java Programs on Classes and Objects Python Programs on Trees Linked List Programs in Python \n   \n \n \n \n \n \n \n   Popular Pages Python Programs on Graphs Python Programming Examples C# Array Programs Object Oriented Programming MCQ Questions C# MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.466 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 01:22:48  \n  Compression = gzip "
    },
    {
      "id": "1087",
      "question": " What type of inheritance is illustrated in the following Python code? \n \n \n \n \n \n class  A ( ) :\n     pass \n class  B ( A ) :\n     pass \n class  C ( B ) :\n     pass \n ",
      "answerA": "\tMulti-level inheritance \n",
      "answerB": "\tMultiple inheritance \n",
      "answerC": "\tHierarchical inheritance \n",
      "answerD": "\tSingle-level inheritance ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " In multi-level inheritance, a subclass derives from another class which itself is derived from another class. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1088",
      "question": "What does single-level inheritance mean? \n",
      "answerA": "\tA subclass derives from a class which in turn derives from another class \n",
      "answerB": "\tA single superclass inherits from multiple subclasses \n",
      "answerC": "\tA single subclass derives from a single superclass \n",
      "answerD": "\tMultiple base classes inherit a single derived class ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " In single-level inheritance, there is a single subclass which inherits from a single superclass. So the class definition of the subclass will be: class B(A): where A is the superclass. \n "
    },
    {
      "id": "1089",
      "question": "What will be the output of the following Python code? \n \n \n    \nSubscribe Now:  Python Newsletter  |  Important Subjects Newsletters \n \n \n \n \n \n \n \n class  A:\n      def   __init__ ( self ) :\n          self .__i  =   1 \n          self . j   =   5 \n\u00a0\n      def  display ( self ) :\n          print ( self .__i ,   self . j ) \n class  B ( A ) :\n      def   __init__ ( self ) :\n          super ( ) . __init__ ( ) \n          self .__i  =   2 \n          self . j   =   7   \nc  =  B ( ) \nc. display ( ) \n ",
      "answerA": "\t2 7 \n",
      "answerB": "\t1 5 \n",
      "answerC": "\t1 7 \n",
      "answerD": "\t2 5 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Any change made in variable i isn\u2019t reflected as it is the private member of the superclass. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1090",
      "question": "Which of the following statements isn\u2019t true? \n",
      "answerA": "\tA non-private method in a superclass can be overridden \n",
      "answerB": "\tA derived class is a subset of superclass \n",
      "answerC": "\tThe value of a private variable in the superclass can be changed in the subclass \n",
      "answerD": "\tWhen invoking the constructor from a subclass, the constructor of superclass is automatically invoked ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " If the value of a private variable in a superclass is changed in the subclass, the change isn\u2019t reflected. \n "
    },
    {
      "id": "1091",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n class  A:\n     def   __init__ ( self , x ) :\n         self . x   =  x\n     def  count ( self , x ) :\n         self . x   =   self . x + 1 \n class  B ( A ) :\n     def   __init__ ( self ,  y = 0 ) :\n        A. __init__ ( self ,   3 ) \n         self . y   =  y\n     def  count ( self ) :\n         self . y  + =   1      \n def  main ( ) :\n    obj  =  B ( ) \n    obj. count ( ) \n     print ( obj. x ,  obj. y ) \nmain ( ) \n ",
      "answerA": "\t3 0 \n",
      "answerB": "\t3 1 \n",
      "answerC": "\t0 1 \n",
      "answerD": "\tAn exception in thrown ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Initially x=3 and y="
    },
    {
      "id": "1092",
      "question": " What will be the output of the following Python code? \n >>>   class  A:\n\t pass \n >>>   class  B ( A ) :\n\t pass \n >>>  obj = B ( ) \n >>>   isinstance ( obj , A ) \n ",
      "answerA": "\tTrue \n",
      "answerB": "\tFalse \nc)\tWrong syntax for isinstance() method \nd)\tInvalid method for classes ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " isinstance(obj,class) returns True if obj is an object class. \n "
    },
    {
      "id": "1093",
      "question": " Which of the following statements is true? \n",
      "answerA": "\tThe __new__() method automatically invokes the __init__ method \n",
      "answerB": "\tThe __init__ method is defined in the object class \n",
      "answerC": "\tThe __eq(other) method is defined in the object class \n",
      "answerD": "\tThe __repr__() method is defined in the object class ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The __eq(other) method is called if any comparison takes place and it is defined in the object class. \n "
    },
    {
      "id": "1094",
      "question": " Method issubclass() checks if a class is a subclass of another class. \n",
      "answerA": "\tTrue \n",
      "answerB": "\tFalse ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Method issubclass() returns True if a class is a subclass of another class and False otherwise. \n "
    },
    {
      "id": "1095",
      "question": "What will be the output of the following Python code? \n class  A:\n     def   __init__ ( self ) :\n         self .__x  =   1 \n class  B ( A ) :\n     def  display ( self ) :\n         print ( self .__x ) \n def  main ( ) :\n    obj  =  B ( ) \n    obj. display ( ) \nmain ( ) \n ",
      "answerA": "\t1 \n",
      "answerB": "\t0 \n",
      "answerC": "\tError, invalid syntax for object declaration \n",
      "answerD": "\tError, private class member can\u2019t be accessed in a subclass ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Private class members in the superclass can\u2019t be accessed in the subclass. \n "
    },
    {
      "id": "1096",
      "question": "What will be the output of the following Python code? \n class  A:\n     def   __init__ ( self ) :\n         self ._x  =   5        \n class  B ( A ) :\n     def  display ( self ) :\n         print ( self ._x ) \n def  main ( ) :\n    obj  =  B ( ) \n    obj. display ( ) \nmain ( ) \n ",
      "answerA": "\tError, invalid syntax for object declaration \n",
      "answerB": "\tNothing is printed \n",
      "answerC": "\t5 \n",
      "answerD": "\tError, private class member can\u2019t be accessed in a subclass ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The class member x is protected, not private and hence can be accessed by subclasses. \n "
    },
    {
      "id": "1097",
      "question": "What will be the output of the following Python code? \n class  A:\n     def   __init__ ( self , x = 3 ) :\n         self ._x  =  x        \n class  B ( A ) :\n     def   __init__ ( self ) :\n         super ( ) . __init__ ( 5 ) \n     def  display ( self ) :\n         print ( self ._x ) \n def  main ( ) :\n    obj  =  B ( ) \n    obj. display ( ) \n\u00a0\nmain ( ) \n ",
      "answerA": "\t5 \n",
      "answerB": "\tError, class member x has two values \n",
      "answerC": "\t3 \n",
      "answerD": "\tError, protected class member can\u2019t be accessed in a subclass ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The super() method re-assigns the variable x with value "
    },
    {
      "id": "1098",
      "question": "What will be the output of the following Python code? \n class  A:\n     def  test1 ( self ) :\n         print ( \" test of A called \" ) \n class  B ( A ) :\n     def   test ( self ) :\n         print ( \" test of B called \" ) \n class  C ( A ) :\n     def   test ( self ) :\n         print ( \" test of C called \" ) \n class  D ( B , C ) :\n     def  test2 ( self ) :\n         print ( \" test of D called \" )         \nobj = D ( ) \nobj. test ( ) \n ",
      "answerA": "  \n test of B called\r\ntest of C called \n ",
      "answerB": "  \n test of C called\r\ntest of B called \n ",
      "answerC": " test of B called \n",
      "answerD": " Error, both the classes from which D derives has same method test() ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Execute in Python shell to verify. If class D(B,C): is switched is class D(C,B): test of C is called. \n "
    },
    {
      "id": "1099",
      "question": "What will be the output of the following Python code? \n class  A:\n     def   test ( self ) :\n         print ( \"test of A called\" ) \n class  B ( A ) :\n     def   test ( self ) :\n         print ( \"test of B called\" ) \n         super ( ) . test ( )   \n class  C ( A ) :\n     def   test ( self ) :\n         print ( \"test of C called\" ) \n         super ( ) . test ( ) \n class  D ( B , C ) :\n     def  test2 ( self ) :\n         print ( \"test of D called\" )       \nobj = D ( ) \nobj. test ( ) \n ",
      "answerA": "  \n test of B called\r\ntest of C called\r\ntest of A called \n ",
      "answerB": "  \n test of C called\r\ntest of B called \n ",
      "answerC": "  \n test of B called\r\ntest of C called \n ",
      "answerD": " Error, all the three classes from which D derives has same method test() ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Since the invoking method, super().test() is called in the subclasses, all the three methods of test() in three different classes is called. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Multiple Choice Questions \u2013 Inheritance \u00bb  Next - Python Questions and Answers \u2013 Polymorphism   Related Posts: Apply for  Python Internship \n Check  Information Technology Books \n Check  Python Books \n Practice  Programming MCQs \n Apply for  Programming Internship \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Multiple Choice Questions \u2013 Inheritance  \n Object Oriented Programming using C++ Questions and Answers \u2013 Single Level Inheritance  \n Object Oriented Programming using C++ Questions and Answers \u2013 Multilevel Inheritance  \n Object Oriented Programming using C++ Questions and Answers \u2013 Types of Inheritance  \n Object Oriented Programming using C++ Questions and Answers \u2013 Derived Class  \n Java Program to Display Method Overriding in a Class using Inheritance Class  \n Java Questions & Answers \u2013 Inheritance \u2013 2  \n Object Oriented Programming using C++ Questions and Answers \u2013 Multiple Inheritance  \n C# Questions & Answers \u2013 Fundamentals of Inheritance  \n Object Oriented Programming using C++ Questions and Answers \u2013 Inheritance  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python MCQ Questions Object Oriented Programming MCQ Questions Linked List Programs in Python Python Programming Examples Python Programs on Trees Popular Pages: Python Programs on Graphs Searching and Sorting in Python C# Programs C# Programs on Functions C++ Programs    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python MCQ Questions Object Oriented Programming MCQ Questions Linked List Programs in Python Python Programming Examples Python Programs on Trees \n   \n \n \n \n \n \n \n   Popular Pages Python Programs on Graphs Searching and Sorting in Python C# Programs C# Programs on Functions C++ Programs \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.279 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 01:22:48  \n  Compression = gzip "
    },
    {
      "id": "1100",
      "question": " Which of the following best describes inheritance? \n",
      "answerA": "\tAbility of a class to derive members of another class as a part of its own definition \n",
      "answerB": "\tMeans of bundling instance variables and methods in order to restrict access to certain class members \n",
      "answerC": "\tFocuses on variables and passing of variables to functions \n",
      "answerD": "\tAllows for implementation of elegant software that is well designed and easily modified ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " If the class definition is class B(A): then class B inherits the methods of class A. This is called inheritance. \n \n \n \n \n \n "
    },
    {
      "id": "1101",
      "question": "Which of the following statements is wrong about inheritance? \n",
      "answerA": "\tProtected members of a class can be inherited \n",
      "answerB": "\tThe inheriting class is called a subclass \n",
      "answerC": "\tPrivate members of a class can be inherited and accessed \n",
      "answerD": "\tInheritance is one of the features of OOP ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Any changes made to the private members of the class in the subclass aren\u2019t reflected in the original members. \n "
    },
    {
      "id": "1102",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n class  Demo:\n     def   __new__ ( self ) :\n         self . __init__ ( self ) \n         print ( \"Demo's __new__() invoked\" ) \n     def   __init__ ( self ) :\n         print ( \"Demo's __init__() invoked\" ) \n class  Derived_Demo ( Demo ) :\n     def   __new__ ( self ) :\n         print ( \"Derived_Demo's __new__() invoked\" ) \n     def   __init__ ( self ) :\n         print ( \"Derived_Demo's __init__() invoked\" ) \n def  main ( ) :\n    obj1  =  Derived_Demo ( ) \n    obj2  =  Demo ( ) \nmain ( ) \n ",
      "answerA": "  \n Derived_Demo\u2019s __init__() invoked\r\nDerived_Demo's __new__() invoked\r\nDemo's __init__() invoked\r\nDemo's __new__() invoked \n \n \n    \nSubscribe Now:  Python Newsletter  |  Important Subjects Newsletters \n \n \n \n \n \n \n \n ",
      "answerB": "  \n Derived_Demo's __new__() invoked\r\nDemo's __init__() invoked\r\nDemo's __new__() invoked \n ",
      "answerC": "  \n Derived_Demo's __new__() invoked\r\nDemo's __new__() invoked \n \n advertisement \n \n \n \n \n ",
      "answerD": "  ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " Since the object for the derived class is declared first, __new__() method of the derived class is invoked first, followed by the constructor and the __new__() method of main class. \n\u00a0 \u00a0 \n "
    },
    {
      "id": "1103",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n class  Test:\n     def   __init__ ( self ) :\n         self . x   =   0 \n class  Derived_Test ( Test ) :\n     def   __init__ ( self ) :\n         self . y   =   1 \n def  main ( ) :\n    b  =  Derived_Test ( ) \n     print ( b. x , b. y ) \nmain ( ) \n ",
      "answerA": "\t0 1 \n",
      "answerB": "\t0 0 \n",
      "answerC": "      Error because class B inherits A but variable x isn\u2019t inherited \n",
      "answerD": "\tError because when object is created, argument must be passed like Derived_Test(1) ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Since the invoking method, Test.__init__(self), isn\u2019t present in the derived class, variable x can\u2019t be inherited. \n "
    },
    {
      "id": "1104",
      "question": "What will be the output of the following Python code? \n class  A ( ) :\n     def  disp ( self ) :\n         print ( \"A disp()\" ) \n class  B ( A ) :\n     pass \nobj  =  B ( ) \nobj. disp ( ) \n ",
      "answerA": "\tInvalid syntax for inheritance \n",
      "answerB": "\tError because when object is created, argument must be passed \n",
      "answerC": "\tNothing is printed \n",
      "answerD": "\tA disp() ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Class B inherits class A hence the function disp () becomes part of class B\u2019s definition. Hence disp() method is properly executed and the line is printed. \n "
    },
    {
      "id": "1105",
      "question": " All subclasses are a subtype in object-oriented programming. \n",
      "answerA": "\tTrue \n",
      "answerB": "      False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " A subtype is something that be substituted for and behave as its parent type. All subclass may not be a subtype in object-oriented programming. \n "
    },
    {
      "id": "1106",
      "question": " When defining a subclass in Python that is meant to serve as a subtype, the subtype Python keyword is used. \n",
      "answerA": "\tTrue \n",
      "answerB": "\tFalse ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " B is a subtype of B if instances of type B can substitute for instances of type A without affecting semantics. \n "
    },
    {
      "id": "1107",
      "question": " Suppose B is a subclass of A, to invoke the __init__ method in A from B, what is the line of code you should write? \n",
      "answerA": "\tA.__init__(self) \n",
      "answerB": "\tB.__init__(self) \n",
      "answerC": "\tA.__init__(B) \n",
      "answerD": "\tB.__init__(A) ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " To invoke the __init__ method in A from B, either of the following should be written: A.__init__(self) or super().__init__(self). \n "
    },
    {
      "id": "1108",
      "question": "What will be the output of the following Python code? \n class  Test:\n     def   __init__ ( self ) :\n         self . x   =   0 \n class  Derived_Test ( Test ) :\n     def   __init__ ( self ) :\n        Test. __init__ ( self ) \n         self . y   =   1 \n def  main ( ) :\n    b  =  Derived_Test ( ) \n     print ( b. x , b. y ) \nmain ( ) \n ",
      "answerA": "\tError because class B inherits A but variable x isn\u2019t inherited \n",
      "answerB": "\t0 0 \n",
      "answerC": "\t0 1 \n",
      "answerD": "\tError, the syntax of the invoking method is wrong ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " Since the invoking method has been properly invoked, variable x from the main class has been properly inherited and it can also be accessed. \n "
    },
    {
      "id": "1109",
      "question": " What will be the output of the following Python code? \n class  A:\n     def   __init__ ( self ,  x =   1 ) :\n         self . x   =  x\n class  der ( A ) :\n     def   __init__ ( self , y  =   2 ) :\n         super ( ) . __init__ ( ) \n         self . y   =  y\n def  main ( ) :\n    obj  =  der ( ) \n     print ( obj. x ,  obj. y ) \nmain ( ) \n ",
      "answerA": "\tError, the syntax of the invoking method is wrong \n",
      "answerB": "\tThe program runs fine but nothing is printed \n",
      "answerC": "\t1 0 \n",
      "answerD": "\t1 2 ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " In the above piece of code, the invoking method has been properly implemented and hence x=1 and y="
    },
    {
      "id": "1110",
      "question": " What does built-in function type do in context of classes? \n",
      "answerA": "\tDetermines the object name of any value \n",
      "answerB": "\tDetermines the class name of any value \n",
      "answerC": "\tDetermines class description of any value \n",
      "answerD": "\tDetermines the file name of any value ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " For example: >>> type((1,)) gives <class \u2018tuple\u2019>. \n "
    },
    {
      "id": "1111",
      "question": " Which of the following is not a type of inheritance? \n",
      "answerA": "\tDouble-level \n",
      "answerB": "\tMulti-level \n",
      "answerC": "\tSingle-level \n",
      "answerD": "\tMultiple ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Multiple, multi-level, single-level and hierarchical inheritance are all types of inheritance.  \n "
    },
    {
      "id": "1112",
      "question": " What does built-in function help do in context of classes? \n",
      "answerA": "\tDetermines the object name of any value \n",
      "answerB": "\tDetermines the class identifiers of any value \n",
      "answerC": "\tDetermines class description of any built-in type \n",
      "answerD": "\tDetermines class description of any user-defined built-in type ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " help() usually gives information of the class on any built-in type or function. \n "
    },
    {
      "id": "1113",
      "question": "two ( ) ) \n ",
      "answerA": "\tA A \n",
      "answerB": "\tA B \n",
      "answerC": "\tB B \n",
      "answerD": "\tAn exception is thrown ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " obj1.two() invokes the method two() in class A which returns \u2018A\u2019 and obj2.two() invokes the  method two() in class B which returns \u2018B\u2019. \n "
    },
    {
      "id": "1114",
      "question": " What type of inheritance is illustrated in the following Python code? \n class  A ( ) :\n     pass \n class  B ( ) :\n     pass \n class  C ( A , B ) :\n     pass \n ",
      "answerA": "\tMulti-level inheritance \n",
      "answerB": "\tMultiple inheritance \n",
      "answerC": "\tHierarchical inheritance \n",
      "answerD": "\tSingle-level inheritance ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " In multiple inheritance, two or more subclasses are derived from the superclass as shown in the above piece of code. \n More MCQs on Python Inheritance: \n \n Python Inheritance MCQ (Set 2) \n \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 Classes and Objects \u2013 2 \u00bb  Next - Python Questions and Answers \u2013 Inheritance \u2013 2   Related Posts: Apply for  Python Internship \n Check  Information Technology Books \n Practice  Programming MCQs \n Apply for  Programming Internship \n Check  Python Books \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 Inheritance \u2013 2  \n Python Questions and Answers \u2013 Encapsulation  \n Python Questions and Answers \u2013 Polymorphism  \n Python Questions and Answers \u2013 Classes and Objects \u2013 1  \n Python Questions and Answers \u2013 Classes and Objects \u2013 2  \n Python Multiple Choice Questions \u2013 Mapping Functions  \n Python Multiple Choice Questions \u2013 Sets  \n Python Multiple Choice Questions \u2013 Exception Handling  \n Python Multiple Choice Questions \u2013 While and For Loops  \n Python Multiple Choice Questions \u2013 List Comprehension  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python MCQ Questions Python Programs on Trees Ruby MCQ Questions Linked List Programs in Python Python Programs on Graphs Popular Pages: C# MCQ Questions Object Oriented Programming MCQ Questions JavaScript MCQ Questions Data Science MCQ Questions Searching and Sorting in Python    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python MCQ Questions Python Programs on Trees Ruby MCQ Questions Linked List Programs in Python Python Programs on Graphs \n   \n \n \n \n \n \n \n   Popular Pages C# MCQ Questions Object Oriented Programming MCQ Questions JavaScript MCQ Questions Data Science MCQ Questions Searching and Sorting in Python \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.867 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 01:23:29  \n  Compression = gzip "
    },
    {
      "id": "1115",
      "question": "What happens if the file is not found in the following Python code? \n \n \n \n \n \n a = False \n while   not  a:\n     try :\n        f_n  =   input ( \"Enter file name\" ) \n        i_f  =   open ( f_n ,   'r' ) \n     except :\n         print ( \"Input file not found\" ) \n ",
      "answerA": " No error \n",
      "answerB": " Assertion error \n",
      "answerC": " Input output error \n",
      "answerD": " Name error ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " In the code shown above, if the input file in not found, then the statement: \u201cInput file not found\u201d is printed on the screen. The user is then prompted to reenter the file name. Error is not thrown.   \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1116",
      "question": "What will be the output of the following Python code? \n lst  =   [ 1 ,   2 ,   3 ] \nlst [ 3 ] \n ",
      "answerA": " NameError \n",
      "answerB": " ValueError \n",
      "answerC": " IndexError \n",
      "answerD": " TypeError ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The snippet of code shown above throws an index error. This is because the index of the list given in the code, that is, 3 is out of range. The maximum index of this list is "
    },
    {
      "id": "1117",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n t [ 5 ] \n ",
      "answerA": " IndexError \n",
      "answerB": " NameError \n",
      "answerC": " TypeError \n",
      "answerD": " ValeError ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The expression shown above results in a name error. This is because the name \u2018t\u2019 is not defined. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1118",
      "question": "What will be the output of the following Python code, if the time module has already been imported? \n 4  +  '3' \n ",
      "answerA": " NameError \n",
      "answerB": " IndexError \n",
      "answerC": " ValueError \n",
      "answerD": " TypeError ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The line of code shown above will result in a type error. This is because the operand \u2018+\u2019 is not supported when we combine the data types \u2018int\u2019 and \u2018str\u2019. Sine this is exactly what we have done in the code shown above, a type error is thrown. \n "
    },
    {
      "id": "1119",
      "question": "What will be the output of the following Python code? \n int ( '65.43' ) \n ",
      "answerA": " ImportError \n",
      "answerB": " ValueError \n",
      "answerC": " TypeError \n",
      "answerD": " NameError ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The snippet of code shown above results in a value error. This is because there is an invalid literal for int() with base 10: \u201965.43\u2019. \n "
    },
    {
      "id": "1120",
      "question": "Compare the following two Python codes shown below and state the output if the input entered in each case is -6? \n CODE  1 \n import   math \nnum = int ( input ( \"Enter a number of whose factorial you want to find\" ) ) \n print ( math . factorial ( num ) ) \n\u00a0\nCODE  2 \nnum = int ( input ( \"Enter a number of whose factorial you want to find\" ) ) \n print ( math . factorial ( num ) ) \n ",
      "answerA": " ValueError, NameError \n",
      "answerB": " AttributeError, ValueError \n",
      "answerC": " NameError, TypeError \n",
      "answerD": " TypeError, ValueError ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The first code results in a ValueError. This is because when we enter the input as -6, we are trying to find the factorial of a negative number, which is not possible. The second code results in a NameError. This is because we have not imported the math module. Hence the name \u2018math\u2019 is undefined. \n "
    },
    {
      "id": "1121",
      "question": "What will be the output of the following Python code? \n def  getMonth ( m ) :\n     if  m < 1   or  m > 12 :\n         raise   ValueError ( \"Invalid\" ) \n     print ( m ) \ngetMonth ( 6 ) \n ",
      "answerA": " ValueError \n",
      "answerB": " Invalid \n",
      "answerC": " 6 \n",
      "answerD": " ValueError(\u201cInvalid\u201d) ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " In the code shown above, since the value passed as an argument to the function is between 1 and 12 (both included), hence the output is the value itself, that is "
    },
    {
      "id": "1122",
      "question": "What will be the output of the following Python code if the input entered is 6? \n valid  =   False \n while   not  valid:\n     try :\n        n = int ( input ( \"Enter a number\" ) ) \n         while  n% 2 == 0 :\n             print ( \"Bye\" ) \n        valid  =   True \n     except   ValueError :\n         print ( \"Invalid\" ) \n ",
      "answerA": " Bye (printed once) \n",
      "answerB": " No output \n",
      "answerC": " Invalid (printed once) \n",
      "answerD": " Bye (printed infinite number of times) ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above results in the word \u201cBye\u201d being printed infinite number of times. This is because an even number has been given as input. If an odd number had been given as input, then there would have been no output. \n "
    },
    {
      "id": "1123",
      "question": "Identify the type of error in the following Python codes? \n Print ( \u201cGood Morning\u201d ) \n print ( \u201cGood night ) \n ",
      "answerA": " Syntax, Syntax \n",
      "answerB": " Semantic, Syntax \n",
      "answerC": " Semantic, Semantic \n",
      "answerD": " Syntax, Semantic ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The first code shows an error detected during execution. This might occur occasionally. The second line of code represents a syntax error. When there is deviation from the rules of a language, a syntax error is thrown. \n "
    },
    {
      "id": "1124",
      "question": "Which of the following statements is true? \n",
      "answerA": " The standard exceptions are automatically imported into Python programs \n",
      "answerB": " All raised standard exceptions must be handled in Python \n",
      "answerC": " When there is a deviation from the rules of a programming language, a semantic error is thrown \n",
      "answerD": " If any exception is thrown in try block, else block is executed ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " When any exception is thrown in try block, except block is executed. If exception in not thrown in try block, else block is executed. When there is a deviation from the rules of a programming language, a syntax error is thrown. The only true statement above is: The standard exceptions are automatically imported into Python programs.   \n "
    },
    {
      "id": "1125",
      "question": "Which of the following is not a standard exception in Python? \n",
      "answerA": " NameError \n",
      "answerB": " IOError \n",
      "answerC": " AssignmentError \n",
      "answerD": " ValueError ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " NameError, IOError and ValueError are standard exceptions in Python whereas Assignment error is not a standard exception in Python. \n "
    },
    {
      "id": "1126",
      "question": "Syntax errors are also known as parsing errors. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Syntax errors are known as parsing errors. Syntax errors are raised when there is a deviation from the rules of a language. Hence the statement is true. \n "
    },
    {
      "id": "1127",
      "question": "An exception is ____________ \n",
      "answerA": " an object \n",
      "answerB": " a special function \n",
      "answerC": " a standard module \n",
      "answerD": " a module ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " An exception is an object that is raised by a function signaling that an unexpected situation has occurred, that the function itself cannot handle. \n "
    },
    {
      "id": "1128",
      "question": "_______________________ exceptions are raised as a result of an error in opening a particular file. \n",
      "answerA": " ValueError \n",
      "answerB": " TypeError \n",
      "answerC": " ImportError \n",
      "answerD": " IOError ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " IOError exceptions are raised as a result of an error in opening or closing a particular file. \n "
    },
    {
      "id": "1129",
      "question": "Which of the following blocks will be executed whether an exception is thrown or not? \n",
      "answerA": " except \n",
      "answerB": " else \n",
      "answerC": " finally \n",
      "answerD": " assert ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The statements in the finally block will always be executed, whether an exception is thrown or not. This clause is used to close the resources used in a code. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 Exception Handling \u2013 2   Related Posts: Practice  Programming MCQs \n Apply for  Programming Internship \n Apply for  Python Internship \n Check  Python Books \n Check  Information Technology Books \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 Exception Handling \u2013 2  \n Python Multiple Choice Questions \u2013 Exception Handling  \n Object Oriented Programming using C++ Questions and Answers \u2013 Exception Handling  \n Python Questions and Answers \u2013 Global vs Local Variables \u2013 1  \n C++ Programming Questions and Answers \u2013 Exception Handling \u2013 2  \n Python MCQ \u2013 String \u2013 8  \n Python Question and Answers \u2013 Sys Module  \n Python Questions and Answers \u2013 Files \u2013 2  \n Python Questions and Answers \u2013 Mapping Functions \u2013 2  \n Python Questions and Answers \u2013 Sets \u2013 4  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python Programs on Trees C Programs on File Handling Searching and Sorting in Python Linked List Programs in Python Python MCQ Questions Popular Pages: Python Programs on Graphs C# Programs on File Handling Event Handling in Java with Examples Python Programming Examples PHP MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python Programs on Trees C Programs on File Handling Searching and Sorting in Python Linked List Programs in Python Python MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Python Programs on Graphs C# Programs on File Handling Event Handling in Java with Examples Python Programming Examples PHP MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.207 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 01:22:47  \n  Compression = gzip "
    },
    {
      "id": "1130",
      "question": "\n \n \n \n \n \n assert   False ,   'Spanish' \n ",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above results in an assertion error. The output of the code is: \nTraceback (most recent call last): \n  File \u201c<pyshell#0>\u201d, line 1, in <module> \n    assert False, \u2018Spanish\u2019 \nAssertionError: Spanish \nHence, this statement is true. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1131",
      "question": "What will be the output of the following Python code? \n x = 10 \ny = 8 \n assert  x > y ,   'X too small' \n ",
      "answerA": " Assertion Error \n",
      "answerB": " 10 8 \n",
      "answerC": " No output \n",
      "answerD": " 108 ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above results in an error if and only if x<y. However, in the above case, since x>y, there is no error. Since there is no print statement, hence there is no output. \n \n \n    \nNote: Join free Sanfoundry classes at  Telegram  or  Youtube \n \n \n \n \n \n \n \n "
    },
    {
      "id": "1132",
      "question": "What will be the output of the following Python code? \n \n advertisement \n \n \n \n \n #generator \n def  f ( x ) :\n     yield  x+ 1 \ng = f ( 8 ) \n print ( next ( g ) ) \n ",
      "answerA": " 8 \n",
      "answerB": " 9 \n",
      "answerC": " 7 \n",
      "answerD": " Error ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above returns the value of the expression x+1, since we have used to keyword yield. The value of x is "
    },
    {
      "id": "1133",
      "question": "What will be the output of the following Python code? \n def  f ( x ) :\n     yield  x+ 1 \n     print ( \"test\" ) \n     yield  x+ 2 \ng = f ( 9 ) \n ",
      "answerA": " Error \n",
      "answerB": " test \n",
      "answerC": "  \n test\r\n10\r\n12 \n ",
      "answerD": " No output ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above will not yield any output. This is because when we try to yield 9, and there is no next(g), the iteration stops. Hence there is no output. \n "
    },
    {
      "id": "1134",
      "question": "What will be the output of the following Python code? \n def  f ( x ) :\n     yield  x+ 1 \n     print ( \"test\" ) \n     yield  x+ 2 \ng = f ( 10 ) \n print ( next ( g ) ) \n print ( next ( g ) ) \n ",
      "answerA": " No output \n",
      "answerB": "  \n 11\r\ntest\r\n12 \n ",
      "answerC": "  \n 11\r\ntest \n ",
      "answerD": " 11 ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The code shown above results in the output: \n11 \ntest \n12 \nThis is because we have used next(g) twice. Had we not used next, there would be no output. \n "
    },
    {
      "id": "1135",
      "question": "What will be the output of the following Python code? \n def  a ( ) :\n     try :\n        f ( x ,   4 ) \n     finally :\n         print ( 'after f' ) \n     print ( 'after f?' ) \na ( ) \n ",
      "answerA": " No output \n",
      "answerB": " after f? \n",
      "answerC": " error \n",
      "answerD": " after f ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " This code shown above will result in an error simply because \u2018f\u2019 is not defined. \u2018try\u2019 and \u2018finally\u2019 are keywords used in exception handling. \n "
    },
    {
      "id": "1136",
      "question": "What will be the output of the following Python code? \n def  f ( x ) :\n     for  i  in   range ( 5 ) :\n         yield  i\ng = f ( 8 ) \n print ( list ( g ) ) \n ",
      "answerA": " [0, 1, 2, 3, 4] \n",
      "answerB": " [1, 2, 3, 4, 5, 6, 7, 8] \n",
      "answerC": " [1, 2, 3, 4, 5] \n",
      "answerD": " [0, 1, 2, 3, 4, 5, 6, 7] ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " The output of the code shown above is a list containing whole numbers in the range (5). Hence the output of this code is: [0, 1, 2, 3, 4]. \n "
    },
    {
      "id": "1137",
      "question": "The error displayed in the following Python code is? \n import   itertools \nl1 = ( 1 ,   2 ,   3 ) \nl2 = [ 4 ,   5 ,   6 ] \nl = itertools . chain ( l1 ,  l2 ) \n print ( next ( l1 ) ) \n ",
      "answerA": " \u2018list\u2019 object is not iterator \n",
      "answerB": " \u2018tuple\u2019 object is not iterator \n",
      "answerC": " \u2018list\u2019 object is iterator \n",
      "answerD": " \u2018tuple\u2019 object is iterator ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The error raised in the code shown above is that: \u2018tuple\u2019 object is not iterator. Had we given l2 as argument to next, the error would have been: \u2018list\u2019 object is not iterator. \n "
    },
    {
      "id": "1138",
      "question": "Which of the following is not an exception handling keyword in Python? \n",
      "answerA": " try \n",
      "answerB": " except \n",
      "answerC": " accept \n",
      "answerD": " finally ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The keywords \u2018try\u2019, \u2018except\u2019 and \u2018finally\u2019 are exception handling keywords in python whereas the word \u2018accept\u2019 is not a keyword at all. \n "
    },
    {
      "id": "1139",
      "question": "What will be the output of the following Python code? \n g  =   ( i  for  i  in   range ( 5 ) ) \n type ( g ) \n ",
      "answerA": " class <\u2019loop\u2019> \n",
      "answerB": " class <\u2018iteration\u2019> \n",
      "answerC": " class <\u2019range\u2019> \n",
      "answerD": " class <\u2019generator\u2019> ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Another way of creating a generator is to use parenthesis. Hence the output of the code shown above is: class<\u2019generator\u2019>. \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Multiple Choice Questions \u2013 Exception Handling \u00bb  Next - Python Questions and Answers \u2013 Exception Handling \u2013 3   Related Posts: Practice  Programming MCQs \n Apply for  Programming Internship \n Check  Information Technology Books \n Apply for  Python Internship \n Check  Python Books \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 Exception Handling \u2013 3  \n Python Multiple Choice Questions \u2013 Exception Handling  \n Python Question and Answers \u2013 Sys Module  \n Python Question and Answers \u2013 Random module \u2013 1  \n Python Multiple Choice Questions \u2013 Built-in Functions  \n Python Questions and Answers \u2013 Global vs Local Variables \u2013 2  \n Python Questions and Answers \u2013 Sets \u2013 4  \n Python MCQ \u2013 String \u2013 10  \n Python Questions and Answers \u2013 Global vs Local Variables \u2013 1  \n Python Question and Answers \u2013 Datetime Module \u2013 2  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python MCQ Questions Python Programs on Trees Searching and Sorting in Python Linked List Programs in Python Python Programs on Graphs Popular Pages: Event Handling in Java with Examples Python Programming Examples C Programs on File Handling C# Programs on File Handling JavaScript MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python MCQ Questions Python Programs on Trees Searching and Sorting in Python Linked List Programs in Python Python Programs on Graphs \n   \n \n \n \n \n \n \n   Popular Pages Event Handling in Java with Examples Python Programming Examples C Programs on File Handling C# Programs on File Handling JavaScript MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.641 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-02 23:52:33  \n  Compression = gzip "
    },
    {
      "id": "1140",
      "question": "How many except statements can a try-except block have? \n",
      "answerA": " zero \n",
      "answerB": " one \n",
      "answerC": " more than one \n",
      "answerD": " more than zero ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " There has to be at least one except statement. \n \n \n \n \n \n "
    },
    {
      "id": "1141",
      "question": "When will the else part of try-except-else be executed? \n",
      "answerA": " always \n",
      "answerB": " when an exception occurs \n",
      "answerC": " when no exception occurs \n",
      "answerD": " when an exception occurs in to except block ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " The else part is executed when no exception occurs. \n "
    },
    {
      "id": "1142",
      "question": "Is the following Python code valid? \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n try :\n     # Do something \n except :\n     # Do something \n finally :\n     # Do something \n ",
      "answerA": " no, there is no such thing as finally \n",
      "answerB": " no, finally cannot be used with except \n",
      "answerC": " no, finally must come before except \n",
      "answerD": " yes ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Refer documentation. \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n "
    },
    {
      "id": "1143",
      "question": "Is the following Python code valid? \n try :\n     # Do something \n except :\n     # Do something \n else :\n     # Do something \n ",
      "answerA": " no, there is no such thing as else \n",
      "answerB": " no, else cannot be used with except \n",
      "answerC": " no, else must come before except \n",
      "answerD": " yes ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " Refer documentation. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1144",
      "question": "Can one block of except statements handle multiple exception? \n",
      "answerA": " yes, like except TypeError, SyntaxError [,\u2026]  \n",
      "answerB": " yes, like except [TypeError, SyntaxError]  \n",
      "answerC": " no \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " Each type of exception can be specified directly. There is no need to put it in a list. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1145",
      "question": "When is the finally block executed? \n",
      "answerA": " when there is no exception \n",
      "answerB": " when there is an exception \n",
      "answerC": " only if some condition that has been specified is satisfied \n",
      "answerD": " always ",
      "correctAnswer": "d \n",
      "trackName": "Computer Science",
      "explanation": " The finally block is always executed. \n "
    },
    {
      "id": "1146",
      "question": "What will be the output of the following Python code? \n def  foo ( ) :\n     try :\n         return   1 \n     finally :\n         return   2 \nk  =  foo ( ) \n print ( k ) \n ",
      "answerA": " 1 \n",
      "answerB": " 2 \n",
      "answerC": " 3 \n",
      "answerD": " error, there is more than one return statement in a single try-finally block ",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " The finally block is executed even there is a return statement in the try block. \n "
    },
    {
      "id": "1147",
      "question": "What will be the output of the following Python code? \n def  foo ( ) :\n     try :\n         print ( 1 ) \n     finally :\n         print ( 2 ) \nfoo ( ) \n ",
      "answerA": " 1 2 \n",
      "answerB": " 1 \n",
      "answerC": " 2 \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Computer Science",
      "explanation": " No error occurs in the try block so 1 is printed. Then the finally block is executed and 2 is printed. \n "
    },
    {
      "id": "1148",
      "question": "What will be the output of the following Python code? \n try :\n     if   '1'   !=   1 :\n         raise   \"someError\" \n     else :\n         print ( \"someError has not occurred\" ) \n except   \"someError\" :\n     print   ( \"someError has occurred\" ) \n ",
      "answerA": " someError has occurred \n",
      "answerB": " someError has not occurred \n",
      "answerC": " invalid code \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Computer Science",
      "explanation": " A new exception class must inherit from a BaseException. There is no such inheritance here. \n "
    },
    {
      "id": "1149",
      "question": "What happens when \u20181\u2019 == 1 is executed? \n",
      "answerA": " we get a True \n",
      "answerB": " we get a False \nc) an TypeError occurs \nd) a ValueError occurs ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Computer Science",
      "explanation": " It simply evaluates to False and does not raise any exception. \n More MCQs on Python Exception Handling: \n \n Python Exception Handling MCQ (Set 2) \n Python Exception Handling MCQ (Set 3) \n \n Sanfoundry Global Education & Learning Series \u2013 Python. \n To practice all areas of Python,  here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Python Questions and Answers \u2013 Encapsulation \u00bb  Next - Python Questions and Answers \u2013 Exception Handling \u2013 2   Related Posts: Apply for  Programming Internship \n Check  Information Technology Books \n Apply for  Python Internship \n Check  Python Books \n Practice  Programming MCQs \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Python Questions and Answers \u2013 Exception Handling \u2013 3  \n Python Questions and Answers \u2013 Exception Handling \u2013 2  \n C++ Programming Questions and Answers \u2013 Exception Handling \u2013 3  \n C# Questions & Answers \u2013 Implementation of Exception Handling  \n Java Questions & Answers \u2013 Exception Handling \u2013 2  \n Object Oriented Programming using C++ Questions and Answers \u2013 Exception Handling  \n C++ Programming Questions and Answers \u2013 Exception Handling \u2013 2  \n C++ Programming MCQ \u2013 Exception Handling  \n Java MCQ \u2013 Exception Handling  \n Python Multiple Choice Questions \u2013 Dictionary  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python MCQ Questions Visual Basic MCQ Questions PHP MCQ Questions C++ Programming MCQ Questions Python Programs on Trees Popular Pages: C# MCQ Questions Searching and Sorting in Python Computer Organization and Architecture MCQ Questions Linked List Programs in Python JavaScript MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Python MCQs \n \n \n \n \n Python MCQ - Variable Names, Operators & Data Types \n Python Variable Names \n Python Basic Operators \n Python Core Data Types \n Python Numeric Types \n \n Python MCQ - Precedence & Associativity, Bitwise \n Python Precedence Associativity - Set 1 \n Python Precedence Associativity - Set 2 \n Python Bitwise - Set 1 \n Python Bitwise - Set 2 \n Python Boolean \n \n Python MCQ - Formatting & Decorator \n Python Formatting - Set 1 \n Python Formatting - Set 2 \n Python Advance Formatting \n Python Decorators \n \n Python MCQ - While & For Loops \n Python While & For Loops - Set 1 \n Python While & For Loops - Set 2 \n Python While & For Loops - Set 3 \n Python While & For Loops - Set 4 \n Python While & For Loops - Set 5 \n Python While & For Loops - Set 6 \n \n Python MCQ - Strings \n Python Strings - Set 1 \n Python Strings - Set 2 \n Python Strings - Set 3 \n Python Strings - Set 4 \n Python Strings - Set 5 \n Python Strings - Set 6 \n Python Strings - Set 7 \n Python Strings - Set 8 \n Python Strings - Set 9 \n Python Strings - Set 10 \n Python Strings - Set 11 \n Python Strings - Set 12 \n Python Strings - Set 13 \n \n Python MCQ - Lists \n Python Lists - Set 1 \n Python Lists - Set 2 \n Python Lists - Set 3 \n Python Lists - Set 4 \n Python Lists - Set 5 \n Python Lists - Set 6 \n Python Lists - Set 7 \n \n Python MCQ - List Comprehension \n Python List Comprehension \n Python List Comprehension - Set 1 \n Python List Comprehension - Set 2 \n Python Matrix List Comprehension \n \n Python MCQ - Tuples \n Python Tuples - Set 1 \n Python Tuples - Set 2 \n Python Tuples - Set 3 \n \n Python MCQ - Sets \n Python Sets - Set 1 \n Python Sets - Set 2 \n Python Sets - Set 3 \n Python Sets - Set 4 \n Python Sets - Set 5 \n \n Python MCQ - Dictionary \n Python Dictionary - Set 1 \n Python Dictionary - Set 2 \n Python Dictionary - Set 3 \n Python Dictionary - Set 4 \n \n Python MCQ - Built-in Functions \n Python Built-in Functions - Set 1 \n Python Built-in Functions - Set 2 \n Python Built-in Functions - Set 3 \n \n Python MCQ - Functions \n Python Function - Set 1 \n Python Function - Set 2 \n Python Function - Set 3 \n Python Function - Set 4 \n \n Python MCQ - Argument Passing, Variables & Recursion \n Python Argument Passing - Set 1 \n Python Argument Passing - Set 2 \n Python Global vs Local Variables - Set 1 \n Python Global vs Local Variables - Set 2 \n Python Recursion \n Python Shallow Copy vs Deep Copy \n \n Python MCQ - Mapping Functions \n Python Functional Tools \n Python Mapping Functions - Set 1 \n Python Mapping Functions - Set 2 \n Python Mapping Functions - Set 3 \n \n Python MCQ - Modules \n Python Modules \n Python Math - Set 1 \n Python Math - Set 2 \n Python Math - Set 3 \n Python Datetime Module - Set 1 \n Python Datetime Module - Set 2 \n Python Random Module - Set 1 \n Python Random Module - Set 2 \n Python Sys Module \n Python Operating System \n Python Turtle Module - Set 1 \n Python Turtle Module - Set 2 \n Python Turtle Module - Set 3 \n Python Pickle Module \n \n Python MCQ - Regular Expressions \n Python Regular Expressions \n Python Regular Expressions - Set 1 \n Python Regular Expressions - Set 2 \n Python Regular Expressions - Set 3 \n Python Regular Expressions - Set 4 \n Python Regular Expressions - Set 5 \n \n Python MCQ - Files \n Python Files - Set 1 \n Python Files - Set 2 \n Python Files - Set 3 \n Python Files - Set 4 \n Python Files - Set 5 \n \n Python MCQ - Classes & Objects \n Python Operator Overloading \n Python Classes & Objects - Set 1 \n Python Classes & Objects - Set 2 \n \n Python MCQ - Python OOPs \n Python Inheritance - Set 1 \n Python Inheritance - Set 2 \n Python Polymorphism \n Python Encapsulation \n \n Python MCQ - Exception Handling \n Python Exception Handling - Set 1 \n Python Exception Handling - Set 2 \n Python Exception Handling - Set 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python MCQ Questions Visual Basic MCQ Questions PHP MCQ Questions C++ Programming MCQ Questions Python Programs on Trees \n   \n \n \n \n \n \n \n   Popular Pages C# MCQ Questions Searching and Sorting in Python Computer Organization and Architecture MCQ Questions Linked List Programs in Python JavaScript MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Python MCQs \n \n Variable Names, Operators, Data Types & Numeric Types \n Variable Names \n Basic Operators \n Core Data Types \n Numeric Types \n \n Precedence & Associativity, Bitwise & Boolean \n Precedence Associativity-1 \n Precedence Associativity-2 \n Bitwise - 1 \n Bitwise - 2 \n Boolean \n \n Formatting & Decorators \n Formatting - 1 \n Formatting - 2 \n Advanced Formatting \n Decorators \n \n While & For Loops \n While & For Loops - 1 \n While & For Loops - 2 \n While & For Loops - 3 \n While & For Loops - 4 \n While & For Loops - 5 \n While & For Loops - 6 \n \n Strings \n Strings - 1 \n Strings - 2 \n Strings - 3 \n Strings - 4 \n Strings - 5 \n Strings - 6 \n Strings - 7 \n Strings - 8 \n Strings - 9 \n Strings - 10 \n Strings - 11 \n Strings - 12 \n Strings - 13 \n \n Lists & List Comprehension \n Lists - 1 \n Lists - 2 \n Lists - 3 \n Lists - 4 \n Lists - 5 \n Lists - 6 \n Lists - 7 \n List Comprehension \n List Comprehension - 1 \n List Comprehension - 2 \n Matrix List Comprehension \n \n Tuples & Sets \n Tuples - 1 \n Tuples - 2 \n Tuples - 3 \n Sets - 1 \n Sets - 2 \n Sets - 3 \n Sets - 4 \n Sets - 5 \n \n Dictionary, Functions & Built-in Functions \n Dictionary - 1 \n Dictionary - 2 \n Dictionary - 3 \n Dictionary - 4 \n Built-in Functions - 1 \n Built-in Functions - 2 \n Built-in Functions - 3 \n Function - 1 \n Function - 2 \n Function - 3 \n Function - 4 \n \n Argument Passing, Variables & Recursion \n Argument Passing - 1 \n Argument Passing - 2 \n Global vs Local Variables-1 \n Global vs Local Variables-2 \n Recursion \n Shallow Copy vs Deep Copy \n \n Mapping Functions & Modules \n Functional Tools \n Mapping Functions - 1 \n Mapping Functions - 2 \n Mapping Functions - 3 \n Python Modules \n Math - 1 \n Math - 2 \n Math - 3 \n Datetime Module - 1 \n Datetime Module - 2 \n Random Module - 1 \n Random Module - 2 \n Sys Module \n Operating System \n Turtle Module - 1 \n Turtle Module - 2 \n Turtle Module - 3 \n Pickle Module \n \n Regular Expressions & Files \n Regular Expressions \n Regular Expressions - 1 \n Regular Expressions - 2 \n Regular Expressions - 3 \n Regular Expressions - 4 \n Regular Expressions - 5 \n Files - 1 \n Files - 2 \n Files - 3 \n Files - 4 \n Files - 5 \n \n Classes, Objects, Inheritance & Exception Handling \n Operator Overloading \n Classes & Objects - 1 \n Classes & Objects - 2 \n Inheritance - 1 \n Inheritance - 2 \n Polymorphism \n Encapsulation \n Exception Handling - 1 \n Exception Handling - 2 \n Exception Handling - 3 \n \n Best Reference Books \n Python Books \n \n \n Tests Python Programming Tests   Python Programming Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.385 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 07:58:54  \n  Compression = gzip "
    }
  ],
  "Data Science": [
    {
      "id": "1413",
      "question": "ndarray is also known as the alias array. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " numpy.array is not the same as the Standard Python Library class array.array.   \n "
    },
    {
      "id": "1414",
      "question": "Which of the following method creates a new array object that looks at the same data? \n",
      "answerA": " view \n",
      "answerB": " copy \n",
      "answerC": " paste \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " The copy method makes a complete copy of the array and its data.   \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1154",
      "question": "What will be the outputs of output layer from the below figure, given that the net input O 1  = 1.3 and net input O 2  = 1.41 using the logistic function? \n \n",
      "answerA": " 0.867, 0.408 \n",
      "answerB": " 0.876, 0.048 \n",
      "answerC": " 0.768, 0.084 \n",
      "answerD": " 0.786, 0.804 ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " Given the net O 1  = 1.3 and net O 2  = 1."
    },
    {
      "id": "1155",
      "question": "What will be the total error of the given neural network given output values O 1  and O 2  are 0.63 and 0.78 respectively? \n \n",
      "answerA": " 0.093 \n",
      "answerB": " 0.2 \n",
      "answerC": " 0.165 \n",
      "answerD": "0.072",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " Given the output Out O 1  = 0.63, Out O 2  = 0."
    },
    {
      "id": "1156",
      "question": "How much does the total error change with respect to the outputs? \n \n",
      "answerA": " 0.2, 0.4 \n",
      "answerB": " 0.75, 0.55 \n",
      "answerC": " 0.35, 0.25 \n",
      "answerD": " 0.72, 0.38 ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " Given the output Out O 1  = 0.55, Out O 2  = 0."
    },
    {
      "id": "1157",
      "question": "How much does the total net input of O 1  changes with respect to w 5 ? \n \n",
      "answerA": " 0.4 \n",
      "answerB": " 0.45 \n",
      "answerC": " 0.55 \n",
      "answerD": "0.57",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " Given the w 5  = 0.4, Output h 1  = 0.57 and Output h 2  = 0."
    },
    {
      "id": "1212",
      "question": "What is the features that cannot be accomplished earlier without affine transformations? \n",
      "answerA": " arbitrary rotation \n",
      "answerB": " scaling \n",
      "answerC": " translation \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " Affine transformations can be used to do arbitrary rotation, scaling, translation. \n \n \n    \nSubscribe Now:  Neural Network Newsletter  |  Important Subjects Newsletters \n \n \n \n \n \n \n \n "
    },
    {
      "id": "1277",
      "question": "Broadly how many kinds of stability can be defined in neural networks? \n",
      "answerA": " 1 \n",
      "answerB": " 3 \n",
      "answerC": " 2 \n",
      "answerD": "4",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " There exist broadly structural & global stability in neural. \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n "
    },
    {
      "id": "1151",
      "question": "What will be the values of net input of h 1  and net input of h 2  from the below figure, given that w 1  = 0.2, w 2  = 0.15, w 3  = 0.3, w 4  = 0.25, w 5  = 0.45, w 6  =0.4, w 7  = 0.55, w 8  = 0.5? \n \n",
      "answerA": " 0.385, 0.378 \n",
      "answerB": " 0.358, 0.682 \n",
      "answerC": " 0.853, 0.387 \n",
      "answerD": " 0.583, 0.826 ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Given w 1  = 0.2, w 2  = 0.15, w 3  = 0.3, w 4  = 0.25, w 5  = 0.45, w 6  =0.4, w 7  = 0.55, w 8  = 0.5, I 1  = 0.1, I 2  = 0.05, B 1  = 0.35 and B 2  = 0."
    },
    {
      "id": "1152",
      "question": "What will be the outputs of h from the below figure, given that the net input h 1  = 0.38 and net input h 2  = 0.37 using the logistic function? \n \n",
      "answerA": " 0.514, 0.511 \n",
      "answerB": " 0.594, 0.591 \n",
      "answerC": " 0.494, 0.525 \n",
      "answerD": " 0.454, 0.256 ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Given the net input h 1  = 0.38 and net input h 2  = 0."
    },
    {
      "id": "1153",
      "question": "What will be the net inputs of the output layer in the below figure, given that the w 5  = 0.45, w 6  =0.4, w 7  = 0.55, w 8  = 0.5, Out h 1  = 0.6 and Out h 2  = 0.65? \n \n",
      "answerA": " 1.628, 1.365 \n",
      "answerB": " 1.228, 1.165 \n",
      "answerC": " 1.528, 1.665 \n",
      "answerD": " 1.428, 1.465 ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Given w 5  = 0.45, w 6  =0.4, w 7  = 0.55, w 8  = 0.5, Out h 1  = 0.6, Out h 2  = 0.65 and B 2  = 0."
    },
    {
      "id": "1158",
      "question": "How much does the output of O 1  change with respect to its total net input, given the Out O 1  = 0.31 (using logistic function) in the below figure? \n \n",
      "answerA": " 0.31 \n",
      "answerB": " 0.214 \n",
      "answerC": " 0.691 \n",
      "answerD": "0.524",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " We know, Out O 1  = \\(\\frac {1}{1+ e^{-net \\, O_1}}\\)  \n\\(\\frac {\\partial Out \\, O_1}{\\partial net \\, O_1}\\) = Out O 1  (1 \u2013 Out O 1 ) (Basic derivation) \n= 0.31 (1 \u2013 0.31) \n= 0.31 * 0.69 \n= 0.214 \n \n "
    },
    {
      "id": "1159",
      "question": "How much does the total error changes with respect to w 5 ? \n \n",
      "answerA": " 0.044 \n",
      "answerB": " 0.25 \n",
      "answerC": " 0.3 \n",
      "answerD": "0.59",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Given w 5  = 0.4, Output O 1  = 0.5, Out h 1  = 0.59 and target O 1  = 0."
    },
    {
      "id": "1160",
      "question": "What will be the new value of w 5  in the below figure, given w 5  = 0.4, total error changes with respect to w 5 = 0.08 and learning rate = 0.5? \n \n",
      "answerA": " 0.5 \n",
      "answerB": " 0.4 \n",
      "answerC": " 0.36 \n",
      "answerD": "0.8",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " Given w 5  = 0.4, total error changes with respect to w 5 , \\(\\frac {\\partial E_{total}}{\\partial w_5} \\) = 0.08 and learning rate \u03b7 = 0."
    },
    {
      "id": "1161",
      "question": "Backpropagation is capable of handling large learning problems. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Multilayered networks are capable of computing a wider range of Boolean functions than networks with a single layer of computing units.  Backpropagation is the essence of Multilayered networks. So, backpropagation is capable of handling such large learning problems. \n \n \n \n \n \n \n "
    },
    {
      "id": "1162",
      "question": "One of the more popular activation functions for back propagation networks is the sigmoid. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " One of the more popular activation functions for back propagation networks is the sigmoid, a real function S c : \u211d \u2192 (0, 1) defined by the expression S c  (x) = \\(\\frac {1}{1+ e^{-cx}}\\). The constant c can be selected arbitrarily and its reciprocal 1/c is called the temperature parameter in stochastic neural networks. Shape of the sigmoid changes according to the value of c. \n \n "
    },
    {
      "id": "1163",
      "question": "A differentiable activation function makes the function computed by a neural network differentiable and the back propagation algorithm is applicable to it. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " A differentiable activation function makes the function computed by a neural network differentiable (assuming that the integration function at each node is just the sum of the inputs), since the network itself computes only the function compositions. And the error function also becomes differentiable. \n \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1164",
      "question": "What will be the final value of f(x, y, z) from the below figure given that x = -5, y = 7, and z = 14? \n \n",
      "answerA": " 28 \n",
      "answerB": " -105 \n",
      "answerC": " 16 \n",
      "answerD": "-133",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " From the figure f(x, y, z) = (x + y) * z. Given that x = -5, y = 7, and z = "
    },
    {
      "id": "1165",
      "question": "Which of the following is not a step in backpropagation algorithm? \n",
      "answerA": " Feed-forward computation \n",
      "answerB": " Backpropagation to the output layer \n",
      "answerC": " Backpropagation to the input layer \n",
      "answerD": " Backpropagation to the hidden layer ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " After choosing the weights of the network randomly, the backpropagation algorithm is used to compute the necessary corrections. The backpropagation algorithm can be decomposed in the following four steps: Feed-forward computation, Backpropagation to the output layer, Backpropagation to the hidden layer and Weight updates. So it doesn\u2019t contain a backpropagation to the input layers. \n \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n "
    },
    {
      "id": "1166",
      "question": "Which of the following statements is not true about backpropagation? \n",
      "answerA": " Initially the weights are assigned at random \n",
      "answerB": " The algorithm iterates through many cycles of two processes until a stopping criterion has reached \n",
      "answerC": " Each epoch includes a forward phase and a backward phase \n",
      "answerD": " The whole cycles of execution together are known as an epoch ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " Initially the weights are assigned at random. Then the algorithm iterates through many cycles of two processes until a stopping criterion is reached. Each cycle is known as an epoch and not the whole cycle together. Each epoch includes a forward phase and a backward phase. \n \n "
    },
    {
      "id": "1167",
      "question": "Which of the following statements is not true about forward phase in backpropagation in neural network? \n",
      "answerA": " The neurons are activated in sequence from the input layer to the output layer \n",
      "answerB": " Applying each neuron\u2019s weights and activation function from the input layer to the output layer \n",
      "answerC": " Applying each neuron\u2019s weights and activation function from the output layer to the input layer \n",
      "answerD": " Upon reaching the final layer, an output signal is produced ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " A forward phase is one of the two phases in backpropagation in neural network. Here the neurons are activated in sequence from the input layer to the output layer, applying each neuron\u2019s weights and activation function from the input layer to the output layer. Upon reaching the final layer, an output signal is produced. \n \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1168",
      "question": "Which of the following statements is not true about backward phase in backpropagation in neural network? \n",
      "answerA": " The network\u2019s output signal resulting from the forward phase is compared to the true target value in the training data \n",
      "answerB": " The difference between the networks\u2019s output signal and the true value results in an error \n",
      "answerC": " The error is propagated backwards in the network to modify the connection weights between neurons \n",
      "answerD": " Modifying the weights cannot reduce the future errors ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " In backward phase in backpropagation in neural network he network\u2019s output signal resulting from the forward phase is compared to the true target value in the training data. The difference between the networks\u2019s output signal and the true value results in an error that is propagated backwards in the network to modify the connection weights between neurons and reduce future errors. \n \n "
    },
    {
      "id": "1169",
      "question": "Which of the following statements is not true about the backpropagation architecture? \n",
      "answerA": " Backpropogation is a multilayer feed forward network with one layer of z-hidden units \n",
      "answerB": " The input layer is connected to hidden layer by means of interconnecction weights \n",
      "answerC": " The hidden layer is connected to output layer by means of interconnecction weights \n",
      "answerD": " Only the hidden units can have bias ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " Both hidden and output layers can have the bias in backpropagation architecture. Bias term is required; a bias value allows you to shift the activation function to the left or right. The weights used in bias term will be changed in backpropagation algorithm and will be optimized using gradient descent or advanced optimization technique. \n \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1170",
      "question": "Which of the following statements is not true about the backpropagation architecture? \n",
      "answerA": " It resembles a multi layered feed forward network \n",
      "answerB": " The increasing number of hidden layers results in the computational complexity of the network \n",
      "answerC": " The increasing number of hidden layers may results in the time taken for minimizing the error as low \n",
      "answerD": " The increasing number of hidden layers may results in the time taken for convergence as very high ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " The backpropagation architecture resembles a multi layered feed forward network. The increasing number of hidden layers results in the computational complexity of the network. And as a result time taken for convergence and to minimize the error may be very high. \n \n "
    },
    {
      "id": "1171",
      "question": "Backpropagation is a short form for backward propagation of errors. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Backpropagation is a short form for backward propagation of errors. It is a standard method of training artificial neural networks. This method helps to calculate the gradient of a loss function with respects to all the weights in the network. \n \n "
    },
    {
      "id": "1172",
      "question": "Which of the following is not a feature of back propagation algorithm? \n",
      "answerA": " It is fast, simple and easy to program \n",
      "answerB": " It does not need any special mention of the features of the function to be learned \n",
      "answerC": " It has more parameters to tune apart from the numbers of input \n",
      "answerD": " It is a flexible method as it does not require prior knowledge about the network ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " Backpropagation is fast, simple and easy to program. It has no parameters to tune apart from the numbers of input. And it is a flexible method as it does not require prior knowledge about the network. It does not need any special mention of the features of the function to be learned. \n \n "
    },
    {
      "id": "1173",
      "question": "Which of the following statements is not true about the backpropagation? \n",
      "answerA": " Static backpropagation produces a mapping of a static input for static output \n",
      "answerB": " Static backpropagation is useful to solve static classification issues like optical character recognition \n",
      "answerC": " Recurrent backpropagation is fed forward until a fixed value is achieved and after that, the error is computed and propagated backward \n",
      "answerD": " The mapping is static in both static back-propagation and recurrent backpropagation ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " The two types of backpropagation networks are static backpropagation and recurrent backpropagation. The difference between static and recurrent methods is that the mapping is rapid in static backpropagation and it is non-static in recurrent backpropagation. All other statements are true about static backpropagation and recurrent backpropagation. \n \n Sanfoundry Global Education & Learning Series \u2013 Neural Networks. \n To practice all areas of Neural Networks,  here is complete set on 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Neural Network Questions and Answers \u2013 Backpropagation Algorithm \u00bb  Next - Neural Networks Questions and Answers \u2013 Backpropagation Algorithm \u2013 Set 3   Related Posts: Apply for  Electrical & Electronics Engineering Internship \n Apply for  Electronics & Communication Engineering Internship \n Check  Electronics & Communication Engineering Books \n Apply for  Neural Networks Internship \n Practice  Electrical & Electronics Engineering MCQs \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Neural Networks Questions and Answers \u2013 Backpropagation Algorithm \u2013 Set 3  \n Neural Network Questions and Answers \u2013 Backpropagation Algorithm  \n Neural Networks MCQ (Multiple Choice Questions)  \n Neural Networks Questions and Answers \u2013 Gradient Checking  \n Neural Network Questions and Answers \u2013 Applications of Neural Networks \u2013 1  \n Neural Networks Questions and Answers \u2013 Cost Function  \n Neural Networks Questions and Answers \u2013 Neurons and the Brain  \n Artificial Intelligence Questions and Answers \u2013 Neural Networks \u2013 2  \n Neural Network Questions and Answers \u2013 Applications of Neural Networks \u2013 2  \n Neural Networks Questions and Answers \u2013 Random Initialization  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Neural Networks MCQ Questions C++ Algorithm Library R Programming MCQ Questions Network Theory MCQ Questions Cryptography and Network Security MCQ Questions Popular Pages: Electronics and Communication Engineering Questions and Answers Information Science Questions and Answers Computer Network MCQ Questions Cognitive Radio MCQ Questions C# Programs on Functions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Neural Networks MCQs \n \n \n \n \n Introduction \n Neural Network Introduction \n \n Basics of Artificial Neural Networks \n Neural Characteristics - 1 \n Neural Characteristics - 2 \n Neural Characteristics - 3 \n Neural Networks History \n Neural Terminology \n Neural Networks Models - 1 \n Neural Networks Models - 2 \n Neural Networks Topology \n Neural Network Learning - 1 \n Neural Network Learning - 2 \n \n Activation & Synaptic Dynamics \n Neural Network Dynamics \n Activation Models \n Learning Basics - 1 \n Learning Basics - 2 \n Learning Laws - 1 \n Learning Laws - 2 \n Stability & Convergence \n Recall \n \n Feedforward Neural Networks \n Pattern Association - 1 \n Pattern Association - 2 \n Weight Determination \n Pattern Classification - 1 \n Pattern Classification - 2 \n Pattern Mapping \n Pattern Recognition \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Pattern Storage Analysis \n \n Feedback Neural Networks \n Feedback Neural Network \n FF Network Analysis \n Pattern Storage Networks-1 \n Pattern Storage Networks-2 \n Hopfield Model - 1 \n Hopfield Model - 2 \n Stochastic Networks \n Boltzman Machine - 1 \n Boltzman Machine - 2 \n \n Competitive Learning Neural Networks \n Learning Neural Network \n Feedback Layer \n Feature Mapping Network \n \n Complex Pattern Architectures & ANN Applications \n Associative Memories \n Multi Layer Neural Network \n ART \n Neural Applications - 1 \n Neural Applications - 2 \n \n Neural Networks in Machine Learning \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n Best Reference Books \n Neural Networks Books \n \n \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Neural Networks MCQ Questions C++ Algorithm Library R Programming MCQ Questions Network Theory MCQ Questions Cryptography and Network Security MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Electronics and Communication Engineering Questions and Answers Information Science Questions and Answers Computer Network MCQ Questions Cognitive Radio MCQ Questions C# Programs on Functions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Neural Networks MCQs \n \n Introduction \n Neural Network Introduction \n \n Basics of Artificial Neural Networks \n Neural Characteristics - 1 \n Neural Characteristics - 2 \n Neural Characteristics - 3 \n Neural Networks History \n Neural Terminology \n Neural Networks Models - 1 \n Neural Networks Models - 2 \n Neural Networks Topology \n Neural Network Learning - 1 \n Neural Network Learning - 2 \n \n Activation & Synaptic Dynamics \n Neural Network Dynamics \n Activation Models \n Learning Basics - 1 \n Learning Basics - 2 \n Learning Laws - 1 \n Learning Laws - 2 \n Stability & Convergence \n Recall \n \n Feedforward Neural Networks \n Pattern Association - 1 \n Pattern Association - 2 \n Weight Determination \n Pattern Classification - 1 \n Pattern Classification - 2 \n Pattern Mapping \n Pattern Recognition \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Pattern Storage Analysis \n \n Feedback Neural Networks \n Feedback Neural Network \n FF Network Analysis \n Pattern Storage Networks-1 \n Pattern Storage Networks-2 \n Hopfield Model - 1 \n Hopfield Model - 2 \n Stochastic Networks \n Boltzman Machine - 1 \n Boltzman Machine - 2 \n \n Competitive Learning Neural Networks \n Learning Neural Network \n Feedback Layer \n Feature Mapping Network \n \n Complex Pattern Architectures & ANN Applications \n Associative Memories \n Multi Layer Neural Network \n ART \n Neural Applications - 1 \n Neural Applications - 2 \n \n Neural Networks in Machine Learning \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n Best Reference Books \n Neural Networks Books \n \n \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n \n  Dynamic page generated in 1.376 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-01-07 16:41:27  \n  Compression = gzip "
    },
    {
      "id": "1174",
      "question": "What is the objective of backpropagation algorithm? \n",
      "answerA": " to develop learning algorithm for multilayer feedforward neural network \n",
      "answerB": " to develop learning algorithm for single layer feedforward neural network \n",
      "answerC": " to develop learning algorithm for multilayer feedforward neural network, so that network can be trained to capture the mapping implicitly \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " The objective of backpropagation algorithm  is to to develop learning algorithm for multilayer feedforward neural network, so that network can be trained to capture the mapping implicitly. \n \n \n \n \n \n "
    },
    {
      "id": "1175",
      "question": "What is true regarding backpropagation rule? \n",
      "answerA": " it is also called generalized delta rule \n",
      "answerB": " error in output is propagated backwards only to determine weight updates \n",
      "answerC": " there is no feedback of signal at nay stage \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " These all statements defines backpropagation algorithm. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1176",
      "question": "What is true regarding backpropagation rule? \n",
      "answerA": " it is a feedback neural network \n",
      "answerB": " actual output is determined by computing the outputs of units for each hidden layer \n",
      "answerC": " hidden layers output is not all important, they are only meant for supporting input and output layers \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " In backpropagation rule, actual output is determined by computing the outputs of units for each hidden layer. \n \n \n    \nSubscribe Now:  Neural Network Newsletter  |  Important Subjects Newsletters \n \n \n \n \n \n \n \n "
    },
    {
      "id": "1177",
      "question": "What is meant by generalized in statement \u201cbackpropagation is a generalized delta rule\u201d ? \n",
      "answerA": " because delta rule can be extended to hidden layer units \n",
      "answerB": " because delta is applied to only input and output layers, thus making it more simple and generalized \n",
      "answerC": " it has no significance \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " The term generalized is used because delta rule could be extended to hidden layer units. \n "
    },
    {
      "id": "1178",
      "question": "What are general limitations of back propagation rule? \n",
      "answerA": " local minima problem \n",
      "answerB": " slow convergence \n",
      "answerC": " scaling \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " These all are limitations of backpropagation algorithm in general. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1179",
      "question": "What are the general tasks that are performed with backpropagation algorithm? \n",
      "answerA": " pattern mapping \n",
      "answerB": " function approximation \n",
      "answerC": " prediction \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " These all are the tasks that can be performed with backpropagation algorithm in general. \n "
    },
    {
      "id": "1180",
      "question": "Does backpropagaion learning is based on gradient descent along error surface? \n",
      "answerA": " yes \n",
      "answerB": " no \n",
      "answerC": " cannot be said \n",
      "answerD": " it depends on gradient descent but not error surface ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Weight adjustment is proportional to negative gradient of error with respect to weight. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1181",
      "question": "How can learning process be stopped in backpropagation rule? \n",
      "answerA": " there is convergence involved \n",
      "answerB": " no heuristic criteria exist \n",
      "answerC": " on basis of average gradient value \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " If average gadient value fall below a preset threshold value, the process may be stopped. \n Sanfoundry Global Education & Learning Series \u2013 Neural Networks. \n To practice all areas of Neural Networks,  here is complete set on 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Neural Network Questions and Answers \u2013 Pattern Recognition \u00bb  Next - Neural Networks Questions and Answers \u2013 Backpropagation Algorithm \u2013 Set 2   Related Posts: Check  Electronics & Communication Engineering Books \n Check  Electrical & Electronics Engineering Books \n Practice  Electrical & Electronics Engineering MCQs \n Practice  Electronics & Communication Engineering MCQs \n Apply for  Neural Networks Internship \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Neural Networks Questions and Answers \u2013 Backpropagation Algorithm \u2013 Set 2  \n Neural Network Questions and Answers \u2013 Pattern Association \u2013 2  \n Neural Network Questions and Answers \u2013 Multi Layer Feedforward Neural Network  \n Neural Networks Questions and Answers \u2013 Backpropagation Algorithm \u2013 Set 3  \n Neural Networks Questions and Answers \u2013 Introduction of Feedback Neural Network  \n Neural Network Questions and Answers \u2013 Competitive Learning Neural Nework Introduction  \n Neural Network Questions and Answers \u2013 Applications of Neural Networks \u2013 1  \n Neural Network Questions and Answers \u2013 Applications of Neural Networks \u2013 2  \n Neural Networks MCQ (Multiple Choice Questions)  \n Neural Network Questions and Answers \u2013 Analysis of Linear Autoassociative FF Network  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Neural Networks MCQ Questions Cryptography and Network Security MCQ Questions C++ Algorithm Library Network Theory MCQ Questions Computer Network MCQ Questions Popular Pages: Searching and Sorting Algorithms in C R Programming MCQ Questions Electronics and Communication Engineering Questions and Answers Searching Algorithms in Java Sorting Algorithms in Java    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Neural Networks MCQs \n \n \n \n \n Introduction \n Neural Network Introduction \n \n Basics of Artificial Neural Networks \n Neural Characteristics - 1 \n Neural Characteristics - 2 \n Neural Characteristics - 3 \n Neural Networks History \n Neural Terminology \n Neural Networks Models - 1 \n Neural Networks Models - 2 \n Neural Networks Topology \n Neural Network Learning - 1 \n Neural Network Learning - 2 \n \n Activation & Synaptic Dynamics \n Neural Network Dynamics \n Activation Models \n Learning Basics - 1 \n Learning Basics - 2 \n Learning Laws - 1 \n Learning Laws - 2 \n Stability & Convergence \n Recall \n \n Feedforward Neural Networks \n Pattern Association - 1 \n Pattern Association - 2 \n Weight Determination \n Pattern Classification - 1 \n Pattern Classification - 2 \n Pattern Mapping \n Pattern Recognition \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Pattern Storage Analysis \n \n Feedback Neural Networks \n Feedback Neural Network \n FF Network Analysis \n Pattern Storage Networks-1 \n Pattern Storage Networks-2 \n Hopfield Model - 1 \n Hopfield Model - 2 \n Stochastic Networks \n Boltzman Machine - 1 \n Boltzman Machine - 2 \n \n Competitive Learning Neural Networks \n Learning Neural Network \n Feedback Layer \n Feature Mapping Network \n \n Complex Pattern Architectures & ANN Applications \n Associative Memories \n Multi Layer Neural Network \n ART \n Neural Applications - 1 \n Neural Applications - 2 \n \n Neural Networks in Machine Learning \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n Best Reference Books \n Neural Networks Books \n \n \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Neural Networks MCQ Questions Cryptography and Network Security MCQ Questions C++ Algorithm Library Network Theory MCQ Questions Computer Network MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Searching and Sorting Algorithms in C R Programming MCQ Questions Electronics and Communication Engineering Questions and Answers Searching Algorithms in Java Sorting Algorithms in Java \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Neural Networks MCQs \n \n Introduction \n Neural Network Introduction \n \n Basics of Artificial Neural Networks \n Neural Characteristics - 1 \n Neural Characteristics - 2 \n Neural Characteristics - 3 \n Neural Networks History \n Neural Terminology \n Neural Networks Models - 1 \n Neural Networks Models - 2 \n Neural Networks Topology \n Neural Network Learning - 1 \n Neural Network Learning - 2 \n \n Activation & Synaptic Dynamics \n Neural Network Dynamics \n Activation Models \n Learning Basics - 1 \n Learning Basics - 2 \n Learning Laws - 1 \n Learning Laws - 2 \n Stability & Convergence \n Recall \n \n Feedforward Neural Networks \n Pattern Association - 1 \n Pattern Association - 2 \n Weight Determination \n Pattern Classification - 1 \n Pattern Classification - 2 \n Pattern Mapping \n Pattern Recognition \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Pattern Storage Analysis \n \n Feedback Neural Networks \n Feedback Neural Network \n FF Network Analysis \n Pattern Storage Networks-1 \n Pattern Storage Networks-2 \n Hopfield Model - 1 \n Hopfield Model - 2 \n Stochastic Networks \n Boltzman Machine - 1 \n Boltzman Machine - 2 \n \n Competitive Learning Neural Networks \n Learning Neural Network \n Feedback Layer \n Feature Mapping Network \n \n Complex Pattern Architectures & ANN Applications \n Associative Memories \n Multi Layer Neural Network \n ART \n Neural Applications - 1 \n Neural Applications - 2 \n \n Neural Networks in Machine Learning \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n Best Reference Books \n Neural Networks Books \n \n \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.395 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-01-07 15:41:07  \n  Compression = gzip "
    },
    {
      "id": "1182",
      "question": "Let a(l), b(l) represent in input-output pairs, where \u201cl\u201d varies in natural range of no.s, then if a(l)=b(l)? \n",
      "answerA": " problem is heteroassociation \n",
      "answerB": " problem is autoassociation \n",
      "answerC": " can be either auto or heteroassociation \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " When a(l)=b(l) problem is classified as autoassociation. \n "
    },
    {
      "id": "1183",
      "question": "Let a(l), b(l) represent in input-output pairs, where \u201cl\u201d varies in natural range of no.s, then if a(l)=!b(l)? \n",
      "answerA": " problem is heteroassociation \n",
      "answerB": " problem is autoassociation \n",
      "answerC": " can be either auto or heteroassociation \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " When a(l) & b(l)are distinct, problem is classified as autoassociation. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1184",
      "question": "The recalled output in pattern association problem depends on? \n",
      "answerA": " nature of input-output \n",
      "answerB": " design of network \n",
      "answerC": " both input & design \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " The recalled output in pattern association problem depends on  both input & design of network. \n "
    },
    {
      "id": "1185",
      "question": "If a(l) gives output b(l) & a\u2019=a(l)+m,where m is small quantity & if a\u2019 gives ouput b(l) then? \n",
      "answerA": " network exhibits accretive behaviour \n",
      "answerB": " network exhibits interpolative behaviour \n",
      "answerC": " exhibits both accretive & interpolative behaviour \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " This follows from basic definition of accretive behaviour in neural. \n \n \n    \nSubscribe Now:  Neural Network Newsletter  |  Important Subjects Newsletters \n \n \n \n \n \n \n \n "
    },
    {
      "id": "1186",
      "question": "If a(l) gives output b(l) & a\u2019=a(l)+m,where m is small quantity & if a\u2019 gives ouput b(l)+n then? \n",
      "answerA": " network exhibits accretive behaviour \n",
      "answerB": " network exhibits interpolative behaviour \n",
      "answerC": " exhibits both accretive & interpolative behaviour \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " This follows from basic definition in neural. \n "
    },
    {
      "id": "1187",
      "question": "What are 3 basic types of neural nets that form basic functional units among \ni)feedforward ii) loop iii) recurrent iv) feedback v) combination of feed forward & back \n",
      "answerA": " i, ii, iii \n",
      "answerB": " i, ii, iv \n",
      "answerC": " i, iv, v \n",
      "answerD": " i, iii, v ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " These form the basic functional units of neural nets. \n "
    },
    {
      "id": "1188",
      "question": "What is a mapping problem? \n",
      "answerA": " when no restrictions such as linear separability is placed on the set of input \u2013 output pattern pairs \n",
      "answerB": " when there may be restrictions such as linear separability placed on input \u2013 output patterns \n",
      "answerC": " when there are restriction but other than linear separability \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Its a more general case of classification problem. \n "
    },
    {
      "id": "1189",
      "question": "What is the objective of pattern mapping problem? \n",
      "answerA": " to capture weights for a link \n",
      "answerB": " to capture inputs \n",
      "answerC": " to capture feedbacks \n",
      "answerD": " to capture implied function ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " The objective of pattern mapping problem is to capture implied function. \n "
    },
    {
      "id": "1190",
      "question": "To provide generalization capability to a network, what should be done? \n",
      "answerA": " all units should be linear \n",
      "answerB": " all units should be non \u2013 linear \n",
      "answerC": " except input layer, all units in other layers should be non \u2013 linear \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " To provide generalization capability to a network, except input layer, all units in other layers should be non \u2013 linear. \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n "
    },
    {
      "id": "1191",
      "question": "What is the objective of pattern mapping problem? \n",
      "answerA": " to capture implied function \n",
      "answerB": " to capture system characteristics from observed data \n",
      "answerC": " both to implied function and system characteristics \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " The implied fuction is all about system characteristics. \n "
    },
    {
      "id": "1192",
      "question": "The nature of mapping problem decides? \n",
      "answerA": " number of units in second layer \n",
      "answerB": " number of units in third layer \n",
      "answerC": " overall number of units in hidden layers \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " The nature of mapping problem decides overall number of units in hidden layers. \n "
    },
    {
      "id": "1193",
      "question": "How is hard learning problem solved? \n",
      "answerA": " using nonlinear differentiable output function for output layers \n",
      "answerB": " using nonlinear differentiable output function for hidden layers \n",
      "answerC": " using nonlinear differentiable output function for output and hidden layers \n",
      "answerD": " it cannot be solved ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " Hard learning problem is solved by using nonlinear differentiable output function for output and hidden layers. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1194",
      "question": "The number of units in hidden layers depends on? \n",
      "answerA": " the number of inputs \n",
      "answerB": " the number of outputs \n",
      "answerC": " both the number of inputs and outputs \n",
      "answerD": " the overall characteristics of the mapping problem ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " The number of units in hidden layers depends on the overall characteristics of the mapping problem. \n Sanfoundry Global Education & Learning Series \u2013 Neural Networks. \n To practice all areas of Neural Networks,  here is complete set on 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Neural Networks Question and Answers \u2013 Pattern Classification \u2013 2 \u00bb  Next - Neural Network Questions and Answers \u2013 Pattern Recognition   Related Posts: Apply for  Electrical & Electronics Engineering Internship \n Check  Electronics & Communication Engineering Books \n Practice  Electronics & Communication Engineering MCQs \n Check  Electrical & Electronics Engineering Books \n Apply for  Electronics & Communication Engineering Internship \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Neural Networks Question and Answers \u2013 Pattern Classification \u2013 2  \n Neural Network Questions and Answers \u2013 Pattern Association \u2013 1  \n Neural Networks Questions and Answers \u2013 Introduction of Feedback Neural Network  \n Neural Network Questions and Answers \u2013 Applications of Neural Networks \u2013 1  \n Neural Network Questions and Answers \u2013 Analysis of Feature Mapping Network  \n Neural Network Questions and Answers \u2013 Applications of Neural Networks \u2013 2  \n Neural Network Questions and Answers \u2013 Pattern Association \u2013 2  \n Neural Network Questions and Answers \u2013 Analysis of Pattern Storage  \n Neural Network Questions and Answers \u2013 Multi Layer Feedforward Neural Network  \n Neural Network Questions and Answers \u2013 Analysis of Pattern Storage Networks \u2013 2  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Neural Networks MCQ Questions Searching and Sorting Algorithms in C Analog Circuits MCQ Questions Linear Integrated Circuits MCQ Questions Engineering Mathematics MCQ Questions Popular Pages: String Programs in C++ LISP MCQ Questions Java String Programs: Code Examples & Solutions Computer Graphics MCQ Questions Java Matrix Programs    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Neural Networks MCQs \n \n \n \n \n Introduction \n Neural Network Introduction \n \n Basics of Artificial Neural Networks \n Neural Characteristics - 1 \n Neural Characteristics - 2 \n Neural Characteristics - 3 \n Neural Networks History \n Neural Terminology \n Neural Networks Models - 1 \n Neural Networks Models - 2 \n Neural Networks Topology \n Neural Network Learning - 1 \n Neural Network Learning - 2 \n \n Activation & Synaptic Dynamics \n Neural Network Dynamics \n Activation Models \n Learning Basics - 1 \n Learning Basics - 2 \n Learning Laws - 1 \n Learning Laws - 2 \n Stability & Convergence \n Recall \n \n Feedforward Neural Networks \n Pattern Association - 1 \n Pattern Association - 2 \n Weight Determination \n Pattern Classification - 1 \n Pattern Classification - 2 \n Pattern Mapping \n Pattern Recognition \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Pattern Storage Analysis \n \n Feedback Neural Networks \n Feedback Neural Network \n FF Network Analysis \n Pattern Storage Networks-1 \n Pattern Storage Networks-2 \n Hopfield Model - 1 \n Hopfield Model - 2 \n Stochastic Networks \n Boltzman Machine - 1 \n Boltzman Machine - 2 \n \n Competitive Learning Neural Networks \n Learning Neural Network \n Feedback Layer \n Feature Mapping Network \n \n Complex Pattern Architectures & ANN Applications \n Associative Memories \n Multi Layer Neural Network \n ART \n Neural Applications - 1 \n Neural Applications - 2 \n \n Neural Networks in Machine Learning \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n Best Reference Books \n Neural Networks Books \n \n \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Neural Networks MCQ Questions Searching and Sorting Algorithms in C Analog Circuits MCQ Questions Linear Integrated Circuits MCQ Questions Engineering Mathematics MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages String Programs in C++ LISP MCQ Questions Java String Programs: Code Examples & Solutions Computer Graphics MCQ Questions Java Matrix Programs \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Neural Networks MCQs \n \n Introduction \n Neural Network Introduction \n \n Basics of Artificial Neural Networks \n Neural Characteristics - 1 \n Neural Characteristics - 2 \n Neural Characteristics - 3 \n Neural Networks History \n Neural Terminology \n Neural Networks Models - 1 \n Neural Networks Models - 2 \n Neural Networks Topology \n Neural Network Learning - 1 \n Neural Network Learning - 2 \n \n Activation & Synaptic Dynamics \n Neural Network Dynamics \n Activation Models \n Learning Basics - 1 \n Learning Basics - 2 \n Learning Laws - 1 \n Learning Laws - 2 \n Stability & Convergence \n Recall \n \n Feedforward Neural Networks \n Pattern Association - 1 \n Pattern Association - 2 \n Weight Determination \n Pattern Classification - 1 \n Pattern Classification - 2 \n Pattern Mapping \n Pattern Recognition \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Pattern Storage Analysis \n \n Feedback Neural Networks \n Feedback Neural Network \n FF Network Analysis \n Pattern Storage Networks-1 \n Pattern Storage Networks-2 \n Hopfield Model - 1 \n Hopfield Model - 2 \n Stochastic Networks \n Boltzman Machine - 1 \n Boltzman Machine - 2 \n \n Competitive Learning Neural Networks \n Learning Neural Network \n Feedback Layer \n Feature Mapping Network \n \n Complex Pattern Architectures & ANN Applications \n Associative Memories \n Multi Layer Neural Network \n ART \n Neural Applications - 1 \n Neural Applications - 2 \n \n Neural Networks in Machine Learning \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n Best Reference Books \n Neural Networks Books \n \n \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.531 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-01-31 10:53:50  \n  Compression = gzip "
    },
    {
      "id": "1195",
      "question": "Convergence in perceptron learning takes place if and only if: \n",
      "answerA": " a minimal error condition is satisfied \n",
      "answerB": " actual output is close to desired output \n",
      "answerC": " classes are linearly separable \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " Linear separability of classes is the condition for convergence of weighs in perceprton learning. \n \n \n \n \n \n "
    },
    {
      "id": "1196",
      "question": "When line joining any two points in the set lies entirely in region enclosed by the set in M-dimensional space , then the set is known as? \n",
      "answerA": " convex set \n",
      "answerB": " concave set \n",
      "answerC": " may be concave or convex \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " A convex set is a set of points in M-dimensional space such that line joining any two points in the set lies entirely in region enclosed by the set. \n "
    },
    {
      "id": "1197",
      "question": "As dimensionality of input vector increases, what happens to linear separability? \n",
      "answerA": " increases \n",
      "answerB": " decreases \n",
      "answerC": " no effect \n",
      "answerD": " doesn\u2019t depend on dimensionality ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Linear separability decreases as dimensionality increases. \n \n \n    \nNote: Join free Sanfoundry classes at  Telegram  or  Youtube \n \n \n \n \n \n \n \n "
    },
    {
      "id": "1198",
      "question": "In a three layer network, shape of dividing surface is determined by? \n",
      "answerA": " number of units in second layer \n",
      "answerB": " number of units in third layer \n",
      "answerC": " number of units in second and third layer \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Practically, number of units in second layer determines shape of dividing surface. \n "
    },
    {
      "id": "1199",
      "question": "In a three layer network, number of classes is determined by? \n",
      "answerA": " number of units in second layer \n",
      "answerB": " number of units in third layer \n",
      "answerC": " number of units in second and third layer \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Practically, number of units in third layer determines number of classes. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1200",
      "question": "If the output produces nonconvex regions, then how many layered neural is required at minimum? \n",
      "answerA": " 2 \n",
      "answerB": " 3 \n",
      "answerC": " 4 \n",
      "answerD": "5",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " Adding one more layer of units to three layer can yield surfaces which can separate even nonconvex regions. \n Sanfoundry Global Education & Learning Series \u2013 Neural Networks. \n To practice all areas of Neural Networks for various tests,  here is complete set on 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Neural Network Questions and Answers \u2013 Pattern Classification \u2013 1 \u00bb  Next - Neural Networks Question and Answers \u2013 Pattern Mapping   Related Posts: Apply for  Electronics & Communication Engineering Internship \n Check  Electrical & Electronics Engineering Books \n Check  Neural Networks Books \n Practice  Electrical & Electronics Engineering MCQs \n Apply for  Neural Networks Internship \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Neural Network Questions and Answers \u2013 Pattern Classification \u2013 1  \n Neural Networks Question and Answers \u2013 Pattern Mapping  \n Neural Network Questions and Answers \u2013 Pattern Association \u2013 2  \n Artificial Intelligence Questions and Answers \u2013 Neural Networks \u2013 2  \n Neural Networks Questions and Answers \u2013 Multiclass Classification  \n Neural Networks Questions and Answers \u2013 Introduction of Feedback Neural Network  \n Neural Network Questions and Answers \u2013 Applications of Neural Networks \u2013 2  \n Neural Network Questions and Answers \u2013 Applications of Neural Networks \u2013 1  \n Neural Networks Questions and Answers \u2013 Cost Function  \n Neural Network Questions and Answers \u2013 Analysis of Pattern Storage Networks \u2013 2  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Neural Networks MCQ Questions Computer Graphics MCQ Questions C++ Algorithm Library String Programs in C++ Antenna MCQ Questions Popular Pages: C++ Algorithms JavaScript MCQ Questions C Programming Examples String Programs in C Searching and Sorting Algorithms in C    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Neural Networks MCQs \n \n \n \n \n Introduction \n Neural Network Introduction \n \n Basics of Artificial Neural Networks \n Neural Characteristics - 1 \n Neural Characteristics - 2 \n Neural Characteristics - 3 \n Neural Networks History \n Neural Terminology \n Neural Networks Models - 1 \n Neural Networks Models - 2 \n Neural Networks Topology \n Neural Network Learning - 1 \n Neural Network Learning - 2 \n \n Activation & Synaptic Dynamics \n Neural Network Dynamics \n Activation Models \n Learning Basics - 1 \n Learning Basics - 2 \n Learning Laws - 1 \n Learning Laws - 2 \n Stability & Convergence \n Recall \n \n Feedforward Neural Networks \n Pattern Association - 1 \n Pattern Association - 2 \n Weight Determination \n Pattern Classification - 1 \n Pattern Classification - 2 \n Pattern Mapping \n Pattern Recognition \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Pattern Storage Analysis \n \n Feedback Neural Networks \n Feedback Neural Network \n FF Network Analysis \n Pattern Storage Networks-1 \n Pattern Storage Networks-2 \n Hopfield Model - 1 \n Hopfield Model - 2 \n Stochastic Networks \n Boltzman Machine - 1 \n Boltzman Machine - 2 \n \n Competitive Learning Neural Networks \n Learning Neural Network \n Feedback Layer \n Feature Mapping Network \n \n Complex Pattern Architectures & ANN Applications \n Associative Memories \n Multi Layer Neural Network \n ART \n Neural Applications - 1 \n Neural Applications - 2 \n \n Neural Networks in Machine Learning \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n Best Reference Books \n Neural Networks Books \n \n \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Neural Networks MCQ Questions Computer Graphics MCQ Questions C++ Algorithm Library String Programs in C++ Antenna MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages C++ Algorithms JavaScript MCQ Questions C Programming Examples String Programs in C Searching and Sorting Algorithms in C \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Neural Networks MCQs \n \n Introduction \n Neural Network Introduction \n \n Basics of Artificial Neural Networks \n Neural Characteristics - 1 \n Neural Characteristics - 2 \n Neural Characteristics - 3 \n Neural Networks History \n Neural Terminology \n Neural Networks Models - 1 \n Neural Networks Models - 2 \n Neural Networks Topology \n Neural Network Learning - 1 \n Neural Network Learning - 2 \n \n Activation & Synaptic Dynamics \n Neural Network Dynamics \n Activation Models \n Learning Basics - 1 \n Learning Basics - 2 \n Learning Laws - 1 \n Learning Laws - 2 \n Stability & Convergence \n Recall \n \n Feedforward Neural Networks \n Pattern Association - 1 \n Pattern Association - 2 \n Weight Determination \n Pattern Classification - 1 \n Pattern Classification - 2 \n Pattern Mapping \n Pattern Recognition \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Pattern Storage Analysis \n \n Feedback Neural Networks \n Feedback Neural Network \n FF Network Analysis \n Pattern Storage Networks-1 \n Pattern Storage Networks-2 \n Hopfield Model - 1 \n Hopfield Model - 2 \n Stochastic Networks \n Boltzman Machine - 1 \n Boltzman Machine - 2 \n \n Competitive Learning Neural Networks \n Learning Neural Network \n Feedback Layer \n Feature Mapping Network \n \n Complex Pattern Architectures & ANN Applications \n Associative Memories \n Multi Layer Neural Network \n ART \n Neural Applications - 1 \n Neural Applications - 2 \n \n Neural Networks in Machine Learning \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n Best Reference Books \n Neural Networks Books \n \n \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.345 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-01-07 18:18:10  \n  Compression = gzip "
    },
    {
      "id": "1201",
      "question": "What is the objective of perceptron learning? \n",
      "answerA": " class identification \n",
      "answerB": " weight adjustment \n",
      "answerC": " adjust weight along with class identification \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " The objective of perceptron learning is to adjust weight along with class identification. \n \n \n \n \n \n "
    },
    {
      "id": "1202",
      "question": "On what factor the number of outputs depends? \n",
      "answerA": " distinct inputs \n",
      "answerB": " distinct classes \n",
      "answerC": " both on distinct classes & inputs \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Number of outputs depends on number of classes. \n "
    },
    {
      "id": "1203",
      "question": "In perceptron learning, what happens when input vector is correctly classified? \n",
      "answerA": " small adjustments in weight is done \n",
      "answerB": " large adjustments in weight is done \n",
      "answerC": " no adjustments in weight is done \n",
      "answerD": " weight adjustments doesn\u2019t depend on classification of input vector ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " No adjustments in weight is done, since input has been correctly classified which is the objective of the system. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1204",
      "question": "When two classes can be separated by a separate line, they are known as? \n",
      "answerA": " linearly separable \n",
      "answerB": " linearly inseparable classes \n",
      "answerC": " may be separable or inseparable, it depends on system \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Linearly separable classes, functions can be separated by a line. \n "
    },
    {
      "id": "1205",
      "question": "Two classes are said to be inseparable when? \n",
      "answerA": " there may exist straight lines that doesn\u2019t touch each other \n",
      "answerB": " there may exist straight lines that can touch each other \n",
      "answerC": " there is only one straight line that separates them \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " Linearly separable classes, functions can be separated by a line. \n "
    },
    {
      "id": "1206",
      "question": "The perceptron convergence theorem is applicable for what kind of data? \n",
      "answerA": " binary \n",
      "answerB": " bipolar \n",
      "answerC": " both binary and bipolar \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " The perceptron convergence theorem is applicable for both binary and bipolar input, output data. \n "
    },
    {
      "id": "1207",
      "question": "If e(m) denotes error for correction of weight then what is formula for error in perceptron learning model: w(m + 1) = w(m) + n(b(m) \u2013 s(m)) a(m), where b(m) is desired output, s(m) is actual output, a(m) is input vector and \u2018w\u2019 denotes weight \n",
      "answerA": " e(m) = n(b(m) \u2013 s(m)) a(m) \n",
      "answerB": " e(m) = n(b(m) \u2013 s(m)) \n",
      "answerC": " e(m) = (b(m) \u2013 s(m)) \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " Error is difference between desired and actual output. \n Sanfoundry Global Education & Learning Series \u2013 Neural Networks. \n To practice all areas of Neural Networks,  here is complete set on 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Neural Network Questions and Answers \u2013 Determination of Weights \u00bb  Next - Neural Networks Question and Answers \u2013 Pattern Classification \u2013 2   Related Posts: Practice  Electronics & Communication Engineering MCQs \n Check  Electrical & Electronics Engineering Books \n Apply for  Electrical & Electronics Engineering Internship \n Check  Electronics & Communication Engineering Books \n Apply for  Electronics & Communication Engineering Internship \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Neural Network Questions and Answers \u2013 Models \u2013 2  \n Neural Network Questions and Answers \u2013 Learning \u2013 1  \n Neural Network Questions and Answers \u2013 Analysis of Feature Mapping Network  \n Neural Networks Question and Answers \u2013 Pattern Classification \u2013 2  \n Neural Network Questions and Answers \u2013 Learning \u2013 2  \n Neural Networks Question and Answers \u2013 Pattern Mapping  \n Neural Network Questions and Answers \u2013 Learning Basics \u2013 2  \n Neural Network Questions and Answers \u2013 Competitive Learning Neural Nework Introduction  \n Neural Network Questions and Answers \u2013 Determination of Weights  \n Neural Network Questions and Answers \u2013 Pattern Recognition  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Neural Networks MCQ Questions Network Theory MCQ Questions Computer Network MCQ Questions Cryptography and Network Security MCQ Questions MATLAB MCQ Questions Popular Pages: Java Programs on Classes and Objects Free Online Training Courses C# MCQ Questions Visual Basic MCQ Questions Microcontroller MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Neural Networks MCQs \n \n \n \n \n Introduction \n Neural Network Introduction \n \n Basics of Artificial Neural Networks \n Neural Characteristics - 1 \n Neural Characteristics - 2 \n Neural Characteristics - 3 \n Neural Networks History \n Neural Terminology \n Neural Networks Models - 1 \n Neural Networks Models - 2 \n Neural Networks Topology \n Neural Network Learning - 1 \n Neural Network Learning - 2 \n \n Activation & Synaptic Dynamics \n Neural Network Dynamics \n Activation Models \n Learning Basics - 1 \n Learning Basics - 2 \n Learning Laws - 1 \n Learning Laws - 2 \n Stability & Convergence \n Recall \n \n Feedforward Neural Networks \n Pattern Association - 1 \n Pattern Association - 2 \n Weight Determination \n Pattern Classification - 1 \n Pattern Classification - 2 \n Pattern Mapping \n Pattern Recognition \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Pattern Storage Analysis \n \n Feedback Neural Networks \n Feedback Neural Network \n FF Network Analysis \n Pattern Storage Networks-1 \n Pattern Storage Networks-2 \n Hopfield Model - 1 \n Hopfield Model - 2 \n Stochastic Networks \n Boltzman Machine - 1 \n Boltzman Machine - 2 \n \n Competitive Learning Neural Networks \n Learning Neural Network \n Feedback Layer \n Feature Mapping Network \n \n Complex Pattern Architectures & ANN Applications \n Associative Memories \n Multi Layer Neural Network \n ART \n Neural Applications - 1 \n Neural Applications - 2 \n \n Neural Networks in Machine Learning \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n Best Reference Books \n Neural Networks Books \n \n \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Neural Networks MCQ Questions Network Theory MCQ Questions Computer Network MCQ Questions Cryptography and Network Security MCQ Questions MATLAB MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Java Programs on Classes and Objects Free Online Training Courses C# MCQ Questions Visual Basic MCQ Questions Microcontroller MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Neural Networks MCQs \n \n Introduction \n Neural Network Introduction \n \n Basics of Artificial Neural Networks \n Neural Characteristics - 1 \n Neural Characteristics - 2 \n Neural Characteristics - 3 \n Neural Networks History \n Neural Terminology \n Neural Networks Models - 1 \n Neural Networks Models - 2 \n Neural Networks Topology \n Neural Network Learning - 1 \n Neural Network Learning - 2 \n \n Activation & Synaptic Dynamics \n Neural Network Dynamics \n Activation Models \n Learning Basics - 1 \n Learning Basics - 2 \n Learning Laws - 1 \n Learning Laws - 2 \n Stability & Convergence \n Recall \n \n Feedforward Neural Networks \n Pattern Association - 1 \n Pattern Association - 2 \n Weight Determination \n Pattern Classification - 1 \n Pattern Classification - 2 \n Pattern Mapping \n Pattern Recognition \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Pattern Storage Analysis \n \n Feedback Neural Networks \n Feedback Neural Network \n FF Network Analysis \n Pattern Storage Networks-1 \n Pattern Storage Networks-2 \n Hopfield Model - 1 \n Hopfield Model - 2 \n Stochastic Networks \n Boltzman Machine - 1 \n Boltzman Machine - 2 \n \n Competitive Learning Neural Networks \n Learning Neural Network \n Feedback Layer \n Feature Mapping Network \n \n Complex Pattern Architectures & ANN Applications \n Associative Memories \n Multi Layer Neural Network \n ART \n Neural Applications - 1 \n Neural Applications - 2 \n \n Neural Networks in Machine Learning \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n Best Reference Books \n Neural Networks Books \n \n \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.418 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-01-31 10:43:47  \n  Compression = gzip "
    },
    {
      "id": "1208",
      "question": "In determination of weights by learning, for orthogonal input vectors what kind of learning should be employed? \n",
      "answerA": " hebb learning law \n",
      "answerB": " widrow learning law \n",
      "answerC": " hoff learning law \n",
      "answerD": " no learning law ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " For orthogonal input vectors, Hebb learning law is best suited. \n \n \n \n \n \n "
    },
    {
      "id": "1209",
      "question": "In determination of weights by learning, for linear input vectors what kind of learning should be employed? \n",
      "answerA": " hebb learning law \n",
      "answerB": " widrow learning law \n",
      "answerC": " hoff learning law \n",
      "answerD": " no learning law ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " For linear input vectors, widrow learning law is best suited. \n "
    },
    {
      "id": "1210",
      "question": "In determination of weights by learning, for noisy input vectors what kind of learning should be employed? \n",
      "answerA": " hebb learning law \n",
      "answerB": " widrow learning law \n",
      "answerC": " hoff learning law \n",
      "answerD": " no learning law ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " For noisy input vectors, there is no learning law. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1211",
      "question": "What are the features that can be accomplished using affine transformations? \n",
      "answerA": " arbitrary rotation \n",
      "answerB": " scaling \n",
      "answerC": " translation \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " Affine transformations can be used to do arbitrary rotation, scaling, translation. \n "
    },
    {
      "id": "1213",
      "question": "what are affine transformations? \n",
      "answerA": " addition of bias term (-1) which results in arbitrary rotation, scaling, translation of input pattern \n",
      "answerB": " addition of bias term (+1) which results in arbitrary rotation, scaling, translation of input pattern \n",
      "answerC": " addition of bias term (-1) or (+1) which results in arbitrary rotation, scaling, translation of input pattern \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " It follows from basic definition of affine transformation. \n "
    },
    {
      "id": "1214",
      "question": "Number of output cases depends on what factor? \n",
      "answerA": " number of inputs \n",
      "answerB": " number of distinct classes \n",
      "answerC": " total number of classes \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Number of output cases depends on number of distinct classes. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1215",
      "question": "What are hard problems? \n",
      "answerA": " classification problems which are not clearly separable \n",
      "answerB": " classification problems which are not associatively separable \n",
      "answerC": " classification problems which are not functionally separable \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " Classification problems which are not linearly separable separable are known as hard problems. \n \n \n \n \n \n "
    },
    {
      "id": "1216",
      "question": "What is generalization? \n",
      "answerA": " ability to store a pattern \n",
      "answerB": " ability to recall a pattern \n",
      "answerC": " ability to learn a mapping function \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " Generalization is the ability to learn a mapping function. \n "
    },
    {
      "id": "1217",
      "question": "Generalization feature of a multilayer feedforward network depends on factors? \n",
      "answerA": " architectural details \n",
      "answerB": " learning rate parameter \n",
      "answerC": " training samples \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Generalization feature of a multilayer feedforward network depends on all of these above mentioned factors. \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n "
    },
    {
      "id": "1218",
      "question": "What is accretive behaviour? \n",
      "answerA": " not a type of pattern clustering task \n",
      "answerB": " for small noise variations pattern lying closet to the desired pattern is recalled. \n",
      "answerC": " for small noise variations noisy pattern having parameter adjusted according to noise variation is recalled \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " In accretive behaviour, pattern lying closet to the desired pattern is recalled. \n "
    },
    {
      "id": "1219",
      "question": "What is Interpolative behaviour? \n",
      "answerA": " not a type of pattern clustering task \n",
      "answerB": " for small noise variations pattern lying closet to the desired pattern is recalled. \n",
      "answerC": " for small noise variations noisy pattern having parameter adjusted according to noise variation is recalled \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " In interpolative behaviour, pattern having parameter adjusted according to noise variation is recalled & not the ideal one. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1220",
      "question": "What is the feature that doesn\u2019t belongs to pattern classification in feeddorward neural networks? \n",
      "answerA": " recall is direct \n",
      "answerB": " delta rule learning \n",
      "answerC": " non linear processing units \n",
      "answerD": " two layers ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " It involves perceptron learning. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1221",
      "question": "What is the feature that doesn\u2019t belongs to pattern mapping in feeddorward neural networks? \n",
      "answerA": " recall is direct \n",
      "answerB": " delta rule learning \n",
      "answerC": " non linear processing units \n",
      "answerD": " two layers ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " It involves multiple layers. \n Sanfoundry Global Education & Learning Series \u2013 Neural Networks. \n To practice Neural Networks question bank,  here is complete set on 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Neural Network Questions and Answers \u2013 Pattern Association \u2013 1 \u00bb  Next - Neural Network Questions and Answers \u2013 Determination of Weights   Related Posts: Practice  Electrical & Electronics Engineering MCQs \n Apply for  Electronics & Communication Engineering Internship \n Check  Electronics & Communication Engineering Books \n Check  Electrical & Electronics Engineering Books \n Practice  Electronics & Communication Engineering MCQs \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Neural Network Questions and Answers \u2013 Pattern Association \u2013 1  \n Neural Network Questions and Answers \u2013 Multi Layer Feedforward Neural Network  \n Neural Network Questions and Answers \u2013 Backpropagation Algorithm  \n Neural Networks Question and Answers \u2013 Pattern Mapping  \n Neural Network Questions and Answers \u2013 Pattern Classification \u2013 1  \n Neural Network Questions and Answers \u2013 Pattern Recognition  \n Neural Network Questions and Answers \u2013 Applications of Neural Networks \u2013 1  \n Neural Network Questions and Answers \u2013 Applications of Neural Networks \u2013 2  \n Neural Network Questions and Answers \u2013 Competitive Learning Neural Nework Introduction  \n Neural Network Questions and Answers \u2013 Recall  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Neural Networks MCQ Questions Network Theory MCQ Questions Cryptography and Network Security MCQ Questions C++ Algorithm Library Automata Theory MCQ Questions Popular Pages: Computer Network MCQ Questions Dynamic Programming Examples Searching and Sorting Algorithms in C String Programs in C++ Algorithms in C    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Neural Networks MCQs \n \n \n \n \n Introduction \n Neural Network Introduction \n \n Basics of Artificial Neural Networks \n Neural Characteristics - 1 \n Neural Characteristics - 2 \n Neural Characteristics - 3 \n Neural Networks History \n Neural Terminology \n Neural Networks Models - 1 \n Neural Networks Models - 2 \n Neural Networks Topology \n Neural Network Learning - 1 \n Neural Network Learning - 2 \n \n Activation & Synaptic Dynamics \n Neural Network Dynamics \n Activation Models \n Learning Basics - 1 \n Learning Basics - 2 \n Learning Laws - 1 \n Learning Laws - 2 \n Stability & Convergence \n Recall \n \n Feedforward Neural Networks \n Pattern Association - 1 \n Pattern Association - 2 \n Weight Determination \n Pattern Classification - 1 \n Pattern Classification - 2 \n Pattern Mapping \n Pattern Recognition \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Pattern Storage Analysis \n \n Feedback Neural Networks \n Feedback Neural Network \n FF Network Analysis \n Pattern Storage Networks-1 \n Pattern Storage Networks-2 \n Hopfield Model - 1 \n Hopfield Model - 2 \n Stochastic Networks \n Boltzman Machine - 1 \n Boltzman Machine - 2 \n \n Competitive Learning Neural Networks \n Learning Neural Network \n Feedback Layer \n Feature Mapping Network \n \n Complex Pattern Architectures & ANN Applications \n Associative Memories \n Multi Layer Neural Network \n ART \n Neural Applications - 1 \n Neural Applications - 2 \n \n Neural Networks in Machine Learning \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n Best Reference Books \n Neural Networks Books \n \n \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Neural Networks MCQ Questions Network Theory MCQ Questions Cryptography and Network Security MCQ Questions C++ Algorithm Library Automata Theory MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Computer Network MCQ Questions Dynamic Programming Examples Searching and Sorting Algorithms in C String Programs in C++ Algorithms in C \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Neural Networks MCQs \n \n Introduction \n Neural Network Introduction \n \n Basics of Artificial Neural Networks \n Neural Characteristics - 1 \n Neural Characteristics - 2 \n Neural Characteristics - 3 \n Neural Networks History \n Neural Terminology \n Neural Networks Models - 1 \n Neural Networks Models - 2 \n Neural Networks Topology \n Neural Network Learning - 1 \n Neural Network Learning - 2 \n \n Activation & Synaptic Dynamics \n Neural Network Dynamics \n Activation Models \n Learning Basics - 1 \n Learning Basics - 2 \n Learning Laws - 1 \n Learning Laws - 2 \n Stability & Convergence \n Recall \n \n Feedforward Neural Networks \n Pattern Association - 1 \n Pattern Association - 2 \n Weight Determination \n Pattern Classification - 1 \n Pattern Classification - 2 \n Pattern Mapping \n Pattern Recognition \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Pattern Storage Analysis \n \n Feedback Neural Networks \n Feedback Neural Network \n FF Network Analysis \n Pattern Storage Networks-1 \n Pattern Storage Networks-2 \n Hopfield Model - 1 \n Hopfield Model - 2 \n Stochastic Networks \n Boltzman Machine - 1 \n Boltzman Machine - 2 \n \n Competitive Learning Neural Networks \n Learning Neural Network \n Feedback Layer \n Feature Mapping Network \n \n Complex Pattern Architectures & ANN Applications \n Associative Memories \n Multi Layer Neural Network \n ART \n Neural Applications - 1 \n Neural Applications - 2 \n \n Neural Networks in Machine Learning \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n Best Reference Books \n Neural Networks Books \n \n \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.573 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-01-31 15:21:20  \n  Compression = gzip "
    },
    {
      "id": "1222",
      "question": "Feedforward networks are used for? \n",
      "answerA": " pattern mapping \n",
      "answerB": " pattern association \n",
      "answerC": " pattern classification \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " Feedforward networks are used for pattern mapping, pattern association, pattern classification. \n \n \n \n \n \n "
    },
    {
      "id": "1223",
      "question": "Feedback networks are used for? \n",
      "answerA": " autoassociation \n",
      "answerB": " pattern storage \n",
      "answerC": " both autoassociation & pattern storage \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": "  Feedback networks are used for autoassociation, pattern storage. \n "
    },
    {
      "id": "1224",
      "question": "Competitive learning net is used for? \n",
      "answerA": " pattern grouping \n",
      "answerB": " pattern storage \n",
      "answerC": " pattern grouping or storage \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Competitive learning net is used for pattern grouping. \n "
    },
    {
      "id": "1225",
      "question": "Feedback connection strength are usually ? \n",
      "answerA": " fixed \n",
      "answerB": " variable \n",
      "answerC": " both fixed or variable type \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Feedback connection strength are usually fixed & linear to reduce complexity. \n \n \n    \nNote: Join free Sanfoundry classes at  Telegram  or  Youtube \n \n \n \n \n \n \n \n "
    },
    {
      "id": "1226",
      "question": "If some of output patterns in pattern association problem are identical then problem shifts to? \n",
      "answerA": " pattern storage problem \n",
      "answerB": " pattern classification problem \n",
      "answerC": " pattern mapping problem \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": "  Because then number of distinct output can be viewed as class labels. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1227",
      "question": "The network for pattern mapping is expected to perform? \n",
      "answerA": " pattern storage \n",
      "answerB": " pattern classification \n",
      "answerC": " genaralization \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " The network for pattern mapping is expected to perform genaralization. \n "
    },
    {
      "id": "1228",
      "question": "In case of autoassociation  by feedback nets in pattern recognition task, what is the behaviour expected? \n",
      "answerA": " accretive \n",
      "answerB": " interpolative \n",
      "answerC": " can be either accretive or interpolative \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " When a noisy pattern is given , network retrieves a noisy pattern. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1229",
      "question": "In case of pattern by feedback nets in pattern recognition task, what is the behaviour expected? \n",
      "answerA": " accretive \n",
      "answerB": " interpolative \n",
      "answerC": " can be either accretive or interpolative \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": "Accretive behaviour is exhibited in case of pattern storage problem. \n Sanfoundry Global Education & Learning Series \u2013 Neural Networks. \n To practice all areas of Neural Networks,  here is complete set on 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Neural Network Questions and Answers \u2013 Recall \u00bb  Next - Neural Network Questions and Answers \u2013 Pattern Association \u2013 2   Related Posts: Check  Electronics & Communication Engineering Books \n Apply for  Electronics & Communication Engineering Internship \n Practice  Electronics & Communication Engineering MCQs \n Practice  Electrical & Electronics Engineering MCQs \n Check  Electrical & Electronics Engineering Books \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Neural Network Questions and Answers \u2013 Pattern Recognition  \n Neural Network Questions and Answers \u2013 Pattern Association \u2013 2  \n Neural Network Questions and Answers \u2013 Analysis of Pattern Storage  \n Neural Network Questions and Answers \u2013 Competitive Learning Neural Nework Introduction  \n Neural Network Questions and Answers \u2013 Multi Layer Feedforward Neural Network  \n Neural Networks Questions and Answers \u2013 Introduction of Feedback Neural Network  \n Neural Network Questions and Answers \u2013 Analysis of Pattern Storage Networks \u2013 2  \n Neural Network Questions and Answers \u2013 Analysis of Pattern Storage Networks \u2013 1  \n Neural Network Questions and Answers \u2013 Applications of Neural Networks \u2013 2  \n Neural Network Questions and Answers \u2013 Applications of Neural Networks \u2013 1  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Neural Networks MCQ Questions Network Theory MCQ Questions Computer Network MCQ Questions SAN MCQ Questions Cryptography and Network Security MCQ Questions Popular Pages: Analog Circuits MCQ Questions MCA Questions and Answers LISP MCQ Questions Information Science Questions and Answers Free Online Training Courses    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Neural Networks MCQs \n \n \n \n \n Introduction \n Neural Network Introduction \n \n Basics of Artificial Neural Networks \n Neural Characteristics - 1 \n Neural Characteristics - 2 \n Neural Characteristics - 3 \n Neural Networks History \n Neural Terminology \n Neural Networks Models - 1 \n Neural Networks Models - 2 \n Neural Networks Topology \n Neural Network Learning - 1 \n Neural Network Learning - 2 \n \n Activation & Synaptic Dynamics \n Neural Network Dynamics \n Activation Models \n Learning Basics - 1 \n Learning Basics - 2 \n Learning Laws - 1 \n Learning Laws - 2 \n Stability & Convergence \n Recall \n \n Feedforward Neural Networks \n Pattern Association - 1 \n Pattern Association - 2 \n Weight Determination \n Pattern Classification - 1 \n Pattern Classification - 2 \n Pattern Mapping \n Pattern Recognition \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Pattern Storage Analysis \n \n Feedback Neural Networks \n Feedback Neural Network \n FF Network Analysis \n Pattern Storage Networks-1 \n Pattern Storage Networks-2 \n Hopfield Model - 1 \n Hopfield Model - 2 \n Stochastic Networks \n Boltzman Machine - 1 \n Boltzman Machine - 2 \n \n Competitive Learning Neural Networks \n Learning Neural Network \n Feedback Layer \n Feature Mapping Network \n \n Complex Pattern Architectures & ANN Applications \n Associative Memories \n Multi Layer Neural Network \n ART \n Neural Applications - 1 \n Neural Applications - 2 \n \n Neural Networks in Machine Learning \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n Best Reference Books \n Neural Networks Books \n \n \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Neural Networks MCQ Questions Network Theory MCQ Questions Computer Network MCQ Questions SAN MCQ Questions Cryptography and Network Security MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Analog Circuits MCQ Questions MCA Questions and Answers LISP MCQ Questions Information Science Questions and Answers Free Online Training Courses \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Neural Networks MCQs \n \n Introduction \n Neural Network Introduction \n \n Basics of Artificial Neural Networks \n Neural Characteristics - 1 \n Neural Characteristics - 2 \n Neural Characteristics - 3 \n Neural Networks History \n Neural Terminology \n Neural Networks Models - 1 \n Neural Networks Models - 2 \n Neural Networks Topology \n Neural Network Learning - 1 \n Neural Network Learning - 2 \n \n Activation & Synaptic Dynamics \n Neural Network Dynamics \n Activation Models \n Learning Basics - 1 \n Learning Basics - 2 \n Learning Laws - 1 \n Learning Laws - 2 \n Stability & Convergence \n Recall \n \n Feedforward Neural Networks \n Pattern Association - 1 \n Pattern Association - 2 \n Weight Determination \n Pattern Classification - 1 \n Pattern Classification - 2 \n Pattern Mapping \n Pattern Recognition \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Pattern Storage Analysis \n \n Feedback Neural Networks \n Feedback Neural Network \n FF Network Analysis \n Pattern Storage Networks-1 \n Pattern Storage Networks-2 \n Hopfield Model - 1 \n Hopfield Model - 2 \n Stochastic Networks \n Boltzman Machine - 1 \n Boltzman Machine - 2 \n \n Competitive Learning Neural Networks \n Learning Neural Network \n Feedback Layer \n Feature Mapping Network \n \n Complex Pattern Architectures & ANN Applications \n Associative Memories \n Multi Layer Neural Network \n ART \n Neural Applications - 1 \n Neural Applications - 2 \n \n Neural Networks in Machine Learning \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n Best Reference Books \n Neural Networks Books \n \n \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.459 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-01-31 10:15:49  \n  Compression = gzip "
    },
    {
      "id": "1230",
      "question": "What\u2019s the role of lyaopunov fuction? \n",
      "answerA": " to determine stability \n",
      "answerB": " to determine convergence \n",
      "answerC": " both stability & convergence \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " lyapunov is an energy function. \n "
    },
    {
      "id": "1231",
      "question": "V(x) is said to be lyapunov function if? \n",
      "answerA": " v(x) >=0 \n",
      "answerB": " v(x) <=0 \n",
      "answerC": " v(x) =0 \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " It is the condition for existence for lyapunov function. \n "
    },
    {
      "id": "1232",
      "question": "What does cohen grossberg theorem? \n",
      "answerA": " shows the stability of fixed weight autoassociative networks \n",
      "answerB": " shows the stability of adaptive autoaassociative networks \n",
      "answerC": " shows the stability of adaptive heteroassociative networks \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Cohen grossberg theorem shows the stability of fixed weight autoassociative networks. \n \n \n    \nNote: Join free Sanfoundry classes at  Telegram  or  Youtube \n \n \n \n \n \n \n \n "
    },
    {
      "id": "1233",
      "question": "What does cohen grossberg kosko theorem? \n",
      "answerA": " shows the stability of fixed weight autoassociative networks \n",
      "answerB": " shows the stability of adaptive autoaassociative networks \n",
      "answerC": " shows the stability of adaptive heteroassociative networks \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Cohen grossberg kosko shows the stability of adaptive autoaassociative networks. \n "
    },
    {
      "id": "1234",
      "question": "What does 3rd theorem that describe the stability of a set of nonlinear dynamical systems? \n",
      "answerA": " shows the stability of fixed weight autoassociative networks \n",
      "answerB": " shows the stability of adaptive autoaassociative networks \n",
      "answerC": " shows the stability of adaptive heteroassociative networks \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " 3rd theorem of nonlinear dynamical systems, shows the stability of adaptive heteroassociative networks. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1235",
      "question": "What happens during recall in neural networks? \n",
      "answerA": " weight changes are suppressed \n",
      "answerB": " input to the network determines the output activation \n",
      "answerC": " both process has to happen \n",
      "answerD": " none of the  mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " Follows from basic definition of Recall in a network. \n "
    },
    {
      "id": "1236",
      "question": "In nearest neighbour case, the stored pattern closest to input pattern is recalled, where does it occurs? \n",
      "answerA": " feedback pattern classification \n",
      "answerB": " feedforward pattern classification \n",
      "answerC": " can be feedback or feedforward \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " It is a case of feedforward networks. \n Sanfoundry Global Education & Learning Series \u2013 Neural Networks. \n To practice all areas of Neural Networks,  here is complete set on 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Neural Network Questions and Answers \u2013 Stability & Convergence \u00bb  Next - Neural Network Questions and Answers \u2013 Pattern Association \u2013 1   Related Posts: Check  Electronics & Communication Engineering Books \n Check  Neural Networks Books \n Apply for  Electronics & Communication Engineering Internship \n Practice  Electrical & Electronics Engineering MCQs \n Check  Electrical & Electronics Engineering Books \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Neural Network Questions and Answers \u2013 Stability & Convergence  \n Neural Network Questions and Answers \u2013 Multi Layer Feedforward Neural Network  \n Neural Network Questions and Answers \u2013 Activation Models  \n Neural Network Questions and Answers \u2013 Applications of Neural Networks \u2013 2  \n Neural Networks Questions and Answers \u2013 Introduction of Feedback Neural Network  \n Neural Network Questions and Answers \u2013 Pattern Classification \u2013 1  \n Neural Network Questions and Answers \u2013 Backpropagation Algorithm  \n Neural Network Questions and Answers \u2013 Analysis of Linear Autoassociative FF Network  \n Neural Network Questions and Answers \u2013 Competitive Learning Neural Nework Introduction  \n Neural Network Questions and Answers \u2013 Applications of Neural Networks \u2013 1  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Neural Networks MCQ Questions Signals and Systems MCQ Questions Network Theory MCQ Questions C++ Algorithm Library Computer Network MCQ Questions Popular Pages: Cryptography and Network Security MCQ Questions Renewable Energy MCQ Questions Computational Fluid Dynamics MCQ Questions Dynamics of Machinery MCQ Questions Electric Circuits MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Neural Networks MCQs \n \n \n \n \n Introduction \n Neural Network Introduction \n \n Basics of Artificial Neural Networks \n Neural Characteristics - 1 \n Neural Characteristics - 2 \n Neural Characteristics - 3 \n Neural Networks History \n Neural Terminology \n Neural Networks Models - 1 \n Neural Networks Models - 2 \n Neural Networks Topology \n Neural Network Learning - 1 \n Neural Network Learning - 2 \n \n Activation & Synaptic Dynamics \n Neural Network Dynamics \n Activation Models \n Learning Basics - 1 \n Learning Basics - 2 \n Learning Laws - 1 \n Learning Laws - 2 \n Stability & Convergence \n Recall \n \n Feedforward Neural Networks \n Pattern Association - 1 \n Pattern Association - 2 \n Weight Determination \n Pattern Classification - 1 \n Pattern Classification - 2 \n Pattern Mapping \n Pattern Recognition \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Pattern Storage Analysis \n \n Feedback Neural Networks \n Feedback Neural Network \n FF Network Analysis \n Pattern Storage Networks-1 \n Pattern Storage Networks-2 \n Hopfield Model - 1 \n Hopfield Model - 2 \n Stochastic Networks \n Boltzman Machine - 1 \n Boltzman Machine - 2 \n \n Competitive Learning Neural Networks \n Learning Neural Network \n Feedback Layer \n Feature Mapping Network \n \n Complex Pattern Architectures & ANN Applications \n Associative Memories \n Multi Layer Neural Network \n ART \n Neural Applications - 1 \n Neural Applications - 2 \n \n Neural Networks in Machine Learning \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n Best Reference Books \n Neural Networks Books \n \n \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Neural Networks MCQ Questions Signals and Systems MCQ Questions Network Theory MCQ Questions C++ Algorithm Library Computer Network MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Cryptography and Network Security MCQ Questions Renewable Energy MCQ Questions Computational Fluid Dynamics MCQ Questions Dynamics of Machinery MCQ Questions Electric Circuits MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Neural Networks MCQs \n \n Introduction \n Neural Network Introduction \n \n Basics of Artificial Neural Networks \n Neural Characteristics - 1 \n Neural Characteristics - 2 \n Neural Characteristics - 3 \n Neural Networks History \n Neural Terminology \n Neural Networks Models - 1 \n Neural Networks Models - 2 \n Neural Networks Topology \n Neural Network Learning - 1 \n Neural Network Learning - 2 \n \n Activation & Synaptic Dynamics \n Neural Network Dynamics \n Activation Models \n Learning Basics - 1 \n Learning Basics - 2 \n Learning Laws - 1 \n Learning Laws - 2 \n Stability & Convergence \n Recall \n \n Feedforward Neural Networks \n Pattern Association - 1 \n Pattern Association - 2 \n Weight Determination \n Pattern Classification - 1 \n Pattern Classification - 2 \n Pattern Mapping \n Pattern Recognition \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Pattern Storage Analysis \n \n Feedback Neural Networks \n Feedback Neural Network \n FF Network Analysis \n Pattern Storage Networks-1 \n Pattern Storage Networks-2 \n Hopfield Model - 1 \n Hopfield Model - 2 \n Stochastic Networks \n Boltzman Machine - 1 \n Boltzman Machine - 2 \n \n Competitive Learning Neural Networks \n Learning Neural Network \n Feedback Layer \n Feature Mapping Network \n \n Complex Pattern Architectures & ANN Applications \n Associative Memories \n Multi Layer Neural Network \n ART \n Neural Applications - 1 \n Neural Applications - 2 \n \n Neural Networks in Machine Learning \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n Best Reference Books \n Neural Networks Books \n \n \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.471 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-01-31 13:25:08  \n  Compression = gzip "
    },
    {
      "id": "1237",
      "question": "What leads to minimization of error between the desired & actual outputs? \n",
      "answerA": " stability \n",
      "answerB": " convergence \n",
      "answerC": " either stability or convergence \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Convergence is responsible for minimization of error between the desired & actual outputs. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1238",
      "question": "How many trajectories may terminate at same equilibrium state? \n",
      "answerA": " 1 \n",
      "answerB": " 2 \n",
      "answerC": " many \n",
      "answerD": " none ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " There may be several trajectories that may settle to same equilibrium state. \n \n \n    \nNote: Join free Sanfoundry classes at  Telegram  or  Youtube \n \n \n \n \n \n \n \n "
    },
    {
      "id": "1239",
      "question": "If weights are not symmetric i.e cik =! cki, then what happens? \n",
      "answerA": " network may exhibit periodic oscillations of states \n",
      "answerB": " no oscillations as it doesn\u2019t depend on it \n",
      "answerC": " system is stable \n",
      "answerD": " system in practical equilibrium ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " At this situation system exhibits some unwanted oscillations. \n "
    },
    {
      "id": "1240",
      "question": "If states of system experience basins of attraction, then system may achieve what kind of stability? \n",
      "answerA": " fixed point stability \n",
      "answerB": " oscillatory stability \n",
      "answerC": " chaotic stability \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " Basins of attraction is a property of chaotic stability. \n "
    },
    {
      "id": "1241",
      "question": "What is an objective of a learning law? \n",
      "answerA": " to capture pattern information in training set data \n",
      "answerB": " to modify weights so as to achieve output close to desired output \n",
      "answerC": " it should lead to convergence of system or its weights \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": " d \n",
      "trackName": "Data Science",
      "explanation": " These all are some objectives of learning laws. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1242",
      "question": "How many types of reinforcement learning exist? \n",
      "answerA": " 2 \n",
      "answerB": " 3 \n",
      "answerC": " 4 \n",
      "answerD": "5",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Fixed credit assignment, probablistic credit assignment, temporal credit assignment. \n "
    },
    {
      "id": "1243",
      "question": "What is fixed credit assignment? \n",
      "answerA": " reinforcement signal given to input-output pair don\u2019t change with time \n",
      "answerB": " input-output pair determine probability of postive reinforcement \n",
      "answerC": " input pattern depends on past history \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " In fixed credit assignment, reinforcement signal given to input-output pair don\u2019t change with time. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1244",
      "question": "What is probablistic credit assignment? \n",
      "answerA": " reinforcement signal given to input-output pair don\u2019t change with time \n",
      "answerB": " input-output pair determine probability of postive reinforcement \n",
      "answerC": " input pattern depends on past history \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " In probablistic credit assignment, input-output pair determine probability of postive reinforcement. \n "
    },
    {
      "id": "1245",
      "question": "What is temporal credit assignment? \n",
      "answerA": " reinforcement signal given to input-output pair don\u2019t change with time \n",
      "answerB": " input-output pair determine probability of postive reinforcement \n",
      "answerC": " input pattern depends on past history \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " In temporal credit assignment, input pattern depends on past history. \n \n \n    \nSubscribe Now:  Neural Network Newsletter  |  Important Subjects Newsletters \n \n \n \n \n \n \n \n "
    },
    {
      "id": "1246",
      "question": "Boltzman learning uses what kind of learning? \n",
      "answerA": " deterministic \n",
      "answerB": " stochastic \n",
      "answerC": " either deterministic or stochastic \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Boltzman learning uses deterministic learning. \n "
    },
    {
      "id": "1247",
      "question": "Whats true for sparse encoding learning? \n",
      "answerA": " logical And & Or operations are used for input output relations \n",
      "answerB": " weight corresponds to minimum & maximum  of units are connected \n",
      "answerC": " weights are expressed as linear combination of orthogonal basis vectors \n",
      "answerD": " change in weight uses a weighted sum of changes in past input values ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " sparse encoding learning employs Logical And & Or operations are used for input output relations. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1248",
      "question": "Whats true for Drive reinforcement learning? \n",
      "answerA": " logical And & Or operations are used for input output relations \n",
      "answerB": " weight corresponds to minimum & maximum  of units are connected \n",
      "answerC": " weights are expressed as linear combination of orthogonal basis vectors \n",
      "answerD": " change in weight uses a weighted sum of changes in past input values ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " In Drive reinforcement learning, change in weight uses a weighted sum of changes in past input values. \n "
    },
    {
      "id": "1249",
      "question": "Whats true for Min-max learning? \n",
      "answerA": " logical And & Or operations are used for input output relations \n",
      "answerB": " weight corresponds to minimum & maximum  of units are connected \n",
      "answerC": " weights are expressed as linear combination of orthogonal basis vectors \n",
      "answerD": " change in weight uses a weighted sum of changes in past input values ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Min-max learning involves weights which  corresponds to minimum & maximum  of units connected. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1250",
      "question": "Whats true for principal component learning? \n",
      "answerA": " logical And & Or operations are used for input output relations \n",
      "answerB": " weight corresponds to minimum & maximum  of units are connected \n",
      "answerC": " weights are expressed as linear combination of orthogonal basis vectors \n",
      "answerD": " change in weight uses a weighted sum of changes in past input values ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " principal component learning involves weights  that are expressed as linear combination of orthogonal basis vectors. \n Sanfoundry Global Education & Learning Series \u2013 Neural Networks. \n To practice all areas of Neural Networks for Experienced,  here is complete set on 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Neural Network Questions and Answers \u2013 Learning Laws \u2013 1 \u00bb  Next - Neural Network Questions and Answers \u2013 Stability & Convergence   Related Posts: Check  Electrical & Electronics Engineering Books \n Check  Electronics & Communication Engineering Books \n Practice  Electrical & Electronics Engineering MCQs \n Practice  Electronics & Communication Engineering MCQs \n Apply for  Electrical & Electronics Engineering Internship \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Neural Network Questions and Answers \u2013 Learning Laws \u2013 1  \n Neural Network Questions and Answers \u2013 Competitive Learning Neural Nework Introduction  \n Neural Network Questions and Answers \u2013 Learning \u2013 1  \n Neural Network Questions and Answers \u2013 Learning Basics \u2013 2  \n Neural Network Questions and Answers \u2013 Learning \u2013 2  \n Neural Network Questions and Answers \u2013 Learning Basics \u2013 1  \n Neural Networks Questions and Answers \u2013 Introduction of Feedback Neural Network  \n Neural Network Questions and Answers \u2013 Multi Layer Feedforward Neural Network  \n Neural Network Questions and Answers \u2013 Recall  \n Neural Network Questions and Answers \u2013 Applications of Neural Networks \u2013 2  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Neural Networks MCQ Questions Computer Network MCQ Questions Network Theory MCQ Questions Cryptography and Network Security MCQ Questions C++ Algorithm Library Popular Pages: C++ Programs Aircraft Performance MCQ Questions Computer Graphics MCQ Questions Digital Circuits MCQ Questions MATLAB MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Neural Networks MCQs \n \n \n \n \n Introduction \n Neural Network Introduction \n \n Basics of Artificial Neural Networks \n Neural Characteristics - 1 \n Neural Characteristics - 2 \n Neural Characteristics - 3 \n Neural Networks History \n Neural Terminology \n Neural Networks Models - 1 \n Neural Networks Models - 2 \n Neural Networks Topology \n Neural Network Learning - 1 \n Neural Network Learning - 2 \n \n Activation & Synaptic Dynamics \n Neural Network Dynamics \n Activation Models \n Learning Basics - 1 \n Learning Basics - 2 \n Learning Laws - 1 \n Learning Laws - 2 \n Stability & Convergence \n Recall \n \n Feedforward Neural Networks \n Pattern Association - 1 \n Pattern Association - 2 \n Weight Determination \n Pattern Classification - 1 \n Pattern Classification - 2 \n Pattern Mapping \n Pattern Recognition \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Pattern Storage Analysis \n \n Feedback Neural Networks \n Feedback Neural Network \n FF Network Analysis \n Pattern Storage Networks-1 \n Pattern Storage Networks-2 \n Hopfield Model - 1 \n Hopfield Model - 2 \n Stochastic Networks \n Boltzman Machine - 1 \n Boltzman Machine - 2 \n \n Competitive Learning Neural Networks \n Learning Neural Network \n Feedback Layer \n Feature Mapping Network \n \n Complex Pattern Architectures & ANN Applications \n Associative Memories \n Multi Layer Neural Network \n ART \n Neural Applications - 1 \n Neural Applications - 2 \n \n Neural Networks in Machine Learning \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n Best Reference Books \n Neural Networks Books \n \n \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Neural Networks MCQ Questions Computer Network MCQ Questions Network Theory MCQ Questions Cryptography and Network Security MCQ Questions C++ Algorithm Library \n   \n \n \n \n \n \n \n   Popular Pages C++ Programs Aircraft Performance MCQ Questions Computer Graphics MCQ Questions Digital Circuits MCQ Questions MATLAB MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Neural Networks MCQs \n \n Introduction \n Neural Network Introduction \n \n Basics of Artificial Neural Networks \n Neural Characteristics - 1 \n Neural Characteristics - 2 \n Neural Characteristics - 3 \n Neural Networks History \n Neural Terminology \n Neural Networks Models - 1 \n Neural Networks Models - 2 \n Neural Networks Topology \n Neural Network Learning - 1 \n Neural Network Learning - 2 \n \n Activation & Synaptic Dynamics \n Neural Network Dynamics \n Activation Models \n Learning Basics - 1 \n Learning Basics - 2 \n Learning Laws - 1 \n Learning Laws - 2 \n Stability & Convergence \n Recall \n \n Feedforward Neural Networks \n Pattern Association - 1 \n Pattern Association - 2 \n Weight Determination \n Pattern Classification - 1 \n Pattern Classification - 2 \n Pattern Mapping \n Pattern Recognition \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Pattern Storage Analysis \n \n Feedback Neural Networks \n Feedback Neural Network \n FF Network Analysis \n Pattern Storage Networks-1 \n Pattern Storage Networks-2 \n Hopfield Model - 1 \n Hopfield Model - 2 \n Stochastic Networks \n Boltzman Machine - 1 \n Boltzman Machine - 2 \n \n Competitive Learning Neural Networks \n Learning Neural Network \n Feedback Layer \n Feature Mapping Network \n \n Complex Pattern Architectures & ANN Applications \n Associative Memories \n Multi Layer Neural Network \n ART \n Neural Applications - 1 \n Neural Applications - 2 \n \n Neural Networks in Machine Learning \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n Best Reference Books \n Neural Networks Books \n \n \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.713 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-01-31 18:24:27  \n  Compression = gzip "
    },
    {
      "id": "1251",
      "question": "What is hebbian learning? \n",
      "answerA": " synaptic strength is proportional to correlation between firing of post & presynaptic neuron \n",
      "answerB": " synaptic strength is proportional to correlation between firing of postsynaptic neuron only \n",
      "answerC": " synaptic strength is proportional to correlation between firing of presynaptic neuron only \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Folllows from basic definition of hebbian learning. \n \n \n \n \n \n "
    },
    {
      "id": "1252",
      "question": "What is differential hebbian learning? \n",
      "answerA": " synaptic strength is proportional to correlation between firing of post & presynaptic neuron \n",
      "answerB": " synaptic strength is proportional to correlation between firing of postsynaptic neuron only \n",
      "answerC": " synaptic strength is proportional to correlation between firing of presynaptic neuron only \n",
      "answerD": " synaptic strength is proportional to changes in correlation between firing of post & presynaptic neuron ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " Differential hebbian learning is proportional to changes in correlation between firing of post & presynaptic neuron. \n "
    },
    {
      "id": "1253",
      "question": "What is competitive learning? \n",
      "answerA": " learning laws which modulate difference between synaptic weight & output signal \n",
      "answerB": " learning laws which modulate difference between synaptic weight & activation value \n",
      "answerC": " learning laws which modulate difference between actual output & desired output \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Competitive learning laws modulate difference between synaptic weight & output signal. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1254",
      "question": "What is differential competitive learning? \n",
      "answerA": " synaptic strength is proportional to changes of post & presynaptic neuron \n",
      "answerB": " synaptic strength is proportional to changes of postsynaptic neuron only \n",
      "answerC": " synaptic strength is proportional to changes of presynaptic neuron only \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " Differential competitive learning is based on to changes of postsynaptic neuron only. \n "
    },
    {
      "id": "1255",
      "question": "What is error correction learning? \n",
      "answerA": " learning laws which modulate difference between synaptic weight & output signal \n",
      "answerB": " learning laws which modulate difference between synaptic weight & activation value \n",
      "answerC": " learning laws which modulate difference between actual output & desired output \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " Error correction learning is base on difference between actual output & desired output. \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n "
    },
    {
      "id": "1256",
      "question": "Error correction learning is  type of? \n",
      "answerA": " supervised learning \n",
      "answerB": " unsupervised learning \n",
      "answerC": " can be supervised or unsupervised \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Since desired output for an input is known. \n "
    },
    {
      "id": "1257",
      "question": "What is reinforcement learning? \n",
      "answerA": " learning is based on evaluative signal \n",
      "answerB": " learning is based o desired output for an input \n",
      "answerC": " learning is based on both desired output & evaluative signal \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Reinforcement learning is based on evaluative signal. \n Sanfoundry Global Education & Learning Series \u2013 Neural Networks. \n To practice all areas of Neural Networks,  here is complete set on 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Neural Network Questions and Answers \u2013 Learning Basics \u2013 2 \u00bb  Next - Neural Network Questions and Answers \u2013 Learning Laws \u2013 2   Related Posts: Check  Electronics & Communication Engineering Books \n Apply for  Electrical & Electronics Engineering Internship \n Practice  Electrical & Electronics Engineering MCQs \n Check  Neural Networks Books \n Apply for  Electronics & Communication Engineering Internship \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Neural Network Questions and Answers \u2013 Learning \u2013 2  \n Neural Network Questions and Answers \u2013 Learning Laws \u2013 2  \n Neural Network Questions and Answers \u2013 Learning Basics \u2013 2  \n Neural Network Questions and Answers \u2013 Characteristics \u2013 3  \n Neural Network Questions and Answers \u2013 Activation Models  \n Neural Network Questions and Answers \u2013 Dynamics  \n Neural Network Questions and Answers \u2013 Competitive Learning Neural Nework Introduction  \n Neural Network Questions and Answers \u2013 Characteristics \u2013 2  \n Neural Network Questions and Answers \u2013 Learning Basics \u2013 1  \n Neural Network Questions and Answers \u2013 Learning \u2013 1  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Neural Networks MCQ Questions Network Theory MCQ Questions Cryptography and Network Security MCQ Questions Computer Network MCQ Questions Probability and Statistics MCQ Questions Popular Pages: Power Electronics MCQ Questions Clinical Science MCQ Questions Food Packaging Technology MCQ Questions Computer Graphics MCQ Questions Digital Signal Processing MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Neural Networks MCQs \n \n \n \n \n Introduction \n Neural Network Introduction \n \n Basics of Artificial Neural Networks \n Neural Characteristics - 1 \n Neural Characteristics - 2 \n Neural Characteristics - 3 \n Neural Networks History \n Neural Terminology \n Neural Networks Models - 1 \n Neural Networks Models - 2 \n Neural Networks Topology \n Neural Network Learning - 1 \n Neural Network Learning - 2 \n \n Activation & Synaptic Dynamics \n Neural Network Dynamics \n Activation Models \n Learning Basics - 1 \n Learning Basics - 2 \n Learning Laws - 1 \n Learning Laws - 2 \n Stability & Convergence \n Recall \n \n Feedforward Neural Networks \n Pattern Association - 1 \n Pattern Association - 2 \n Weight Determination \n Pattern Classification - 1 \n Pattern Classification - 2 \n Pattern Mapping \n Pattern Recognition \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Pattern Storage Analysis \n \n Feedback Neural Networks \n Feedback Neural Network \n FF Network Analysis \n Pattern Storage Networks-1 \n Pattern Storage Networks-2 \n Hopfield Model - 1 \n Hopfield Model - 2 \n Stochastic Networks \n Boltzman Machine - 1 \n Boltzman Machine - 2 \n \n Competitive Learning Neural Networks \n Learning Neural Network \n Feedback Layer \n Feature Mapping Network \n \n Complex Pattern Architectures & ANN Applications \n Associative Memories \n Multi Layer Neural Network \n ART \n Neural Applications - 1 \n Neural Applications - 2 \n \n Neural Networks in Machine Learning \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n Best Reference Books \n Neural Networks Books \n \n \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Neural Networks MCQ Questions Network Theory MCQ Questions Cryptography and Network Security MCQ Questions Computer Network MCQ Questions Probability and Statistics MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Power Electronics MCQ Questions Clinical Science MCQ Questions Food Packaging Technology MCQ Questions Computer Graphics MCQ Questions Digital Signal Processing MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Neural Networks MCQs \n \n Introduction \n Neural Network Introduction \n \n Basics of Artificial Neural Networks \n Neural Characteristics - 1 \n Neural Characteristics - 2 \n Neural Characteristics - 3 \n Neural Networks History \n Neural Terminology \n Neural Networks Models - 1 \n Neural Networks Models - 2 \n Neural Networks Topology \n Neural Network Learning - 1 \n Neural Network Learning - 2 \n \n Activation & Synaptic Dynamics \n Neural Network Dynamics \n Activation Models \n Learning Basics - 1 \n Learning Basics - 2 \n Learning Laws - 1 \n Learning Laws - 2 \n Stability & Convergence \n Recall \n \n Feedforward Neural Networks \n Pattern Association - 1 \n Pattern Association - 2 \n Weight Determination \n Pattern Classification - 1 \n Pattern Classification - 2 \n Pattern Mapping \n Pattern Recognition \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Pattern Storage Analysis \n \n Feedback Neural Networks \n Feedback Neural Network \n FF Network Analysis \n Pattern Storage Networks-1 \n Pattern Storage Networks-2 \n Hopfield Model - 1 \n Hopfield Model - 2 \n Stochastic Networks \n Boltzman Machine - 1 \n Boltzman Machine - 2 \n \n Competitive Learning Neural Networks \n Learning Neural Network \n Feedback Layer \n Feature Mapping Network \n \n Complex Pattern Architectures & ANN Applications \n Associative Memories \n Multi Layer Neural Network \n ART \n Neural Applications - 1 \n Neural Applications - 2 \n \n Neural Networks in Machine Learning \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n Best Reference Books \n Neural Networks Books \n \n \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.501 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-01-31 13:01:20  \n  Compression = gzip "
    },
    {
      "id": "1258",
      "question": "What is supervised learning? \n",
      "answerA": " weight adjustment based on deviation of desired output from actual output \n",
      "answerB": " weight adjustment based on desired output only \n",
      "answerC": " weight adjustment based on actual output only \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Supervised learning is based on weight adjustment based on deviation of desired output from actual output. \n \n \n \n \n \n "
    },
    {
      "id": "1259",
      "question": "Supervised learning may be used for? \n",
      "answerA": " temporal learning \n",
      "answerB": " structural learning \n",
      "answerC": " both temporal & structural learning \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " Supervised learning may be used for both temporal & structural learning. \n "
    },
    {
      "id": "1260",
      "question": "What is structural learning? \n",
      "answerA": " concerned with capturing input-output relationship in patterns \n",
      "answerB": " concerned with capturing weight relationships \n",
      "answerC": " both weight & input-output relationships \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Structural learning deals with learning the overall structure of network in a macroscopic view. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1261",
      "question": "What is temporal learning? \n",
      "answerA": " concerned with capturing input-output relationship in patterns \n",
      "answerB": " concerned with capturing weight relationships \n",
      "answerC": " both weight & input-output relationships \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Temporal learning is concerned with capturing weight relationships. \n "
    },
    {
      "id": "1262",
      "question": "What is unsupervised learning? \n",
      "answerA": " weight adjustment based on deviation of desired output from actual output \n",
      "answerB": " weight adjustment based on desired output only \n",
      "answerC": " weight adjustment based on local information available to weights \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " Unsupervised learning is purely based on adjustment based on local information available to weights. \n \n \n    \nNote: Join free Sanfoundry classes at  Telegram  or  Youtube \n \n \n \n \n \n \n \n "
    },
    {
      "id": "1263",
      "question": "What is nature of input in activation dynamics? \n",
      "answerA": " static \n",
      "answerB": " dynamic \n",
      "answerC": " both static & dynamic \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Input is fixed throughout the dynamics. \n "
    },
    {
      "id": "1264",
      "question": "what does the term wij(0) represents in synaptic dynamic model? \n",
      "answerA": " a prioi knowledge \n",
      "answerB": " just a constant \n",
      "answerC": " no strong significance \n",
      "answerD": " future adjustments ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Refer to weight equation of synaptic dynamic model. \n Sanfoundry Global Education & Learning Series \u2013 Neural Networks. \n To practice all areas of Neural Networks for interviews,  here is complete set on 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Neural Network Questions and Answers \u2013 Learning Basics \u2013 1 \u00bb  Next - Neural Network Questions and Answers \u2013 Learning Laws \u2013 1   Related Posts: Check  Electronics & Communication Engineering Books \n Check  Neural Networks Books \n Check  Electrical & Electronics Engineering Books \n Apply for  Electronics & Communication Engineering Internship \n Practice  Electronics & Communication Engineering MCQs \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Neural Network Questions and Answers \u2013 Learning \u2013 1  \n Neural Network Questions and Answers \u2013 Learning Laws \u2013 1  \n Neural Network Questions and Answers \u2013 Learning \u2013 2  \n Neural Network Questions and Answers \u2013 Learning Laws \u2013 2  \n Neural Network Questions and Answers \u2013 Learning Basics \u2013 1  \n Neural Network Questions and Answers \u2013 Competitive Learning Neural Nework Introduction  \n Neural Network Questions and Answers \u2013 Pattern Classification \u2013 1  \n Neural Network Questions and Answers \u2013 Stability & Convergence  \n Neural Network Questions and Answers \u2013 Associative Memories  \n Neural Network Questions and Answers \u2013 Backpropagation Algorithm  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Neural Networks MCQ Questions Computer Network MCQ Questions Cryptography and Network Security MCQ Questions Network Theory MCQ Questions Aircraft Design MCQ Questions Popular Pages: Refrigeration and Air Conditioning MCQ Questions Surveying MCQ Questions Internal Combustion Engine MCQ Questions Aircraft Performance MCQ Questions Microcontroller MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Neural Networks MCQs \n \n \n \n \n Introduction \n Neural Network Introduction \n \n Basics of Artificial Neural Networks \n Neural Characteristics - 1 \n Neural Characteristics - 2 \n Neural Characteristics - 3 \n Neural Networks History \n Neural Terminology \n Neural Networks Models - 1 \n Neural Networks Models - 2 \n Neural Networks Topology \n Neural Network Learning - 1 \n Neural Network Learning - 2 \n \n Activation & Synaptic Dynamics \n Neural Network Dynamics \n Activation Models \n Learning Basics - 1 \n Learning Basics - 2 \n Learning Laws - 1 \n Learning Laws - 2 \n Stability & Convergence \n Recall \n \n Feedforward Neural Networks \n Pattern Association - 1 \n Pattern Association - 2 \n Weight Determination \n Pattern Classification - 1 \n Pattern Classification - 2 \n Pattern Mapping \n Pattern Recognition \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Pattern Storage Analysis \n \n Feedback Neural Networks \n Feedback Neural Network \n FF Network Analysis \n Pattern Storage Networks-1 \n Pattern Storage Networks-2 \n Hopfield Model - 1 \n Hopfield Model - 2 \n Stochastic Networks \n Boltzman Machine - 1 \n Boltzman Machine - 2 \n \n Competitive Learning Neural Networks \n Learning Neural Network \n Feedback Layer \n Feature Mapping Network \n \n Complex Pattern Architectures & ANN Applications \n Associative Memories \n Multi Layer Neural Network \n ART \n Neural Applications - 1 \n Neural Applications - 2 \n \n Neural Networks in Machine Learning \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n Best Reference Books \n Neural Networks Books \n \n \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Neural Networks MCQ Questions Computer Network MCQ Questions Cryptography and Network Security MCQ Questions Network Theory MCQ Questions Aircraft Design MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Refrigeration and Air Conditioning MCQ Questions Surveying MCQ Questions Internal Combustion Engine MCQ Questions Aircraft Performance MCQ Questions Microcontroller MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Neural Networks MCQs \n \n Introduction \n Neural Network Introduction \n \n Basics of Artificial Neural Networks \n Neural Characteristics - 1 \n Neural Characteristics - 2 \n Neural Characteristics - 3 \n Neural Networks History \n Neural Terminology \n Neural Networks Models - 1 \n Neural Networks Models - 2 \n Neural Networks Topology \n Neural Network Learning - 1 \n Neural Network Learning - 2 \n \n Activation & Synaptic Dynamics \n Neural Network Dynamics \n Activation Models \n Learning Basics - 1 \n Learning Basics - 2 \n Learning Laws - 1 \n Learning Laws - 2 \n Stability & Convergence \n Recall \n \n Feedforward Neural Networks \n Pattern Association - 1 \n Pattern Association - 2 \n Weight Determination \n Pattern Classification - 1 \n Pattern Classification - 2 \n Pattern Mapping \n Pattern Recognition \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Pattern Storage Analysis \n \n Feedback Neural Networks \n Feedback Neural Network \n FF Network Analysis \n Pattern Storage Networks-1 \n Pattern Storage Networks-2 \n Hopfield Model - 1 \n Hopfield Model - 2 \n Stochastic Networks \n Boltzman Machine - 1 \n Boltzman Machine - 2 \n \n Competitive Learning Neural Networks \n Learning Neural Network \n Feedback Layer \n Feature Mapping Network \n \n Complex Pattern Architectures & ANN Applications \n Associative Memories \n Multi Layer Neural Network \n ART \n Neural Applications - 1 \n Neural Applications - 2 \n \n Neural Networks in Machine Learning \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n Best Reference Books \n Neural Networks Books \n \n \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.396 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-01-31 10:55:07  \n  Compression = gzip "
    },
    {
      "id": "1265",
      "question": "Activation models are? \n",
      "answerA": " dynamic \n",
      "answerB": " static \n",
      "answerC": " deterministic \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " Input/output patterns & the activation values may be considered as sample functions of random process. \n \n \n \n \n \n "
    },
    {
      "id": "1266",
      "question": "If xb(t) represents differentiation of state x(t), then a stochastic model can be represented by? \n",
      "answerA": " xb(t)=deterministic model \n",
      "answerB": " xb(t)=deterministic model + noise component \n",
      "answerC": " xb(t)=deterministic model*noise component \n",
      "answerD": " none of the mentioned\u2019 ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Noise is assumed to be additive in nature in stochastic models. \n "
    },
    {
      "id": "1267",
      "question": "What is equilibrium in neural systems? \n",
      "answerA": " deviation in present state, when small perturbations occur \n",
      "answerB": " settlement of network, when small perturbations occur \n",
      "answerC": " change in state, when small perturbations occur \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Follows from basic definition of equilibrium. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n 4.What is the condition in Stochastic models, if xb(t) represents differentiation of state x(t)? \na) xb(t)=0 \nb) xb(t)=1 \nc) xb(t)=n(t), where n is noise component \nd) xb(t)=n(t)+1 \n View Answer "
    },
    {
      "id": "1268",
      "question": "What is asynchronous update in a network? \n",
      "answerA": " update to all units is done at the same time \n",
      "answerB": " change in state of any one unit drive the whole network \n",
      "answerC": " change in state of any number of units drive the whole network \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " In asynchronous update, change in state of any one unit drive the whole network. \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n "
    },
    {
      "id": "1269",
      "question": "Learning is a? \n",
      "answerA": " slow process \n",
      "answerB": " fast process \n",
      "answerC": " can be slow or fast in general \n",
      "answerD": " can\u2019t say ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Learning is a slow process. \n "
    },
    {
      "id": "1270",
      "question": "What are the requirements of learning laws? \n",
      "answerA": " convergence of weights \n",
      "answerB": " learning time should be as small as possible \n",
      "answerC": " learning should use only local weights \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " These all are the some of basic requirements of learning laws. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1271",
      "question": "Memory decay affects what kind of memory? \n",
      "answerA": " short tem memory in general \n",
      "answerB": " older memory in general \n",
      "answerC": " can be short term or older \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Memory decay affects short term memory rather than older memories. \n "
    },
    {
      "id": "1272",
      "question": "What are the requirements of learning laws? \n",
      "answerA": " learning should be able to capture more & more patterns \n",
      "answerB": " learning should be able to grasp complex nonliear mappings \n",
      "answerC": " convergence of weights \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " These all are the some of basic requirements of learning laws. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1273",
      "question": "How is pattern information distributed? \n",
      "answerA": " it is distributed all across the weights \n",
      "answerB": " it is distributed in localised weights \n",
      "answerC": " it is distributed  in certain proctive weights only \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " pattern information is highly distributed all across the weights. \n Sanfoundry Global Education & Learning Series \u2013 Neural Networks. \n To practice all areas of Neural Networks for aptitude tests,  here is complete set on 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Neural Network Questions and Answers \u2013 Activation Models \u00bb  Next - Neural Network Questions and Answers \u2013 Learning Basics \u2013 2   Related Posts: Apply for  Electrical & Electronics Engineering Internship \n Practice  Electrical & Electronics Engineering MCQs \n Apply for  Neural Networks Internship \n Check  Electronics & Communication Engineering Books \n Check  Electrical & Electronics Engineering Books \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Neural Network Questions and Answers \u2013 Learning Basics \u2013 2  \n Neural Network Questions and Answers \u2013 Activation Models  \n Neural Network Questions and Answers \u2013 Learning Laws \u2013 2  \n Neural Network Questions and Answers \u2013 Learning \u2013 1  \n Neural Network Questions and Answers \u2013 Stochastic Networks  \n Neural Network Questions and Answers \u2013 Competitive Learning Neural Nework Introduction  \n Neural Network Questions and Answers \u2013 Multi Layer Feedforward Neural Network  \n Neural Network Questions and Answers \u2013 Analysis of Linear Autoassociative FF Network  \n Neural Network Questions and Answers \u2013 Learning Laws \u2013 1  \n Neural Network Questions and Answers \u2013 Hopfield Model-1  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Neural Networks MCQ Questions Automata Theory MCQ Questions Computer Network MCQ Questions Network Theory MCQ Questions Event Handling in Java with Examples Popular Pages: Cryptography and Network Security MCQ Questions Basic Chemical Engineering MCQ Questions Chemical Process Calculation MCQ Questions Control System MCQ Questions Software Architecture and Design MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Neural Networks MCQs \n \n \n \n \n Introduction \n Neural Network Introduction \n \n Basics of Artificial Neural Networks \n Neural Characteristics - 1 \n Neural Characteristics - 2 \n Neural Characteristics - 3 \n Neural Networks History \n Neural Terminology \n Neural Networks Models - 1 \n Neural Networks Models - 2 \n Neural Networks Topology \n Neural Network Learning - 1 \n Neural Network Learning - 2 \n \n Activation & Synaptic Dynamics \n Neural Network Dynamics \n Activation Models \n Learning Basics - 1 \n Learning Basics - 2 \n Learning Laws - 1 \n Learning Laws - 2 \n Stability & Convergence \n Recall \n \n Feedforward Neural Networks \n Pattern Association - 1 \n Pattern Association - 2 \n Weight Determination \n Pattern Classification - 1 \n Pattern Classification - 2 \n Pattern Mapping \n Pattern Recognition \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Pattern Storage Analysis \n \n Feedback Neural Networks \n Feedback Neural Network \n FF Network Analysis \n Pattern Storage Networks-1 \n Pattern Storage Networks-2 \n Hopfield Model - 1 \n Hopfield Model - 2 \n Stochastic Networks \n Boltzman Machine - 1 \n Boltzman Machine - 2 \n \n Competitive Learning Neural Networks \n Learning Neural Network \n Feedback Layer \n Feature Mapping Network \n \n Complex Pattern Architectures & ANN Applications \n Associative Memories \n Multi Layer Neural Network \n ART \n Neural Applications - 1 \n Neural Applications - 2 \n \n Neural Networks in Machine Learning \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n Best Reference Books \n Neural Networks Books \n \n \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Neural Networks MCQ Questions Automata Theory MCQ Questions Computer Network MCQ Questions Network Theory MCQ Questions Event Handling in Java with Examples \n   \n \n \n \n \n \n \n   Popular Pages Cryptography and Network Security MCQ Questions Basic Chemical Engineering MCQ Questions Chemical Process Calculation MCQ Questions Control System MCQ Questions Software Architecture and Design MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Neural Networks MCQs \n \n Introduction \n Neural Network Introduction \n \n Basics of Artificial Neural Networks \n Neural Characteristics - 1 \n Neural Characteristics - 2 \n Neural Characteristics - 3 \n Neural Networks History \n Neural Terminology \n Neural Networks Models - 1 \n Neural Networks Models - 2 \n Neural Networks Topology \n Neural Network Learning - 1 \n Neural Network Learning - 2 \n \n Activation & Synaptic Dynamics \n Neural Network Dynamics \n Activation Models \n Learning Basics - 1 \n Learning Basics - 2 \n Learning Laws - 1 \n Learning Laws - 2 \n Stability & Convergence \n Recall \n \n Feedforward Neural Networks \n Pattern Association - 1 \n Pattern Association - 2 \n Weight Determination \n Pattern Classification - 1 \n Pattern Classification - 2 \n Pattern Mapping \n Pattern Recognition \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Pattern Storage Analysis \n \n Feedback Neural Networks \n Feedback Neural Network \n FF Network Analysis \n Pattern Storage Networks-1 \n Pattern Storage Networks-2 \n Hopfield Model - 1 \n Hopfield Model - 2 \n Stochastic Networks \n Boltzman Machine - 1 \n Boltzman Machine - 2 \n \n Competitive Learning Neural Networks \n Learning Neural Network \n Feedback Layer \n Feature Mapping Network \n \n Complex Pattern Architectures & ANN Applications \n Associative Memories \n Multi Layer Neural Network \n ART \n Neural Applications - 1 \n Neural Applications - 2 \n \n Neural Networks in Machine Learning \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n Best Reference Books \n Neural Networks Books \n \n \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.581 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-01-07 18:19:43  \n  Compression = gzip "
    },
    {
      "id": "1274",
      "question": "Activation value is associated with? \n",
      "answerA": " potential at synapses \n",
      "answerB": " cell membrane potential \n",
      "answerC": " all of the mentioned \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Cell membrane potential determines the activation value in neural nets. \n \n \n \n \n \n "
    },
    {
      "id": "1275",
      "question": "What\u2019s the actual reason behind the boundedness of the output function in activation dynamics? \n",
      "answerA": " limited neural fluid \n",
      "answerB": " limited fan in capacity of inputs \n",
      "answerC": " both limited neural fluid & fan in capacity \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " It is due to the limited current carrying capacity of cell membrane. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1276",
      "question": "What is noise saturation dilemma? \n",
      "answerA": " at saturation state neuron will  stop working, while biologically it\u2019s not feasible \n",
      "answerB": " how can a neuron with limited operating range be made sensitive to nearly unlimited range of inputs \n",
      "answerC": " can be either way \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Threshold value setting has to be adjusted properly. \n "
    },
    {
      "id": "1278",
      "question": "What is structural stability? \n",
      "answerA": " when both synaptic & activation dynamics are simultaneously used & are in equilibrium \n",
      "answerB": " when only synaptic dynamics in equilibrium \n",
      "answerC": " when only synaptic dynamics in equilibrium \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " Refers to state equilibrium situation where small perturbations brings network back to equilibrium. \n "
    },
    {
      "id": "1279",
      "question": "What is global stability? \n",
      "answerA": " when both synaptic & activation dynamics are simultaneously used & are in equilibrium \n",
      "answerB": " when only synaptic & activation dynamics are used \n",
      "answerC": " when only synaptic dynamics in equilibrium \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Global stability  means neuron as a whole is stable. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1280",
      "question": "Which models belongs to main subcategory of activation models? \n",
      "answerA": " additive & subtractive activation models \n",
      "answerB": " additive & shunting activation models \n",
      "answerC": " subtractive & shunting activation models \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Additive & shunting activation models are the most basic category of activation models. \n 9.What is the assumption of perkels model, if f(x) is the output function in additive activation model? \na) f(x)=x \nb) f(x)=x 2 \nc) f(x)=x 3 \nd) none of the mentioned \n View Answer "
    },
    {
      "id": "1281",
      "question": "Who proposed the shunting activation model? \n",
      "answerA": " rosenblatt \n",
      "answerB": " hopfield \n",
      "answerC": " perkel \n",
      "answerD": " grossberg ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " Grossberg proposed the model in "
    },
    {
      "id": "1282",
      "question": "What was the goal of shunting activation model? \n",
      "answerA": " to make system dynamic \n",
      "answerB": " to keep operating range of activation value to a specified range \n",
      "answerC": " to make system static \n",
      "answerD": " can be either for dynamic or static, depending on inputs ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Stabilizing & bounding the unbounded range of activation value was the primary goal of this model. \n Sanfoundry Global Education & Learning Series \u2013 Neural Networks. \n To practice all areas of Neural Networks,  here is complete set on 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Neural Network Questions and Answers \u2013 Dynamics \u00bb  Next - Neural Network Questions and Answers \u2013 Learning Basics \u2013 1   Related Posts: Check  Neural Networks Books \n Check  Electrical & Electronics Engineering Books \n Check  Electronics & Communication Engineering Books \n Practice  Electrical & Electronics Engineering MCQs \n Apply for  Electronics & Communication Engineering Internship \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Neural Network Questions and Answers \u2013 Models \u2013 2  \n Neural Network Questions and Answers \u2013 Characteristics \u2013 2  \n Neural Network Questions and Answers \u2013 Dynamics  \n Neural Network Questions and Answers \u2013 Models \u2013 1  \n Neural Network Questions and Answers \u2013 Applications of Neural Networks \u2013 1  \n Neural Network Questions and Answers \u2013 Terminology  \n Neural Network Questions and Answers \u2013 Analysis of Linear Autoassociative FF Network  \n Neural Network Questions and Answers \u2013 Learning Basics \u2013 2  \n Neural Network Questions and Answers \u2013 Multi Layer Feedforward Neural Network  \n Neural Network Questions and Answers \u2013 Applications of Neural Networks \u2013 2  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Neural Networks MCQ Questions Tissue Engineering MCQ Questions Network Theory MCQ Questions Computer Network MCQ Questions Computational Fluid Dynamics MCQ Questions Popular Pages: Cryptography and Network Security MCQ Questions Mechatronics MCQ Questions and Answers Protein Engineering MCQ Questions Food Processing Unit Operations MCQ Questions Aeronautical Engineering MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Neural Networks MCQs \n \n \n \n \n Introduction \n Neural Network Introduction \n \n Basics of Artificial Neural Networks \n Neural Characteristics - 1 \n Neural Characteristics - 2 \n Neural Characteristics - 3 \n Neural Networks History \n Neural Terminology \n Neural Networks Models - 1 \n Neural Networks Models - 2 \n Neural Networks Topology \n Neural Network Learning - 1 \n Neural Network Learning - 2 \n \n Activation & Synaptic Dynamics \n Neural Network Dynamics \n Activation Models \n Learning Basics - 1 \n Learning Basics - 2 \n Learning Laws - 1 \n Learning Laws - 2 \n Stability & Convergence \n Recall \n \n Feedforward Neural Networks \n Pattern Association - 1 \n Pattern Association - 2 \n Weight Determination \n Pattern Classification - 1 \n Pattern Classification - 2 \n Pattern Mapping \n Pattern Recognition \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Pattern Storage Analysis \n \n Feedback Neural Networks \n Feedback Neural Network \n FF Network Analysis \n Pattern Storage Networks-1 \n Pattern Storage Networks-2 \n Hopfield Model - 1 \n Hopfield Model - 2 \n Stochastic Networks \n Boltzman Machine - 1 \n Boltzman Machine - 2 \n \n Competitive Learning Neural Networks \n Learning Neural Network \n Feedback Layer \n Feature Mapping Network \n \n Complex Pattern Architectures & ANN Applications \n Associative Memories \n Multi Layer Neural Network \n ART \n Neural Applications - 1 \n Neural Applications - 2 \n \n Neural Networks in Machine Learning \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n Best Reference Books \n Neural Networks Books \n \n \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Neural Networks MCQ Questions Tissue Engineering MCQ Questions Network Theory MCQ Questions Computer Network MCQ Questions Computational Fluid Dynamics MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Cryptography and Network Security MCQ Questions Mechatronics MCQ Questions and Answers Protein Engineering MCQ Questions Food Processing Unit Operations MCQ Questions Aeronautical Engineering MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Neural Networks MCQs \n \n Introduction \n Neural Network Introduction \n \n Basics of Artificial Neural Networks \n Neural Characteristics - 1 \n Neural Characteristics - 2 \n Neural Characteristics - 3 \n Neural Networks History \n Neural Terminology \n Neural Networks Models - 1 \n Neural Networks Models - 2 \n Neural Networks Topology \n Neural Network Learning - 1 \n Neural Network Learning - 2 \n \n Activation & Synaptic Dynamics \n Neural Network Dynamics \n Activation Models \n Learning Basics - 1 \n Learning Basics - 2 \n Learning Laws - 1 \n Learning Laws - 2 \n Stability & Convergence \n Recall \n \n Feedforward Neural Networks \n Pattern Association - 1 \n Pattern Association - 2 \n Weight Determination \n Pattern Classification - 1 \n Pattern Classification - 2 \n Pattern Mapping \n Pattern Recognition \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Pattern Storage Analysis \n \n Feedback Neural Networks \n Feedback Neural Network \n FF Network Analysis \n Pattern Storage Networks-1 \n Pattern Storage Networks-2 \n Hopfield Model - 1 \n Hopfield Model - 2 \n Stochastic Networks \n Boltzman Machine - 1 \n Boltzman Machine - 2 \n \n Competitive Learning Neural Networks \n Learning Neural Network \n Feedback Layer \n Feature Mapping Network \n \n Complex Pattern Architectures & ANN Applications \n Associative Memories \n Multi Layer Neural Network \n ART \n Neural Applications - 1 \n Neural Applications - 2 \n \n Neural Networks in Machine Learning \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n Best Reference Books \n Neural Networks Books \n \n \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.765 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-01-31 18:36:52  \n  Compression = gzip "
    },
    {
      "id": "1283",
      "question": "What are the tasks that cannot be realised or recognised by simple networks? \n",
      "answerA": " handwritten characters \n",
      "answerB": " speech sequences \n",
      "answerC": " image sequences \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " These all are complex recognition tasks. \n \n \n \n \n \n "
    },
    {
      "id": "1284",
      "question": "If the weight matrix stores the given patterns, then the network becomes? \n",
      "answerA": " autoassoiative memory \n",
      "answerB": " heteroassociative memory \n",
      "answerC": " multidirectional assocative memory \n",
      "answerD": " temporal associative memory ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " If the weight matrix stores the given patterns, then the network becomes autoassoiative memory. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1285",
      "question": "If the weight matrix stores association between a pair of patterns, then network becomes? \n",
      "answerA": " autoassoiative memory \n",
      "answerB": " heteroassociative memory \n",
      "answerC": " multidirectional assocative memory \n",
      "answerD": " temporal associative memory ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " If the weight matrix stores the given patterns, then the network becomes heteroassociative memory. \n "
    },
    {
      "id": "1286",
      "question": "If the weight matrix stores multiple associations among several patterns, then network becomes? \n",
      "answerA": " autoassoiative memory \n",
      "answerB": " heteroassociative memory \n",
      "answerC": " multidirectional assocative memory \n",
      "answerD": " temporal associative memory ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " If the weight matrix stores the given patterns, then the network becomes multidirectional assocative memory. \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n "
    },
    {
      "id": "1287",
      "question": "If the weight matrix stores association between adjacent pairs of patterns, then network becomes? \n",
      "answerA": " autoassoiative memory \n",
      "answerB": " heteroassociative memory \n",
      "answerC": " multidirectional assocative memory \n",
      "answerD": " temporal associative memory ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " If the weight matrix stores the given patterns, then the network becomes temporal associative memory. \n "
    },
    {
      "id": "1288",
      "question": "Heteroassociative memory is also known as? \n",
      "answerA": " unidirectional memory \n",
      "answerB": " bidirectional memory \n",
      "answerC": " multidirectional assocative memory \n",
      "answerD": " temporal associative memory ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Heteroassociative memory is also known as bidirectional memory. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1289",
      "question": "What are some of desirable characteristics of associative memories? \n",
      "answerA": " ability to store large number of patterns \n",
      "answerB": " fault tolerance \n",
      "answerC": " able to recall, even for input pattern is noisy \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " These all are desirable characteristics of associative memories. \n "
    },
    {
      "id": "1290",
      "question": "What is the objective of BAM? \n",
      "answerA": " to store pattern pairs \n",
      "answerB": " to recall pattern pairs \n",
      "answerC": " to store a set of pattern pairs and they can be recalled by giving either of pattern as input \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " The objective of BAM i.e Bidirectional Associative Memory, is to store a set of pattern pairs and they can be recalled by giving either of pattern as input. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1291",
      "question": "What kind of learning is involved in pattern clustering task? \n",
      "answerA": " supervised \n",
      "answerB": " unsupervised \n",
      "answerC": " learning with critic \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Since pattern classes are formed on unlabelled classes. \n \n \n \n \n \n "
    },
    {
      "id": "1292",
      "question": "In pattern clustering, does physical location of a unit relative to other unit has any significance? \n",
      "answerA": " yes \n",
      "answerB": " no \n",
      "answerC": " depends on type of clustering \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Physical location of a unit doesn\u2019t effect the output. \n "
    },
    {
      "id": "1293",
      "question": "How is feature mapping network distinct from competitive learning network? \n",
      "answerA": " geometrical arrangement \n",
      "answerB": " significance attached to neighbouring units \n",
      "answerC": " nonlinear units \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " Both the geometrical arrangement and significance attached to neighbouring units make it distinct. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1294",
      "question": "What is the objective of feature maps? \n",
      "answerA": " to capture the features in space of input patterns \n",
      "answerB": " to capture just the input patterns \n",
      "answerC": " update weights \n",
      "answerD": " to capture output patterns ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " The objective of feature maps is to capture the features in space of input patterns. \n "
    },
    {
      "id": "1295",
      "question": "How are weights updated in feature maps? \n",
      "answerA": " updated for winning unit only \n",
      "answerB": " updated for neighbours of winner only \n",
      "answerC": " updated for winning unit and its neighbours \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " Weights are updated in feature maps for  winning unit and its neighbours. \n \n \n    \nNote: Join free Sanfoundry classes at  Telegram  or  Youtube \n \n \n \n \n \n \n \n "
    },
    {
      "id": "1296",
      "question": "In feature maps, when weights are updated for  winning unit and its neighbour, which type learning it is known as? \n",
      "answerA": " karnaugt learning \n",
      "answerB": " boltzman learning \n",
      "answerC": " kohonen\u2019s learning \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " Self organization network is also known as Kohonen learning. \n "
    },
    {
      "id": "1297",
      "question": "In self organizing network, how is layer connected to output layer? \n",
      "answerA": " some are connected \n",
      "answerB": " all are one to one connected \n",
      "answerC": " each input unit is connected to each output unit \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " In self organizing network, each input unit is connected to each output unit. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1298",
      "question": "What is true regarding adaline learning algorithm \n",
      "answerA": " uses gradient descent to determine the weight vector that leads to minimal error \n",
      "answerB": " error is defined as MSE between neurons net input and its desired output \n",
      "answerC": " this technique allows incremental learning \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " Incremental learning means refining of the weights as more training samples are added, rest are basic statements that defines adaline learning. \n "
    },
    {
      "id": "1299",
      "question": "What is true for competitive learning? \n",
      "answerA": " nodes compete for inputs \n",
      "answerB": " process leads to most efficient neural representation of input space \n",
      "answerC": " typical for unsupervised learning \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " These all statements defines the competitive learning. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1300",
      "question": "Use of nonlinear units in the feedback layer of competitive network leads to concept of? \n",
      "answerA": " feature mapping \n",
      "answerB": " pattern storage \n",
      "answerC": " pattern classification \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " Use of nonlinear units in the feedback layer of competitive network leads to concept of pattern clustering. \n Sanfoundry Global Education & Learning Series \u2013 Neural Networks. \n To practice all areas of Neural Networks,  here is complete set on 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Neural Network Questions and Answers \u2013 Feedback Layer \u00bb  Next - Neural Network Questions and Answers \u2013 Associative Memories   Related Posts: Apply for  Electronics & Communication Engineering Internship \n Check  Electrical & Electronics Engineering Books \n Check  Electronics & Communication Engineering Books \n Practice  Electronics & Communication Engineering MCQs \n Practice  Electrical & Electronics Engineering MCQs \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Neural Network Questions and Answers \u2013 Analysis of Pattern Storage  \n Neural Network Questions and Answers \u2013 Analysis of Linear Autoassociative FF Network  \n Neural Network Questions and Answers \u2013 Competitive Learning Neural Nework Introduction  \n Neural Network Questions and Answers \u2013 Applications of Neural Networks \u2013 1  \n Neural Network Questions and Answers \u2013 Multi Layer Feedforward Neural Network  \n Neural Networks Question and Answers \u2013 Pattern Mapping  \n Neural Networks Questions and Answers \u2013 Introduction of Feedback Neural Network  \n Neural Network Questions and Answers \u2013 Pattern Association \u2013 2  \n Neural Network Questions and Answers \u2013 Pattern Association \u2013 1  \n Neural Network Questions and Answers \u2013 Analysis of Pattern Storage Networks \u2013 2  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Neural Networks MCQ Questions Network Theory MCQ Questions Computer Network MCQ Questions Cryptography and Network Security MCQ Questions Structural Analysis MCQ Questions Popular Pages: Design & Analysis of Algorithms MCQ Questions Pavement Analysis and Design MCQ Questions Oracle Database MCQ Questions Fluid Mechanics MCQ Questions Event Handling in Java with Examples    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Neural Networks MCQs \n \n \n \n \n Introduction \n Neural Network Introduction \n \n Basics of Artificial Neural Networks \n Neural Characteristics - 1 \n Neural Characteristics - 2 \n Neural Characteristics - 3 \n Neural Networks History \n Neural Terminology \n Neural Networks Models - 1 \n Neural Networks Models - 2 \n Neural Networks Topology \n Neural Network Learning - 1 \n Neural Network Learning - 2 \n \n Activation & Synaptic Dynamics \n Neural Network Dynamics \n Activation Models \n Learning Basics - 1 \n Learning Basics - 2 \n Learning Laws - 1 \n Learning Laws - 2 \n Stability & Convergence \n Recall \n \n Feedforward Neural Networks \n Pattern Association - 1 \n Pattern Association - 2 \n Weight Determination \n Pattern Classification - 1 \n Pattern Classification - 2 \n Pattern Mapping \n Pattern Recognition \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Pattern Storage Analysis \n \n Feedback Neural Networks \n Feedback Neural Network \n FF Network Analysis \n Pattern Storage Networks-1 \n Pattern Storage Networks-2 \n Hopfield Model - 1 \n Hopfield Model - 2 \n Stochastic Networks \n Boltzman Machine - 1 \n Boltzman Machine - 2 \n \n Competitive Learning Neural Networks \n Learning Neural Network \n Feedback Layer \n Feature Mapping Network \n \n Complex Pattern Architectures & ANN Applications \n Associative Memories \n Multi Layer Neural Network \n ART \n Neural Applications - 1 \n Neural Applications - 2 \n \n Neural Networks in Machine Learning \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n Best Reference Books \n Neural Networks Books \n \n \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Neural Networks MCQ Questions Network Theory MCQ Questions Computer Network MCQ Questions Cryptography and Network Security MCQ Questions Structural Analysis MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Design & Analysis of Algorithms MCQ Questions Pavement Analysis and Design MCQ Questions Oracle Database MCQ Questions Fluid Mechanics MCQ Questions Event Handling in Java with Examples \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Neural Networks MCQs \n \n Introduction \n Neural Network Introduction \n \n Basics of Artificial Neural Networks \n Neural Characteristics - 1 \n Neural Characteristics - 2 \n Neural Characteristics - 3 \n Neural Networks History \n Neural Terminology \n Neural Networks Models - 1 \n Neural Networks Models - 2 \n Neural Networks Topology \n Neural Network Learning - 1 \n Neural Network Learning - 2 \n \n Activation & Synaptic Dynamics \n Neural Network Dynamics \n Activation Models \n Learning Basics - 1 \n Learning Basics - 2 \n Learning Laws - 1 \n Learning Laws - 2 \n Stability & Convergence \n Recall \n \n Feedforward Neural Networks \n Pattern Association - 1 \n Pattern Association - 2 \n Weight Determination \n Pattern Classification - 1 \n Pattern Classification - 2 \n Pattern Mapping \n Pattern Recognition \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Pattern Storage Analysis \n \n Feedback Neural Networks \n Feedback Neural Network \n FF Network Analysis \n Pattern Storage Networks-1 \n Pattern Storage Networks-2 \n Hopfield Model - 1 \n Hopfield Model - 2 \n Stochastic Networks \n Boltzman Machine - 1 \n Boltzman Machine - 2 \n \n Competitive Learning Neural Networks \n Learning Neural Network \n Feedback Layer \n Feature Mapping Network \n \n Complex Pattern Architectures & ANN Applications \n Associative Memories \n Multi Layer Neural Network \n ART \n Neural Applications - 1 \n Neural Applications - 2 \n \n Neural Networks in Machine Learning \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n Best Reference Books \n Neural Networks Books \n \n \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.559 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-01-31 15:48:04  \n  Compression = gzip "
    },
    {
      "id": "1301",
      "question": "The weight change in  plain hebbian learning is? \n",
      "answerA": " 0 \n",
      "answerB": " 1 \n",
      "answerC": " 0 or 1 \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " The weight change in  plain hebbian learning can never be zero. \n "
    },
    {
      "id": "1302",
      "question": "What is the nature  of weights in plain hebbian learning? \n",
      "answerA": " convergent \n",
      "answerB": " divergent \n",
      "answerC": " may be convergent or divergent \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " In plain hebbian learning weights keep growing without bound. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1303",
      "question": "How can divergence be prevented? \n",
      "answerA": " using hopfield criteria \n",
      "answerB": " sangers rule \n",
      "answerC": " ojas rule \n",
      "answerD": " sangers or ojas rule ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " Divergence can be prevented by using sangers or ojas rule. \n "
    },
    {
      "id": "1304",
      "question": "What is ojas rule? \n",
      "answerA": " finds a unit weight vector \n",
      "answerB": " maximises the mean squared output \n",
      "answerC": " minimises the mean squared output \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " Ojas rule finds a unit weight vector and maximises the mean squared output. \n "
    },
    {
      "id": "1305",
      "question": "What is the other name of feedback layer in competitive neural networks? \n",
      "answerA": " feedback layer \n",
      "answerB": " feed layer \n",
      "answerC": " competitive layer \n",
      "answerD": " no such name exist ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " Feedback layer in competitive neural networks is also known as competitive layer. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1306",
      "question": "what kind of feedbacks are given in competitive layer? \n",
      "answerA": " self excitatory to self and others \n",
      "answerB": " inhibitory to self and others \n",
      "answerC": " self excitatory to self and inhibitory to others \n",
      "answerD": " inhibitory to self and excitatory to others ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " The second layer of competitive networks have  self excitatory to self and inhibitory to others feedbacks to make it competitive. \n "
    },
    {
      "id": "1307",
      "question": "Generally how many kinds of pattern storage network exist? \n",
      "answerA": " 2 \n",
      "answerB": " 3 \n",
      "answerC": " 4 \n",
      "answerD": "5",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Namely, temporary storage, Short term memory, Long term memory. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1308",
      "question": "How are input layer units connected to second layer in competitive learning networks? \n",
      "answerA": " feedforward manner \n",
      "answerB": " feedback manner \n",
      "answerC": " feedforward and feedback \n",
      "answerD": " feedforward or feedback ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " The output of input layer is given to second layer with adaptive feedforward weights. \n \n \n \n \n \n "
    },
    {
      "id": "1309",
      "question": "Which layer has feedback weights in competitive neural networks? \n",
      "answerA": " input layer \n",
      "answerB": " second layer \n",
      "answerC": " both input and second layer \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Second layer has weights which gives feedback to the layer itself. \n "
    },
    {
      "id": "1310",
      "question": "What is the nature of general feedback given in competitive neural networks? \n",
      "answerA": " self excitatory \n",
      "answerB": " self inhibitory \n",
      "answerC": " self excitatory or self inhibitory \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " The output of each unit in second layer is fed back to itself in self \u2013 excitatory manner. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1311",
      "question": "What consist of competitive learning neural networks? \n",
      "answerA": " feedforward paths \n",
      "answerB": " feedback paths \n",
      "answerC": " either feedforward or feedback \n",
      "answerD": " combination of feedforward and feedback ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " Competitive learning neural networks is a combination of feedforward and feedback connection layers resulting in some kind of competition. \n "
    },
    {
      "id": "1312",
      "question": "What conditions are must for competitive network to perform pattern clustering? \n",
      "answerA": " non linear output layers \n",
      "answerB": " connection to neighbours is excitatory and to  the farther units inhibitory \n",
      "answerC": " on centre off surround connections \n",
      "answerD": " none of the mentioned fulfils the whole criteria ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " If the output functions of units in feedback laye are made non-linear , with fixed weight on-centre off-surround connections, the pattern clustering can be performed. \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n "
    },
    {
      "id": "1313",
      "question": "What conditions are must for competitive network to perform feature mapping? \n",
      "answerA": " non linear output layers \n",
      "answerB": " connection to neighbours is excitatory and to  the farther units inhibitory \n",
      "answerC": " on centre off surround connections \n",
      "answerD": " none of the mentioned fulfils the whole criteria ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " If cndition in a, b, c are met then feature mapping can  be performed. \n "
    },
    {
      "id": "1314",
      "question": "If a competitive network can perform feature mapping then what is that network can be called? \n",
      "answerA": " self excitatory \n",
      "answerB": " self inhibitory \n",
      "answerC": " self organization \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " Competitive network that can perform feature mapping can be called as self organization network. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1315",
      "question": "What is an instar? \n",
      "answerA": " receives inputs from all others \n",
      "answerB": " gives output to all others \n",
      "answerC": " may receive or give input or output to others \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " An instar receives inputs from all other input units. \n "
    },
    {
      "id": "1316",
      "question": "How is weight vector adjusted in basic competitive learning? \n",
      "answerA": " such that it moves towards the input vector \n",
      "answerB": " such that it moves  away from input vector \n",
      "answerC": " such that it moves towards the output vector \n",
      "answerD": " such that it moves  away from output vector ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Weight vector is adjusted such that it moves towards the input vector. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1317",
      "question": "The update in weight vector in basic competitive learning can be represented by? \n",
      "answerA": " w(t + 1) = w(t) + del.w(t) \n",
      "answerB": " w(t + 1) = w(t) \n",
      "answerC": " w(t + 1) = w(t) \u2013 del.w(t) \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " The update in weight vector in basic competitive learning can be represented by w(t + 1) = w(t) + del.w(t). \n Sanfoundry Global Education & Learning Series \u2013 Neural Networks. \nTo practice all areas of Neural Networks,  here is complete set on 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Neural Network Questions and Answers \u2013 Boltzman Machine \u2013 2 \u00bb  Next - Neural Network Questions and Answers \u2013 Feedback Layer   Related Posts: Check  Electronics & Communication Engineering Books \n Apply for  Electrical & Electronics Engineering Internship \n Apply for  Electronics & Communication Engineering Internship \n Check  Electrical & Electronics Engineering Books \n Practice  Electronics & Communication Engineering MCQs \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Neural Network Questions and Answers \u2013 Feedback Layer  \n Neural Networks Questions and Answers \u2013 Introduction of Feedback Neural Network  \n Neural Network Questions and Answers \u2013 Topology  \n Neural Network Questions and Answers \u2013 Applications of Neural Networks \u2013 2  \n Neural Network Questions and Answers \u2013 Terminology  \n Neural Network Questions and Answers \u2013 Analysis of Feature Mapping Network  \n Neural Network Questions and Answers \u2013 Multi Layer Feedforward Neural Network  \n Neural Network Questions and Answers \u2013 Pattern Association \u2013 1  \n Neural Network Questions and Answers \u2013 Applications of Neural Networks \u2013 1  \n Neural Network Questions and Answers \u2013 Learning Basics \u2013 2  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Neural Networks MCQ Questions Computer Network MCQ Questions Cryptography and Network Security MCQ Questions R Programming MCQ Questions Network Theory MCQ Questions Popular Pages: Aerospace Engineering MCQ Questions Information Science Questions and Answers Control System MCQ Questions Instrumentation Engineering MCQ Questions Mechatronics MCQ Questions and Answers    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Neural Networks MCQs \n \n \n \n \n Introduction \n Neural Network Introduction \n \n Basics of Artificial Neural Networks \n Neural Characteristics - 1 \n Neural Characteristics - 2 \n Neural Characteristics - 3 \n Neural Networks History \n Neural Terminology \n Neural Networks Models - 1 \n Neural Networks Models - 2 \n Neural Networks Topology \n Neural Network Learning - 1 \n Neural Network Learning - 2 \n \n Activation & Synaptic Dynamics \n Neural Network Dynamics \n Activation Models \n Learning Basics - 1 \n Learning Basics - 2 \n Learning Laws - 1 \n Learning Laws - 2 \n Stability & Convergence \n Recall \n \n Feedforward Neural Networks \n Pattern Association - 1 \n Pattern Association - 2 \n Weight Determination \n Pattern Classification - 1 \n Pattern Classification - 2 \n Pattern Mapping \n Pattern Recognition \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Pattern Storage Analysis \n \n Feedback Neural Networks \n Feedback Neural Network \n FF Network Analysis \n Pattern Storage Networks-1 \n Pattern Storage Networks-2 \n Hopfield Model - 1 \n Hopfield Model - 2 \n Stochastic Networks \n Boltzman Machine - 1 \n Boltzman Machine - 2 \n \n Competitive Learning Neural Networks \n Learning Neural Network \n Feedback Layer \n Feature Mapping Network \n \n Complex Pattern Architectures & ANN Applications \n Associative Memories \n Multi Layer Neural Network \n ART \n Neural Applications - 1 \n Neural Applications - 2 \n \n Neural Networks in Machine Learning \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n Best Reference Books \n Neural Networks Books \n \n \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Neural Networks MCQ Questions Computer Network MCQ Questions Cryptography and Network Security MCQ Questions R Programming MCQ Questions Network Theory MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Aerospace Engineering MCQ Questions Information Science Questions and Answers Control System MCQ Questions Instrumentation Engineering MCQ Questions Mechatronics MCQ Questions and Answers \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Neural Networks MCQs \n \n Introduction \n Neural Network Introduction \n \n Basics of Artificial Neural Networks \n Neural Characteristics - 1 \n Neural Characteristics - 2 \n Neural Characteristics - 3 \n Neural Networks History \n Neural Terminology \n Neural Networks Models - 1 \n Neural Networks Models - 2 \n Neural Networks Topology \n Neural Network Learning - 1 \n Neural Network Learning - 2 \n \n Activation & Synaptic Dynamics \n Neural Network Dynamics \n Activation Models \n Learning Basics - 1 \n Learning Basics - 2 \n Learning Laws - 1 \n Learning Laws - 2 \n Stability & Convergence \n Recall \n \n Feedforward Neural Networks \n Pattern Association - 1 \n Pattern Association - 2 \n Weight Determination \n Pattern Classification - 1 \n Pattern Classification - 2 \n Pattern Mapping \n Pattern Recognition \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Pattern Storage Analysis \n \n Feedback Neural Networks \n Feedback Neural Network \n FF Network Analysis \n Pattern Storage Networks-1 \n Pattern Storage Networks-2 \n Hopfield Model - 1 \n Hopfield Model - 2 \n Stochastic Networks \n Boltzman Machine - 1 \n Boltzman Machine - 2 \n \n Competitive Learning Neural Networks \n Learning Neural Network \n Feedback Layer \n Feature Mapping Network \n \n Complex Pattern Architectures & ANN Applications \n Associative Memories \n Multi Layer Neural Network \n ART \n Neural Applications - 1 \n Neural Applications - 2 \n \n Neural Networks in Machine Learning \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n Best Reference Books \n Neural Networks Books \n \n \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.543 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-01-31 11:02:04  \n  Compression = gzip "
    },
    {
      "id": "1318",
      "question": "For what purpose Feedback neural networks are primarily used? \n",
      "answerA": " classification \n",
      "answerB": " feature mapping \n",
      "answerC": " pattern mapping \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " Feedback neural networks are primarily used for pattern storage. \n \n \n \n \n \n "
    },
    {
      "id": "1319",
      "question": "Presence of false minima will have what effect on probability of error in recall? \n",
      "answerA": " directly \n",
      "answerB": " inversely \n",
      "answerC": " no effect \n",
      "answerD": " directly or inversely ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Presence of false minima will increase the probability of error in recall. \n "
    },
    {
      "id": "1320",
      "question": "How is effect false minima reduced \n",
      "answerA": " deterministic update of weights \n",
      "answerB": " stochastic update of weights \n",
      "answerC": " deterministic or stochastic update of weights \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Presence of false minima can be reduced by stochastic update. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1321",
      "question": "For practical implementation what type of approximation is used on boltzman law? \n",
      "answerA": " max field approximation \n",
      "answerB": " min field approximation \n",
      "answerC": " hopfield approximation \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " For practical implementation mean field approximation is used. \n \n \n    \nNote: Join free Sanfoundry classes at  Telegram  or  Youtube \n \n \n \n \n \n \n \n "
    },
    {
      "id": "1322",
      "question": "What happens when we use mean field approximation with boltzman learning? \n",
      "answerA": " it slows down \n",
      "answerB": " it get speeded up \n",
      "answerC": " nothing happens \n",
      "answerD": " may speedup or speed down ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Boltzman learning get speeded up using mean field approximation. \n "
    },
    {
      "id": "1323",
      "question": "Approximately how much times the boltzman learning get speeded up using mean field approximation? \n",
      "answerA": " 5-10 \n",
      "answerB": " 10-30 \n",
      "answerC": " 30-50 \n",
      "answerD": " 50-70 ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Boltzman learning get speeded up 10-30  using mean field approximation. \n \n advertisement \n \n \n \n \n 8.False minima can be reduced by deterministic updates? \na) yes \nb) no \n View Answer "
    },
    {
      "id": "1324",
      "question": "In boltzman learning which algorithm can be used to arrive at equilibrium? \n",
      "answerA": " hopfield \n",
      "answerB": " mean field \n",
      "answerC": " hebb \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " Metropolis algorithm can be used to arrive at equilibrium. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1325",
      "question": "Boltzman learning is a? \n",
      "answerA": " fast process \n",
      "answerB": " steady process \n",
      "answerC": " slow process \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " Boltzman learning is a slow process. \n Sanfoundry Global Education & Learning Series \u2013 Neural Networks. \n To practice all areas of Neural Networks,  here is complete set on 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Neural Network Questions and Answers \u2013 Boltzman Machine \u2013 1 \u00bb  Next - Neural Network Questions and Answers \u2013 Competitive Learning Neural Nework Introduction   Related Posts: Apply for  Electronics & Communication Engineering Internship \n Check  Electrical & Electronics Engineering Books \n Check  Electronics & Communication Engineering Books \n Apply for  Electrical & Electronics Engineering Internship \n Practice  Electrical & Electronics Engineering MCQs \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Neural Network Questions and Answers \u2013 Boltzman Machine \u2013 1  \n Neural Network Questions and Answers \u2013 Hopfield Model-2  \n Neural Networks Questions and Answers \u2013 Introduction of Feedback Neural Network  \n Neural Network Questions and Answers \u2013 Analysis of Pattern Storage Networks \u2013 2  \n Neural Network Questions and Answers \u2013 Analysis of Pattern Storage Networks \u2013 1  \n Neural Network Questions and Answers \u2013 Analysis of Pattern Storage  \n Neural Network Questions and Answers \u2013 Stochastic Networks  \n Neural Network Questions and Answers \u2013 Analysis of Linear Autoassociative FF Network  \n Neural Network Questions and Answers \u2013 Applications of Neural Networks \u2013 2  \n Neural Network Questions and Answers \u2013 Learning Basics \u2013 1  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Neural Networks MCQ Questions Computer Network MCQ Questions Network Theory MCQ Questions Electrical Machine Design MCQ Questions Cryptography and Network Security MCQ Questions Popular Pages: Machine Design MCQ Questions Probability and Statistics MCQ Questions Aerospace Engineering MCQ Questions R Programming MCQ Questions Theory of Machine MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Neural Networks MCQs \n \n \n \n \n Introduction \n Neural Network Introduction \n \n Basics of Artificial Neural Networks \n Neural Characteristics - 1 \n Neural Characteristics - 2 \n Neural Characteristics - 3 \n Neural Networks History \n Neural Terminology \n Neural Networks Models - 1 \n Neural Networks Models - 2 \n Neural Networks Topology \n Neural Network Learning - 1 \n Neural Network Learning - 2 \n \n Activation & Synaptic Dynamics \n Neural Network Dynamics \n Activation Models \n Learning Basics - 1 \n Learning Basics - 2 \n Learning Laws - 1 \n Learning Laws - 2 \n Stability & Convergence \n Recall \n \n Feedforward Neural Networks \n Pattern Association - 1 \n Pattern Association - 2 \n Weight Determination \n Pattern Classification - 1 \n Pattern Classification - 2 \n Pattern Mapping \n Pattern Recognition \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Pattern Storage Analysis \n \n Feedback Neural Networks \n Feedback Neural Network \n FF Network Analysis \n Pattern Storage Networks-1 \n Pattern Storage Networks-2 \n Hopfield Model - 1 \n Hopfield Model - 2 \n Stochastic Networks \n Boltzman Machine - 1 \n Boltzman Machine - 2 \n \n Competitive Learning Neural Networks \n Learning Neural Network \n Feedback Layer \n Feature Mapping Network \n \n Complex Pattern Architectures & ANN Applications \n Associative Memories \n Multi Layer Neural Network \n ART \n Neural Applications - 1 \n Neural Applications - 2 \n \n Neural Networks in Machine Learning \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n Best Reference Books \n Neural Networks Books \n \n \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Neural Networks MCQ Questions Computer Network MCQ Questions Network Theory MCQ Questions Electrical Machine Design MCQ Questions Cryptography and Network Security MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Machine Design MCQ Questions Probability and Statistics MCQ Questions Aerospace Engineering MCQ Questions R Programming MCQ Questions Theory of Machine MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Neural Networks MCQs \n \n Introduction \n Neural Network Introduction \n \n Basics of Artificial Neural Networks \n Neural Characteristics - 1 \n Neural Characteristics - 2 \n Neural Characteristics - 3 \n Neural Networks History \n Neural Terminology \n Neural Networks Models - 1 \n Neural Networks Models - 2 \n Neural Networks Topology \n Neural Network Learning - 1 \n Neural Network Learning - 2 \n \n Activation & Synaptic Dynamics \n Neural Network Dynamics \n Activation Models \n Learning Basics - 1 \n Learning Basics - 2 \n Learning Laws - 1 \n Learning Laws - 2 \n Stability & Convergence \n Recall \n \n Feedforward Neural Networks \n Pattern Association - 1 \n Pattern Association - 2 \n Weight Determination \n Pattern Classification - 1 \n Pattern Classification - 2 \n Pattern Mapping \n Pattern Recognition \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Pattern Storage Analysis \n \n Feedback Neural Networks \n Feedback Neural Network \n FF Network Analysis \n Pattern Storage Networks-1 \n Pattern Storage Networks-2 \n Hopfield Model - 1 \n Hopfield Model - 2 \n Stochastic Networks \n Boltzman Machine - 1 \n Boltzman Machine - 2 \n \n Competitive Learning Neural Networks \n Learning Neural Network \n Feedback Layer \n Feature Mapping Network \n \n Complex Pattern Architectures & ANN Applications \n Associative Memories \n Multi Layer Neural Network \n ART \n Neural Applications - 1 \n Neural Applications - 2 \n \n Neural Networks in Machine Learning \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n Best Reference Books \n Neural Networks Books \n \n \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.480 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-01-31 17:37:44  \n  Compression = gzip "
    },
    {
      "id": "1326",
      "question": "Probability of error in recall of stored patterns can be reduced if? \n",
      "answerA": " patterns are stored appropriately \n",
      "answerB": " inputs are captured appropriately \n",
      "answerC": " weights are chosen appropriately \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " Probability of error in recall of stored patterns can be reduced if weights are chosen appropriately. \n \n \n \n \n \n "
    },
    {
      "id": "1327",
      "question": "What is pattern environment? \n",
      "answerA": " probability of desired patterns \n",
      "answerB": " probability of given patterns \n",
      "answerC": " behaviour of system \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " Pattern environment is probability distribution of given patterns. \n "
    },
    {
      "id": "1328",
      "question": "For what purpose is pattern environment useful? \n",
      "answerA": " determining structure \n",
      "answerB": " determining desired outputs \n",
      "answerC": " determining future inputs \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " Pattern environment is useful for determining weights. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1329",
      "question": "What should be the aim of training procedure in boltzman machine of feedback networks? \n",
      "answerA": " to capture inputs \n",
      "answerB": " to feedback the captured outputs \n",
      "answerC": " to capture the behaviour of system \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " The training procedure should try to capture the pattern environment. \n "
    },
    {
      "id": "1330",
      "question": "What consist of boltzman machine? \n",
      "answerA": " fully connected network  with both hidden and visible units \n",
      "answerB": " asynchronous operation \n",
      "answerC": " stochastic update \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " Boltzman machine consist of fully connected network  with both hidden and visible units operating asynchronously with stochastic update. \n \n \n    \nSubscribe Now:  Neural Network Newsletter  |  Important Subjects Newsletters \n \n \n \n \n \n \n \n "
    },
    {
      "id": "1331",
      "question": "By using which method, boltzman machine reduces effect of additional stable states? \n",
      "answerA": " no such method exist \n",
      "answerB": " simulated annealing \n",
      "answerC": " hopfield reduction \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " boltzman machine uses simulated annealing to reduce the effect of additional stable states. \n "
    },
    {
      "id": "1332",
      "question": "For which other task can boltzman machine be used? \n",
      "answerA": " pattern mapping \n",
      "answerB": " feature mapping \n",
      "answerC": " classification \n",
      "answerD": " pattern association ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " Boltzman machine can be used for pattern association. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1333",
      "question": "How are energy minima related to probability of occurrence of corresponding patterns in the environment? \n",
      "answerA": " directly \n",
      "answerB": " inversely \n",
      "answerC": " directly or inversely \n",
      "answerD": " no relation ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Energy minima is directly related to probability of occurrence of corresponding patterns in the environment. \n "
    },
    {
      "id": "1334",
      "question": "What may be the reasons for non zero probability of error in recalling? \n",
      "answerA": " spurious stable states \n",
      "answerB": " approximation in pattern environment representation \n",
      "answerC": " extra stable states \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " These all are the primary reasons for existence of non zero probability of error. \n Sanfoundry Global Education & Learning Series \u2013 Neural Networks. \n To practice all areas of Neural Networks,  here is complete set on 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Neural Network Questions and Answers \u2013 Stochastic Networks \u00bb  Next - Neural Network Questions and Answers \u2013 Boltzman Machine \u2013 2   Related Posts: Check  Electrical & Electronics Engineering Books \n Practice  Electronics & Communication Engineering MCQs \n Apply for  Electrical & Electronics Engineering Internship \n Check  Neural Networks Books \n Apply for  Electronics & Communication Engineering Internship \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Neural Network Questions and Answers \u2013 Boltzman Machine \u2013 2  \n Neural Network Questions and Answers \u2013 Analysis of Pattern Storage Networks \u2013 2  \n Neural Network Questions and Answers \u2013 Analysis of Pattern Storage Networks \u2013 1  \n Neural Network Questions and Answers \u2013 Applications of Neural Networks \u2013 2  \n Neural Network Questions and Answers \u2013 Analysis of Feature Mapping Network  \n Neural Network Questions and Answers \u2013 Applications of Neural Networks \u2013 1  \n Neural Network Questions and Answers \u2013 Multi Layer Feedforward Neural Network  \n Neural Network Questions and Answers \u2013 Analysis of Pattern Storage  \n Neural Network Questions and Answers \u2013 Hopfield Model-2  \n Neural Network Questions and Answers \u2013 Analysis of Linear Autoassociative FF Network  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Neural Networks MCQ Questions Electrical Machine Design MCQ Questions Network Theory MCQ Questions Computer Network MCQ Questions Casting, Forming and Welding MCQ Questions Popular Pages: Probability and Statistics MCQ Questions Machine Design MCQ Questions Machine Tools MCQ Questions Theory of Machine MCQ Questions Machine Drawing MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Neural Networks MCQs \n \n \n \n \n Introduction \n Neural Network Introduction \n \n Basics of Artificial Neural Networks \n Neural Characteristics - 1 \n Neural Characteristics - 2 \n Neural Characteristics - 3 \n Neural Networks History \n Neural Terminology \n Neural Networks Models - 1 \n Neural Networks Models - 2 \n Neural Networks Topology \n Neural Network Learning - 1 \n Neural Network Learning - 2 \n \n Activation & Synaptic Dynamics \n Neural Network Dynamics \n Activation Models \n Learning Basics - 1 \n Learning Basics - 2 \n Learning Laws - 1 \n Learning Laws - 2 \n Stability & Convergence \n Recall \n \n Feedforward Neural Networks \n Pattern Association - 1 \n Pattern Association - 2 \n Weight Determination \n Pattern Classification - 1 \n Pattern Classification - 2 \n Pattern Mapping \n Pattern Recognition \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Pattern Storage Analysis \n \n Feedback Neural Networks \n Feedback Neural Network \n FF Network Analysis \n Pattern Storage Networks-1 \n Pattern Storage Networks-2 \n Hopfield Model - 1 \n Hopfield Model - 2 \n Stochastic Networks \n Boltzman Machine - 1 \n Boltzman Machine - 2 \n \n Competitive Learning Neural Networks \n Learning Neural Network \n Feedback Layer \n Feature Mapping Network \n \n Complex Pattern Architectures & ANN Applications \n Associative Memories \n Multi Layer Neural Network \n ART \n Neural Applications - 1 \n Neural Applications - 2 \n \n Neural Networks in Machine Learning \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n Best Reference Books \n Neural Networks Books \n \n \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Neural Networks MCQ Questions Electrical Machine Design MCQ Questions Network Theory MCQ Questions Computer Network MCQ Questions Casting, Forming and Welding MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Probability and Statistics MCQ Questions Machine Design MCQ Questions Machine Tools MCQ Questions Theory of Machine MCQ Questions Machine Drawing MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Neural Networks MCQs \n \n Introduction \n Neural Network Introduction \n \n Basics of Artificial Neural Networks \n Neural Characteristics - 1 \n Neural Characteristics - 2 \n Neural Characteristics - 3 \n Neural Networks History \n Neural Terminology \n Neural Networks Models - 1 \n Neural Networks Models - 2 \n Neural Networks Topology \n Neural Network Learning - 1 \n Neural Network Learning - 2 \n \n Activation & Synaptic Dynamics \n Neural Network Dynamics \n Activation Models \n Learning Basics - 1 \n Learning Basics - 2 \n Learning Laws - 1 \n Learning Laws - 2 \n Stability & Convergence \n Recall \n \n Feedforward Neural Networks \n Pattern Association - 1 \n Pattern Association - 2 \n Weight Determination \n Pattern Classification - 1 \n Pattern Classification - 2 \n Pattern Mapping \n Pattern Recognition \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Pattern Storage Analysis \n \n Feedback Neural Networks \n Feedback Neural Network \n FF Network Analysis \n Pattern Storage Networks-1 \n Pattern Storage Networks-2 \n Hopfield Model - 1 \n Hopfield Model - 2 \n Stochastic Networks \n Boltzman Machine - 1 \n Boltzman Machine - 2 \n \n Competitive Learning Neural Networks \n Learning Neural Network \n Feedback Layer \n Feature Mapping Network \n \n Complex Pattern Architectures & ANN Applications \n Associative Memories \n Multi Layer Neural Network \n ART \n Neural Applications - 1 \n Neural Applications - 2 \n \n Neural Networks in Machine Learning \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n Best Reference Books \n Neural Networks Books \n \n \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.838 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-01-31 13:10:36  \n  Compression = gzip "
    },
    {
      "id": "1335",
      "question": "p(s=1|x) = 1/(1+exp(-x/T))) ,where \u2018s\u2019 is the output given the activation \u2018x\u2019 is a? \n",
      "answerA": " hopfield network \n",
      "answerB": " sigma network \n",
      "answerC": " stochastic network \n",
      "answerD": " none  of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " This is the basic equation of a stochastic network. \n \n \n \n \n \n "
    },
    {
      "id": "1336",
      "question": "In case of deterministic update, what kind of equilibrium is reached? \n",
      "answerA": " static \n",
      "answerB": " dynamic \n",
      "answerC": " neutral \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " In case of deterministic update, static equilibrium is reached. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1337",
      "question": "In case of stochastic update, what kind of equilibrium is reached? \n",
      "answerA": " static \n",
      "answerB": " dynamic \n",
      "answerC": " neutral \n",
      "answerD": " equilibrium not possible ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " In case of stochastic update, dynamic equilibrium is reached. \n \n \n    \nSubscribe Now:  Neural Network Newsletter  |  Important Subjects Newsletters \n \n \n \n \n \n \n \n "
    },
    {
      "id": "1338",
      "question": "What can be the possible reason for thermal equilibrium in stochastic networks? \n",
      "answerA": " probability distribution of states changes and compensates \n",
      "answerB": " probability distribution change with only update \n",
      "answerC": " probability distribution does not change with time \n",
      "answerD": " none of the mentionedstochastic network exhibits stable states ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " Probability distribution does not change with time is the only reason for thermal equilibrium in stochastic networks. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1339",
      "question": "When activation value is determined by using the average of fluctuations of outputs from other units, it is known as? \n",
      "answerA": " maximum field approximation \n",
      "answerB": " median field approximation \n",
      "answerC": " minimum field approximation \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " It is known as mean field approximation. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1340",
      "question": "Where does a stochastic network exhibits stable states ? \n",
      "answerA": " at any temperature \n",
      "answerB": " above critical temperature \n",
      "answerC": " at critical temperature \n",
      "answerD": " below critical temperature ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " Stochastic network exhibits stable states below critical temperature. \n Sanfoundry Global Education & Learning Series \u2013 Neural Networks. \n To practice all areas of Neural Networks,  here is complete set on 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Neural Network Questions and Answers \u2013 Hopfield Model-2 \u00bb  Next - Neural Network Questions and Answers \u2013 Boltzman Machine \u2013 1   Related Posts: Check  Electronics & Communication Engineering Books \n Practice  Electrical & Electronics Engineering MCQs \n Apply for  Electrical & Electronics Engineering Internship \n Practice  Electronics & Communication Engineering MCQs \n Check  Electrical & Electronics Engineering Books \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Neural Networks Questions and Answers \u2013 Introduction of Feedback Neural Network  \n Neural Network Questions and Answers \u2013 Learning Basics \u2013 1  \n Neural Network Questions and Answers \u2013 Boltzman Machine \u2013 2  \n Neural Network Questions and Answers \u2013 Hopfield Model-2  \n Neural Network Questions and Answers \u2013 Applications of Neural Networks \u2013 2  \n Neural Network Questions and Answers \u2013 Applications of Neural Networks \u2013 1  \n Neural Network Questions and Answers \u2013 Multi Layer Feedforward Neural Network  \n Neural Network Questions and Answers \u2013 Analysis of Pattern Storage Networks \u2013 2  \n Neural Network Questions and Answers \u2013 Analysis of Pattern Storage Networks \u2013 1  \n Neural Network Questions and Answers \u2013 Competitive Learning Neural Nework Introduction  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Neural Networks MCQ Questions Network Theory MCQ Questions Computer Network MCQ Questions Cryptography and Network Security MCQ Questions Automata Theory MCQ Questions Popular Pages: Artificial Intelligence MCQ Questions Control System MCQ Questions C++ Algorithm Library C Programs on File Handling Compiler Design MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Neural Networks MCQs \n \n \n \n \n Introduction \n Neural Network Introduction \n \n Basics of Artificial Neural Networks \n Neural Characteristics - 1 \n Neural Characteristics - 2 \n Neural Characteristics - 3 \n Neural Networks History \n Neural Terminology \n Neural Networks Models - 1 \n Neural Networks Models - 2 \n Neural Networks Topology \n Neural Network Learning - 1 \n Neural Network Learning - 2 \n \n Activation & Synaptic Dynamics \n Neural Network Dynamics \n Activation Models \n Learning Basics - 1 \n Learning Basics - 2 \n Learning Laws - 1 \n Learning Laws - 2 \n Stability & Convergence \n Recall \n \n Feedforward Neural Networks \n Pattern Association - 1 \n Pattern Association - 2 \n Weight Determination \n Pattern Classification - 1 \n Pattern Classification - 2 \n Pattern Mapping \n Pattern Recognition \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Pattern Storage Analysis \n \n Feedback Neural Networks \n Feedback Neural Network \n FF Network Analysis \n Pattern Storage Networks-1 \n Pattern Storage Networks-2 \n Hopfield Model - 1 \n Hopfield Model - 2 \n Stochastic Networks \n Boltzman Machine - 1 \n Boltzman Machine - 2 \n \n Competitive Learning Neural Networks \n Learning Neural Network \n Feedback Layer \n Feature Mapping Network \n \n Complex Pattern Architectures & ANN Applications \n Associative Memories \n Multi Layer Neural Network \n ART \n Neural Applications - 1 \n Neural Applications - 2 \n \n Neural Networks in Machine Learning \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n Best Reference Books \n Neural Networks Books \n \n \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Neural Networks MCQ Questions Network Theory MCQ Questions Computer Network MCQ Questions Cryptography and Network Security MCQ Questions Automata Theory MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Artificial Intelligence MCQ Questions Control System MCQ Questions C++ Algorithm Library C Programs on File Handling Compiler Design MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Neural Networks MCQs \n \n Introduction \n Neural Network Introduction \n \n Basics of Artificial Neural Networks \n Neural Characteristics - 1 \n Neural Characteristics - 2 \n Neural Characteristics - 3 \n Neural Networks History \n Neural Terminology \n Neural Networks Models - 1 \n Neural Networks Models - 2 \n Neural Networks Topology \n Neural Network Learning - 1 \n Neural Network Learning - 2 \n \n Activation & Synaptic Dynamics \n Neural Network Dynamics \n Activation Models \n Learning Basics - 1 \n Learning Basics - 2 \n Learning Laws - 1 \n Learning Laws - 2 \n Stability & Convergence \n Recall \n \n Feedforward Neural Networks \n Pattern Association - 1 \n Pattern Association - 2 \n Weight Determination \n Pattern Classification - 1 \n Pattern Classification - 2 \n Pattern Mapping \n Pattern Recognition \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Pattern Storage Analysis \n \n Feedback Neural Networks \n Feedback Neural Network \n FF Network Analysis \n Pattern Storage Networks-1 \n Pattern Storage Networks-2 \n Hopfield Model - 1 \n Hopfield Model - 2 \n Stochastic Networks \n Boltzman Machine - 1 \n Boltzman Machine - 2 \n \n Competitive Learning Neural Networks \n Learning Neural Network \n Feedback Layer \n Feature Mapping Network \n \n Complex Pattern Architectures & ANN Applications \n Associative Memories \n Multi Layer Neural Network \n ART \n Neural Applications - 1 \n Neural Applications - 2 \n \n Neural Networks in Machine Learning \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n Best Reference Books \n Neural Networks Books \n \n \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.613 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-01-31 12:04:58  \n  Compression = gzip "
    },
    {
      "id": "1341",
      "question": "In hopfield network with symmetric weights, energy at each state may? \n",
      "answerA": " increase \n",
      "answerB": " decrease \n",
      "answerC": " decrease or remain same \n",
      "answerD": " decrease or increase ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " Energy of the network cant increase as it may then lead to instability. \n \n \n \n \n \n "
    },
    {
      "id": "1342",
      "question": "In hopfield model with symmetric weights, network can move to? \n",
      "answerA": " lower \n",
      "answerB": " higher \n",
      "answerC": " lower or higher \n",
      "answerD": " lower or same ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " In hopfield model with symmetric weights, network can move to lower or same state. \n "
    },
    {
      "id": "1343",
      "question": "How can error in recall due to false minima be reduced? \n",
      "answerA": " deterministic update for states \n",
      "answerB": " stochastic update for states \n",
      "answerC": " not possible \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Error in recall due to false minima can be reduced by stochastic update for states. \n "
    },
    {
      "id": "1344",
      "question": "Pattern storage problem which cannot be represented by a feedback network of given size can be called as? \n",
      "answerA": " easy problems \n",
      "answerB": " hard problems \n",
      "answerC": " no such problem exist \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Pattern storage problem which cannot be represented by a feedback network of given size are known as hard problems. \n "
    },
    {
      "id": "1345",
      "question": "What is the other way to reduce error in recall due to false minima apart from stochastic update? \n",
      "answerA": " no other method exist \n",
      "answerB": " by storing desired patterns at lowest energy minima \n",
      "answerC": " by storing desired patterns at energy maxima \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Error in recall due to false minima can be reduced by stochastic update or by storing desired patterns at lowest energy minima. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1346",
      "question": "How can error in recall due to false minima be further reduced? \n",
      "answerA": " using suitable activation dynamics \n",
      "answerB": " cannot be further reduced \n",
      "answerC": " by storing desired patterns at energy maxima \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Error in recall due to false minima can  further be reduced by using suitable activation dynamics. \n "
    },
    {
      "id": "1347",
      "question": "As temperature increase, what happens to stochastic update? \n",
      "answerA": " increase in update \n",
      "answerB": " decrease in update \n",
      "answerC": " no change \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " Temperature doesn\u2019t effect stochastic update. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1348",
      "question": "Why does change in temperature doesn\u2019t effect stochastic update? \n",
      "answerA": " shape landscape depends on the network and its weights which varies accordingly and compensates the effect \n",
      "answerB": " shape landscape depends on the network and its weights which is fixed \n",
      "answerC": " shape landscape depends on the network, its weights and the output function which varies accordingly and compensates the effect \n",
      "answerD": " shape landscape depends on the network, its weights and the output function which is fixed ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " Change in temperature doesn\u2019t effect stochastic update because shape landscape depends on the network, its weights and the output function which is fixed. \n Sanfoundry Global Education & Learning Series \u2013 Neural Networks. \n To practice all areas of Neural Networks,  here is complete set on 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Neural Network Questions and Answers \u2013 Hopfield Model-1 \u00bb  Next - Neural Network Questions and Answers \u2013 Stochastic Networks   Related Posts: Check  Electronics & Communication Engineering Books \n Practice  Electrical & Electronics Engineering MCQs \n Apply for  Electronics & Communication Engineering Internship \n Practice  Electronics & Communication Engineering MCQs \n Check  Electrical & Electronics Engineering Books \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Neural Network Questions and Answers \u2013 Hopfield Model-1  \n Neural Network Questions and Answers \u2013 Analysis of Pattern Storage Networks \u2013 2  \n Neural Network Questions and Answers \u2013 Analysis of Pattern Storage Networks \u2013 1  \n Neural Network Questions and Answers \u2013 Applications of Neural Networks \u2013 2  \n Neural Network Questions and Answers \u2013 History  \n Neural Network Questions and Answers \u2013 Stochastic Networks  \n Neural Network Questions and Answers \u2013 Multi Layer Feedforward Neural Network  \n Neural Network Questions and Answers \u2013 ART  \n Neural Network Questions and Answers \u2013 Learning Basics \u2013 1  \n Neural Networks Questions and Answers \u2013 Model Representation  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Neural Networks MCQ Questions Cryptography and Network Security MCQ Questions Network Theory MCQ Questions Computer Network MCQ Questions Finite Element Method MCQ Questions Popular Pages: C++ Algorithm Library C Programs on Matrix Analog Circuits MCQ Questions C++ Matrix Programs Bitwise Operators in C    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Neural Networks MCQs \n \n \n \n \n Introduction \n Neural Network Introduction \n \n Basics of Artificial Neural Networks \n Neural Characteristics - 1 \n Neural Characteristics - 2 \n Neural Characteristics - 3 \n Neural Networks History \n Neural Terminology \n Neural Networks Models - 1 \n Neural Networks Models - 2 \n Neural Networks Topology \n Neural Network Learning - 1 \n Neural Network Learning - 2 \n \n Activation & Synaptic Dynamics \n Neural Network Dynamics \n Activation Models \n Learning Basics - 1 \n Learning Basics - 2 \n Learning Laws - 1 \n Learning Laws - 2 \n Stability & Convergence \n Recall \n \n Feedforward Neural Networks \n Pattern Association - 1 \n Pattern Association - 2 \n Weight Determination \n Pattern Classification - 1 \n Pattern Classification - 2 \n Pattern Mapping \n Pattern Recognition \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Pattern Storage Analysis \n \n Feedback Neural Networks \n Feedback Neural Network \n FF Network Analysis \n Pattern Storage Networks-1 \n Pattern Storage Networks-2 \n Hopfield Model - 1 \n Hopfield Model - 2 \n Stochastic Networks \n Boltzman Machine - 1 \n Boltzman Machine - 2 \n \n Competitive Learning Neural Networks \n Learning Neural Network \n Feedback Layer \n Feature Mapping Network \n \n Complex Pattern Architectures & ANN Applications \n Associative Memories \n Multi Layer Neural Network \n ART \n Neural Applications - 1 \n Neural Applications - 2 \n \n Neural Networks in Machine Learning \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n Best Reference Books \n Neural Networks Books \n \n \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Neural Networks MCQ Questions Cryptography and Network Security MCQ Questions Network Theory MCQ Questions Computer Network MCQ Questions Finite Element Method MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages C++ Algorithm Library C Programs on Matrix Analog Circuits MCQ Questions C++ Matrix Programs Bitwise Operators in C \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Neural Networks MCQs \n \n Introduction \n Neural Network Introduction \n \n Basics of Artificial Neural Networks \n Neural Characteristics - 1 \n Neural Characteristics - 2 \n Neural Characteristics - 3 \n Neural Networks History \n Neural Terminology \n Neural Networks Models - 1 \n Neural Networks Models - 2 \n Neural Networks Topology \n Neural Network Learning - 1 \n Neural Network Learning - 2 \n \n Activation & Synaptic Dynamics \n Neural Network Dynamics \n Activation Models \n Learning Basics - 1 \n Learning Basics - 2 \n Learning Laws - 1 \n Learning Laws - 2 \n Stability & Convergence \n Recall \n \n Feedforward Neural Networks \n Pattern Association - 1 \n Pattern Association - 2 \n Weight Determination \n Pattern Classification - 1 \n Pattern Classification - 2 \n Pattern Mapping \n Pattern Recognition \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Pattern Storage Analysis \n \n Feedback Neural Networks \n Feedback Neural Network \n FF Network Analysis \n Pattern Storage Networks-1 \n Pattern Storage Networks-2 \n Hopfield Model - 1 \n Hopfield Model - 2 \n Stochastic Networks \n Boltzman Machine - 1 \n Boltzman Machine - 2 \n \n Competitive Learning Neural Networks \n Learning Neural Network \n Feedback Layer \n Feature Mapping Network \n \n Complex Pattern Architectures & ANN Applications \n Associative Memories \n Multi Layer Neural Network \n ART \n Neural Applications - 1 \n Neural Applications - 2 \n \n Neural Networks in Machine Learning \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n Best Reference Books \n Neural Networks Books \n \n \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.583 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-01-31 12:31:43  \n  Compression = gzip "
    },
    {
      "id": "1349",
      "question": "How can states of units be updated in hopfield model? \n",
      "answerA": " synchronously \n",
      "answerB": " asynchronously \n",
      "answerC": " synchronously and asynchronously \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " States of units be updated synchronously and asynchronously in hopfield model. \n \n \n \n \n \n "
    },
    {
      "id": "1350",
      "question": "What is synchronous update in hopfield model? \n",
      "answerA": " all units are updated simultaneously \n",
      "answerB": " a unit is selected at random and  its new state is computed \n",
      "answerC": " a predefined unit is selected and its new state is computed \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " In synchronous update, all units are updated simultaneously. \n "
    },
    {
      "id": "1351",
      "question": "What is asynchronous update in hopfield model? \n",
      "answerA": " all units are updated simultaneously \n",
      "answerB": " a unit is selected at random and  its new state is computed \n",
      "answerC": " a predefined unit is selected and its new state is computed \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " In asynchronous update, a unit is selected at random and  its new state is computed. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1352",
      "question": "If pattern is to be stored, then what does stable state should have updated value of? \n",
      "answerA": " current sate \n",
      "answerB": " next state \n",
      "answerC": " both current and next state \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Stable state should have updated value of current sate. \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n "
    },
    {
      "id": "1353",
      "question": "For symmetric weights there exist? \n",
      "answerA": " basins of attraction corresponding to energy minimum \n",
      "answerB": " false wells \n",
      "answerC": " fluctuations in energy landscape \n",
      "answerD": " none of he mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " For symmetric weights there exist a stable point. \n "
    },
    {
      "id": "1354",
      "question": "If connections are not symmetric then basins of attraction may correspond to? \n",
      "answerA": " oscillatory regions \n",
      "answerB": " stable regions \n",
      "answerC": " chaotic regions \n",
      "answerD": " oscillatory or chaotic regions ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " If connections are not symmetric then basins of attraction may correspond to oscillatory or chaotic regions. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1355",
      "question": "For analysis of storage capacity what are the conditions imposed on hopfield model? \n",
      "answerA": " symmetry of weights \n",
      "answerB": " asynchronous update \n",
      "answerC": " symmetry of weights and asynchronous update \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " For analysis of storage capacity, symmetry of weights and asynchronous update conditions are imposed on hopfield model. \n "
    },
    {
      "id": "1356",
      "question": "What is gradient descent? \n",
      "answerA": " method to find the absolute minimum of a function \n",
      "answerB": " method to find the absolute maximum of a function \n",
      "answerC": " maximum or minimum, depends on the situation \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": " a \n",
      "trackName": "Data Science",
      "explanation": " Gradient descent gives absolute minimum of a function. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1357",
      "question": "For what purpose energy  minima are used? \n",
      "answerA": " pattern classification \n",
      "answerB": " patten mapping \n",
      "answerC": " pattern storage \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " Energy  minima are used for pattern storage. \n \n \n \n \n \n "
    },
    {
      "id": "1358",
      "question": "What is capacity of a network? \n",
      "answerA": " number of inputs it can take \n",
      "answerB": " number of output it can deliver \n",
      "answerC": " number of patterns that can be stored \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " The capacity of a network is the number of patterns that can be stored. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1359",
      "question": "Number of desired patterns is what of basins of attraction? \n",
      "answerA": " dependent \n",
      "answerB": " independent \n",
      "answerC": " dependent or independent \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Number of desired patterns is independent of basins of attraction. \n \n \n    \nNote: Join free Sanfoundry classes at  Telegram  or  Youtube \n \n \n \n \n \n \n \n "
    },
    {
      "id": "1360",
      "question": "What happens when number of patterns is more than number of basins of attraction? \n",
      "answerA": " false wells \n",
      "answerB": " storage problem becomes hard problem \n",
      "answerC": " no storage and recall can take place \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " When number of patterns is more than number of basins of attraction then storage problem becomes hard problem. \n "
    },
    {
      "id": "1361",
      "question": "What happens when number of patterns is less than number of basins of attraction? \n",
      "answerA": " false wells \n",
      "answerB": " storage problem becomes hard problem \n",
      "answerC": " no storage and recall can take place \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " False wells are created when number of patterns is less than number of basins of attraction. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1362",
      "question": "What is hopfield model? \n",
      "answerA": " fully connected feedback network \n",
      "answerB": " fully connected feedback network  with symmetric weights \n",
      "answerC": " fully connected feedforward network \n",
      "answerD": " fully connected feedback network with symmetric weights ",
      "correctAnswer": " b \n",
      "trackName": "Data Science",
      "explanation": " Hopfield model is fully connected feedback network  with symmetric weights. \n "
    },
    {
      "id": "1363",
      "question": "When are false wells created? \n",
      "answerA": " when number of patterns is more than number of basins of attraction \n",
      "answerB": " when number of patterns is less than number of basins of attraction \n",
      "answerC": " when number of patterns is same as number of basins of attraction \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " False wells are created when number of patterns is less than number of basins of attraction. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1364",
      "question": "When does storage problem becomes hard problem? \n",
      "answerA": " when number of patterns is more than number of basins of attraction \n",
      "answerB": " when number of patterns is less than number of basins of attraction \n",
      "answerC": " when number of patterns is same as number of basins of attraction \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " When number of patterns is more than number of basins of attraction then storage problem becomes hard problem. \n Sanfoundry Global Education & Learning Series \u2013 Neural Networks. \n To practice all areas of Neural Networks for quizzes,  here is complete set on 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Neural Network Questions and Answers \u2013 Analysis of Pattern Storage Networks \u2013 1 \u00bb  Next - Neural Network Questions and Answers \u2013 Hopfield Model-1   Related Posts: Practice  Electrical & Electronics Engineering MCQs \n Practice  Electronics & Communication Engineering MCQs \n Check  Electronics & Communication Engineering Books \n Apply for  Electrical & Electronics Engineering Internship \n Apply for  Electronics & Communication Engineering Internship \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Neural Network Questions and Answers \u2013 Analysis of Pattern Storage Networks \u2013 1  \n Neural Network Questions and Answers \u2013 Analysis of Pattern Storage  \n Neural Network Questions and Answers \u2013 Analysis of Linear Autoassociative FF Network  \n Neural Network Questions and Answers \u2013 Applications of Neural Networks \u2013 1  \n Neural Network Questions and Answers \u2013 Applications of Neural Networks \u2013 2  \n Neural Network Questions and Answers \u2013 Hopfield Model-1  \n Neural Networks Questions and Answers \u2013 Introduction of Feedback Neural Network  \n Neural Network Questions and Answers \u2013 Pattern Association \u2013 1  \n Neural Network Questions and Answers \u2013 Analysis of Feature Mapping Network  \n Neural Network Questions and Answers \u2013 Hopfield Model-2  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Neural Networks MCQ Questions Network Theory MCQ Questions SAN MCQ Questions Computer Network MCQ Questions Cryptography and Network Security MCQ Questions Popular Pages: Structural Analysis MCQ Questions Foundry and Forging MCQ Questions Design & Analysis of Algorithms MCQ Questions Software Architecture and Design MCQ Questions VLSI MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Neural Networks MCQs \n \n \n \n \n Introduction \n Neural Network Introduction \n \n Basics of Artificial Neural Networks \n Neural Characteristics - 1 \n Neural Characteristics - 2 \n Neural Characteristics - 3 \n Neural Networks History \n Neural Terminology \n Neural Networks Models - 1 \n Neural Networks Models - 2 \n Neural Networks Topology \n Neural Network Learning - 1 \n Neural Network Learning - 2 \n \n Activation & Synaptic Dynamics \n Neural Network Dynamics \n Activation Models \n Learning Basics - 1 \n Learning Basics - 2 \n Learning Laws - 1 \n Learning Laws - 2 \n Stability & Convergence \n Recall \n \n Feedforward Neural Networks \n Pattern Association - 1 \n Pattern Association - 2 \n Weight Determination \n Pattern Classification - 1 \n Pattern Classification - 2 \n Pattern Mapping \n Pattern Recognition \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Pattern Storage Analysis \n \n Feedback Neural Networks \n Feedback Neural Network \n FF Network Analysis \n Pattern Storage Networks-1 \n Pattern Storage Networks-2 \n Hopfield Model - 1 \n Hopfield Model - 2 \n Stochastic Networks \n Boltzman Machine - 1 \n Boltzman Machine - 2 \n \n Competitive Learning Neural Networks \n Learning Neural Network \n Feedback Layer \n Feature Mapping Network \n \n Complex Pattern Architectures & ANN Applications \n Associative Memories \n Multi Layer Neural Network \n ART \n Neural Applications - 1 \n Neural Applications - 2 \n \n Neural Networks in Machine Learning \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n Best Reference Books \n Neural Networks Books \n \n \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Neural Networks MCQ Questions Network Theory MCQ Questions SAN MCQ Questions Computer Network MCQ Questions Cryptography and Network Security MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Structural Analysis MCQ Questions Foundry and Forging MCQ Questions Design & Analysis of Algorithms MCQ Questions Software Architecture and Design MCQ Questions VLSI MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Neural Networks MCQs \n \n Introduction \n Neural Network Introduction \n \n Basics of Artificial Neural Networks \n Neural Characteristics - 1 \n Neural Characteristics - 2 \n Neural Characteristics - 3 \n Neural Networks History \n Neural Terminology \n Neural Networks Models - 1 \n Neural Networks Models - 2 \n Neural Networks Topology \n Neural Network Learning - 1 \n Neural Network Learning - 2 \n \n Activation & Synaptic Dynamics \n Neural Network Dynamics \n Activation Models \n Learning Basics - 1 \n Learning Basics - 2 \n Learning Laws - 1 \n Learning Laws - 2 \n Stability & Convergence \n Recall \n \n Feedforward Neural Networks \n Pattern Association - 1 \n Pattern Association - 2 \n Weight Determination \n Pattern Classification - 1 \n Pattern Classification - 2 \n Pattern Mapping \n Pattern Recognition \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Pattern Storage Analysis \n \n Feedback Neural Networks \n Feedback Neural Network \n FF Network Analysis \n Pattern Storage Networks-1 \n Pattern Storage Networks-2 \n Hopfield Model - 1 \n Hopfield Model - 2 \n Stochastic Networks \n Boltzman Machine - 1 \n Boltzman Machine - 2 \n \n Competitive Learning Neural Networks \n Learning Neural Network \n Feedback Layer \n Feature Mapping Network \n \n Complex Pattern Architectures & ANN Applications \n Associative Memories \n Multi Layer Neural Network \n ART \n Neural Applications - 1 \n Neural Applications - 2 \n \n Neural Networks in Machine Learning \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n Best Reference Books \n Neural Networks Books \n \n \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.568 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-01-31 11:06:32  \n  Compression = gzip "
    },
    {
      "id": "1365",
      "question": "For what purpose energy  minima are used? \n",
      "answerA": " pattern classification \n",
      "answerB": " patten mapping \n",
      "answerC": " pattern storage \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " Energy  minima are used for pattern storage. \n \n \n \n \n \n "
    },
    {
      "id": "1366",
      "question": "What is capacity of a network? \n",
      "answerA": " number of inputs it can take \n",
      "answerB": " number of output it can deliver \n",
      "answerC": " number of patterns that can be stored \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " The capacity of a network is the number of patterns that can be stored. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1367",
      "question": "Number of desired patterns is what of basins of attraction? \n",
      "answerA": " dependent \n",
      "answerB": " independent \n",
      "answerC": " dependent or independent \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Number of desired patterns is independent of basins of attraction. \n \n \n    \nSubscribe Now:  Neural Network Newsletter  |  Important Subjects Newsletters \n \n \n \n \n \n \n \n "
    },
    {
      "id": "1368",
      "question": "What happens when number of patterns is more than number of basins of attraction? \n",
      "answerA": " false wells \n",
      "answerB": " storage problem becomes hard problem \n",
      "answerC": " no storage and recall can take place \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " When number of patterns is more than number of basins of attraction then storage problem becomes hard problem. \n "
    },
    {
      "id": "1369",
      "question": "What happens when number of patterns is less than number of basins of attraction? \n",
      "answerA": " false wells \n",
      "answerB": " storage problem becomes hard problem \n",
      "answerC": " no storage and recall can take place \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " False wells are created when number of patterns is less than number of basins of attraction. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1370",
      "question": "What is hopfield model? \n",
      "answerA": " fully connected feedback network \n",
      "answerB": " fully connected feedback network  with symmetric weights \n",
      "answerC": " fully connected feedforward network \n",
      "answerD": " fully connected feedback network with symmetric weights ",
      "correctAnswer": " b \n",
      "trackName": "Data Science",
      "explanation": " Hopfield model is fully connected feedback network  with symmetric weights. \n "
    },
    {
      "id": "1371",
      "question": "When are false wells created? \n",
      "answerA": " when number of patterns is more than number of basins of attraction \n",
      "answerB": " when number of patterns is less than number of basins of attraction \n",
      "answerC": " when number of patterns is same as number of basins of attraction \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " False wells are created when number of patterns is less than number of basins of attraction. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1372",
      "question": "When does storage problem becomes hard problem? \n",
      "answerA": " when number of patterns is more than number of basins of attraction \n",
      "answerB": " when number of patterns is less than number of basins of attraction \n",
      "answerC": " when number of patterns is same as number of basins of attraction \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " When number of patterns is more than number of basins of attraction then storage problem becomes hard problem. \n Sanfoundry Global Education & Learning Series \u2013 Neural Networks. \n To practice all areas of Neural Networks,  here is complete set on 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Neural Network Questions and Answers \u2013 Analysis of Linear Autoassociative FF Network \u00bb  Next - Neural Network Questions and Answers \u2013 Analysis of Pattern Storage Networks \u2013 2   Related Posts: Apply for  Electronics & Communication Engineering Internship \n Check  Neural Networks Books \n Practice  Electronics & Communication Engineering MCQs \n Check  Electrical & Electronics Engineering Books \n Practice  Electrical & Electronics Engineering MCQs \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Neural Network Questions and Answers \u2013 Analysis of Pattern Storage Networks \u2013 2  \n Neural Network Questions and Answers \u2013 Analysis of Linear Autoassociative FF Network  \n Neural Network Questions and Answers \u2013 Analysis of Pattern Storage  \n Neural Network Questions and Answers \u2013 Applications of Neural Networks \u2013 1  \n Neural Networks Questions and Answers \u2013 Introduction of Feedback Neural Network  \n Neural Network Questions and Answers \u2013 Applications of Neural Networks \u2013 2  \n Neural Network Questions and Answers \u2013 Pattern Association \u2013 1  \n Neural Network Questions and Answers \u2013 Hopfield Model-1  \n Neural Network Questions and Answers \u2013 Analysis of Feature Mapping Network  \n Neural Network Questions and Answers \u2013 Hopfield Model-2  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Neural Networks MCQ Questions Network Theory MCQ Questions Computer Network MCQ Questions SAN MCQ Questions Cryptography and Network Security MCQ Questions Popular Pages: Automata Theory MCQ Questions Structural Analysis MCQ Questions C++ Algorithm Library Foundry and Forging MCQ Questions Design & Analysis of Algorithms MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Neural Networks MCQs \n \n \n \n \n Introduction \n Neural Network Introduction \n \n Basics of Artificial Neural Networks \n Neural Characteristics - 1 \n Neural Characteristics - 2 \n Neural Characteristics - 3 \n Neural Networks History \n Neural Terminology \n Neural Networks Models - 1 \n Neural Networks Models - 2 \n Neural Networks Topology \n Neural Network Learning - 1 \n Neural Network Learning - 2 \n \n Activation & Synaptic Dynamics \n Neural Network Dynamics \n Activation Models \n Learning Basics - 1 \n Learning Basics - 2 \n Learning Laws - 1 \n Learning Laws - 2 \n Stability & Convergence \n Recall \n \n Feedforward Neural Networks \n Pattern Association - 1 \n Pattern Association - 2 \n Weight Determination \n Pattern Classification - 1 \n Pattern Classification - 2 \n Pattern Mapping \n Pattern Recognition \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Pattern Storage Analysis \n \n Feedback Neural Networks \n Feedback Neural Network \n FF Network Analysis \n Pattern Storage Networks-1 \n Pattern Storage Networks-2 \n Hopfield Model - 1 \n Hopfield Model - 2 \n Stochastic Networks \n Boltzman Machine - 1 \n Boltzman Machine - 2 \n \n Competitive Learning Neural Networks \n Learning Neural Network \n Feedback Layer \n Feature Mapping Network \n \n Complex Pattern Architectures & ANN Applications \n Associative Memories \n Multi Layer Neural Network \n ART \n Neural Applications - 1 \n Neural Applications - 2 \n \n Neural Networks in Machine Learning \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n Best Reference Books \n Neural Networks Books \n \n \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Neural Networks MCQ Questions Network Theory MCQ Questions Computer Network MCQ Questions SAN MCQ Questions Cryptography and Network Security MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Automata Theory MCQ Questions Structural Analysis MCQ Questions C++ Algorithm Library Foundry and Forging MCQ Questions Design & Analysis of Algorithms MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Neural Networks MCQs \n \n Introduction \n Neural Network Introduction \n \n Basics of Artificial Neural Networks \n Neural Characteristics - 1 \n Neural Characteristics - 2 \n Neural Characteristics - 3 \n Neural Networks History \n Neural Terminology \n Neural Networks Models - 1 \n Neural Networks Models - 2 \n Neural Networks Topology \n Neural Network Learning - 1 \n Neural Network Learning - 2 \n \n Activation & Synaptic Dynamics \n Neural Network Dynamics \n Activation Models \n Learning Basics - 1 \n Learning Basics - 2 \n Learning Laws - 1 \n Learning Laws - 2 \n Stability & Convergence \n Recall \n \n Feedforward Neural Networks \n Pattern Association - 1 \n Pattern Association - 2 \n Weight Determination \n Pattern Classification - 1 \n Pattern Classification - 2 \n Pattern Mapping \n Pattern Recognition \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Pattern Storage Analysis \n \n Feedback Neural Networks \n Feedback Neural Network \n FF Network Analysis \n Pattern Storage Networks-1 \n Pattern Storage Networks-2 \n Hopfield Model - 1 \n Hopfield Model - 2 \n Stochastic Networks \n Boltzman Machine - 1 \n Boltzman Machine - 2 \n \n Competitive Learning Neural Networks \n Learning Neural Network \n Feedback Layer \n Feature Mapping Network \n \n Complex Pattern Architectures & ANN Applications \n Associative Memories \n Multi Layer Neural Network \n ART \n Neural Applications - 1 \n Neural Applications - 2 \n \n Neural Networks in Machine Learning \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n Best Reference Books \n Neural Networks Books \n \n \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.633 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-01-31 10:46:49  \n  Compression = gzip "
    },
    {
      "id": "1373",
      "question": "What is the objective of pattern recall? \n",
      "answerA": " it should not take place when relations are disturbed \n",
      "answerB": " it should take place when relations are slightly disturbed \n",
      "answerC": " there is no such objective of recall, it depends on the system \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " The pattern recall should take place even though features and their spatial relations are slightly disturbed due to noise. \n \n \n \n \n \n "
    },
    {
      "id": "1374",
      "question": "How is pattern storage task generally accomplished? \n",
      "answerA": " by a feedback network consisting of processing units with non linear output functions \n",
      "answerB": " by a feedback network consisting of processing units with linear output functions \n",
      "answerC": " by a feedforward network consisting of processing units with non linear output functions \n",
      "answerD": " by a feedforward network consisting of processing units with linear output functions ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Pattern storage task generally accomplished by a feedback network consisting of processing units with non linear output functions. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1375",
      "question": "The trajectory of the state is determined by? \n",
      "answerA": " activation dynamics \n",
      "answerB": " synaptic dynamics \n",
      "answerC": " both activation and synaptic dynamics \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " The trajectory of the state  is determined by activation dynamics. \n "
    },
    {
      "id": "1376",
      "question": "what  do you mean by the term trajectory of states? \n",
      "answerA": " just a state of the network \n",
      "answerB": " sates at energy minima \n",
      "answerC": " states at energy maxima \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " The term trajectory of states means state of the network at successive instants of time. \n \n \n    \nSubscribe Now:  Neural Network Newsletter  |  Important Subjects Newsletters \n \n \n \n \n \n \n \n "
    },
    {
      "id": "1377",
      "question": "What determines shape of energy landscape? \n",
      "answerA": " network parameters \n",
      "answerB": " network states \n",
      "answerC": " both network parameter and states \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " The shape of energy landscape is determined by network parameter and states. \n "
    },
    {
      "id": "1378",
      "question": "What may create basins of attraction in energy landscape? \n",
      "answerA": " feedback among units \n",
      "answerB": " nonlinear processing in units \n",
      "answerC": " both feedback and nonlinear processing in units \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " Feedback and nonlinear processing in units may create basins of attraction in energy landscape. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1379",
      "question": "What is the effect of basins of attraction on energy landscape? \n",
      "answerA": " leads to small deviations \n",
      "answerB": " leads to fluctuation around \n",
      "answerC": " may lead to deviation or fluctuation depends on external noise \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Basins of attraction in energy landscape leads to small deviations. \n "
    },
    {
      "id": "1380",
      "question": "What does basins of attraction corresponds to? \n",
      "answerA": " stable states \n",
      "answerB": " unstable states \n",
      "answerC": " neutral states \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Basins of attraction corresponds to the regions of stable equilibrium states. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1381",
      "question": "How can false minima be reduced in case of error in recall in feedback neural networks? \n",
      "answerA": " by providing additional units \n",
      "answerB": " by using probabilistic update \n",
      "answerC": " can be either probabilistic update or using additional units \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Hard problem can be solved by additional units not the false minima. \n \n \n \n \n \n "
    },
    {
      "id": "1382",
      "question": "What is a Boltzman machine? \n",
      "answerA": " A feedback network with hidden units \n",
      "answerB": " A feedback network with hidden units and probabilistic update \n",
      "answerC": " A feed forward network with hidden units \n",
      "answerD": " A feed forward network with hidden units and probabilistic update ",
      "correctAnswer": " b \n",
      "trackName": "Data Science",
      "explanation": " Boltzman machine is a feedback network with hidden units and probabilistic update. \n "
    },
    {
      "id": "1383",
      "question": "What is objective of linear autoassociative feedforward networks? \n",
      "answerA": " to associate a given pattern with itself \n",
      "answerB": " to associate a given pattern with others \n",
      "answerC": " to associate output with input \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " The objective of linear autoassociative feedforward networks is to associate a given pattern with itself. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1384",
      "question": "If input is \u2018 a(l) + e \u2018 where \u2018e\u2019  is the noise introduced, then what is the output in case of autoassociative feedback network? \n",
      "answerA": " a(l) \n",
      "answerB": " a(l) + e \n",
      "answerC": " could be either a(l) or a(l) + e \n",
      "answerD": " e ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " This is due to the absence of accretive behaviour. \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n "
    },
    {
      "id": "1385",
      "question": "If input is \u2018 a(l) + e \u2018 where \u2018e\u2019  is the noise introduced, then what is the output if system is accretive in nature? \n",
      "answerA": " a(l) \n",
      "answerB": " a(l) + e \n",
      "answerC": " could be either a(l) or a(l) + e \n",
      "answerD": " e ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " This is the property of accretive system. \n "
    },
    {
      "id": "1386",
      "question": "If input is \u2018 a(l) + e \u2018 where \u2018e\u2019  is the noise introduced, then what is the output if system is interpolative in nature? \n",
      "answerA": " a(l) \n",
      "answerB": " a(l) + e \n",
      "answerC": " could be either a(l) or a(l) + e \n",
      "answerD": " e ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " This is the property of interpolative system. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1387",
      "question": "What property should a feedback network have, to make it useful for storing information? \n",
      "answerA": " accretive behaviour \n",
      "answerB": " interpolative behaviour \n",
      "answerC": " both accretive and interpolative behaviour \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " During recall accretive behaviour make it possible for system to store information. \n "
    },
    {
      "id": "1388",
      "question": "What is the objective of a pattern storage task in a network? \n",
      "answerA": " to store a given set of patterns \n",
      "answerB": " to recall a give set of patterns \n",
      "answerC": " both to store and recall \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " The objective of a pattern storage task in a network is to store and recall a given set of patterns. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1389",
      "question": "Which is a simplest pattern recognition task in a feedback network? \n",
      "answerA": " heteroassociation \n",
      "answerB": " autoassociation \n",
      "answerC": " can be hetero or autoassociation, depends on situation \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Autoassociation is the simplest pattern recognition task. \n \n \n \n \n \n "
    },
    {
      "id": "1390",
      "question": "What can be done by using non \u2013 linear output function for each processing unit in a feedback network? \n",
      "answerA": " pattern classification \n",
      "answerB": " recall \n",
      "answerC": " pattern storage \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " By using non \u2013 linear output function for each processing unit, a feedback network can be used for pattern storage. \n "
    },
    {
      "id": "1391",
      "question": "When are stable states reached in energy landscapes, that can be used to store input patterns? \n",
      "answerA": " mean of peaks and valleys \n",
      "answerB": " maxima \n",
      "answerC": " minima \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " Energy minima corresponds to stable states that can be used to store input patterns. \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n "
    },
    {
      "id": "1392",
      "question": "The number of patterns that can be stored in a given network depends on? \n",
      "answerA": " number of units \n",
      "answerB": " strength of connecting links \n",
      "answerC": " both number of units and strength of connecting links \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " The number of patterns that can be stored in a given network depends on number of units and strength of connecting links. \n "
    },
    {
      "id": "1393",
      "question": "What happens when number of available energy minima be less than number of patterns to be stored? \n",
      "answerA": " pattern storage is not possible in that case \n",
      "answerB": " pattern storage can be easily done \n",
      "answerC": " pattern storage problem becomes hard problem for the network \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " Pattern storage problem becomes hard problem, when number of energy minima i.e stable states are less. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1394",
      "question": "What happens when number of available energy minima be more than number of patterns to be stored? \n",
      "answerA": " no effect \n",
      "answerB": " pattern storage is not possible in that case \n",
      "answerC": " error in recall \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " Due to additional false minima, there is error in recall. \n "
    },
    {
      "id": "1395",
      "question": "How hard problem can be solved? \n",
      "answerA": " by providing additional units in a feedback network \n",
      "answerB": " nothing can be done \n",
      "answerC": " by removing units in hidden layer \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Hard problem can be solved by providing additional units in a feedback network. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1396",
      "question": "Why there is error in recall, when number of energy minima is more the required number of patterns to be stored? \n",
      "answerA": " due to noise \n",
      "answerB": " due to additional false maxima \n",
      "answerC": " due to additional false minima \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " Due to additional false minima, there is error in recall. \n Sanfoundry Global Education & Learning Series \u2013 Neural Networks. \n To practice all areas of Neural Networks,  here is complete set on 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Neural Networks Questions and Answers \u2013 Backpropagation Algorithm \u2013 Set 3 \u00bb  Next - Neural Networks Questions and Answers \u2013 Introduction of Feedback Neural Network   Related Posts: Check  Electronics & Communication Engineering Books \n Practice  Electrical & Electronics Engineering MCQs \n Apply for  Electronics & Communication Engineering Internship \n Check  Electrical & Electronics Engineering Books \n Check  Neural Networks Books \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Neural Network Questions and Answers \u2013 Pattern Association \u2013 1  \n Neural Network Questions and Answers \u2013 Pattern Recognition  \n Neural Networks Questions and Answers \u2013 Introduction of Feedback Neural Network  \n Neural Network Questions and Answers \u2013 Analysis of Pattern Storage Networks \u2013 2  \n Neural Network Questions and Answers \u2013 Analysis of Pattern Storage Networks \u2013 1  \n Neural Network Questions and Answers \u2013 Analysis of Linear Autoassociative FF Network  \n Neural Network Questions and Answers \u2013 Pattern Association \u2013 2  \n Neural Network Questions and Answers \u2013 Recall  \n Neural Network Questions and Answers \u2013 Multi Layer Feedforward Neural Network  \n Neural Network Questions and Answers \u2013 Analysis of Feature Mapping Network  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Neural Networks MCQ Questions Network Theory MCQ Questions Cryptography and Network Security MCQ Questions Computer Network MCQ Questions Linear Integrated Circuits MCQ Questions Popular Pages: Searching and Sorting Algorithms in C Design & Analysis of Algorithms MCQ Questions Structural Analysis MCQ Questions Java Matrix Programs Pavement Analysis and Design MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Neural Networks MCQs \n \n \n \n \n Introduction \n Neural Network Introduction \n \n Basics of Artificial Neural Networks \n Neural Characteristics - 1 \n Neural Characteristics - 2 \n Neural Characteristics - 3 \n Neural Networks History \n Neural Terminology \n Neural Networks Models - 1 \n Neural Networks Models - 2 \n Neural Networks Topology \n Neural Network Learning - 1 \n Neural Network Learning - 2 \n \n Activation & Synaptic Dynamics \n Neural Network Dynamics \n Activation Models \n Learning Basics - 1 \n Learning Basics - 2 \n Learning Laws - 1 \n Learning Laws - 2 \n Stability & Convergence \n Recall \n \n Feedforward Neural Networks \n Pattern Association - 1 \n Pattern Association - 2 \n Weight Determination \n Pattern Classification - 1 \n Pattern Classification - 2 \n Pattern Mapping \n Pattern Recognition \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Pattern Storage Analysis \n \n Feedback Neural Networks \n Feedback Neural Network \n FF Network Analysis \n Pattern Storage Networks-1 \n Pattern Storage Networks-2 \n Hopfield Model - 1 \n Hopfield Model - 2 \n Stochastic Networks \n Boltzman Machine - 1 \n Boltzman Machine - 2 \n \n Competitive Learning Neural Networks \n Learning Neural Network \n Feedback Layer \n Feature Mapping Network \n \n Complex Pattern Architectures & ANN Applications \n Associative Memories \n Multi Layer Neural Network \n ART \n Neural Applications - 1 \n Neural Applications - 2 \n \n Neural Networks in Machine Learning \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n Best Reference Books \n Neural Networks Books \n \n \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Neural Networks MCQ Questions Network Theory MCQ Questions Cryptography and Network Security MCQ Questions Computer Network MCQ Questions Linear Integrated Circuits MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Searching and Sorting Algorithms in C Design & Analysis of Algorithms MCQ Questions Structural Analysis MCQ Questions Java Matrix Programs Pavement Analysis and Design MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Neural Networks MCQs \n \n Introduction \n Neural Network Introduction \n \n Basics of Artificial Neural Networks \n Neural Characteristics - 1 \n Neural Characteristics - 2 \n Neural Characteristics - 3 \n Neural Networks History \n Neural Terminology \n Neural Networks Models - 1 \n Neural Networks Models - 2 \n Neural Networks Topology \n Neural Network Learning - 1 \n Neural Network Learning - 2 \n \n Activation & Synaptic Dynamics \n Neural Network Dynamics \n Activation Models \n Learning Basics - 1 \n Learning Basics - 2 \n Learning Laws - 1 \n Learning Laws - 2 \n Stability & Convergence \n Recall \n \n Feedforward Neural Networks \n Pattern Association - 1 \n Pattern Association - 2 \n Weight Determination \n Pattern Classification - 1 \n Pattern Classification - 2 \n Pattern Mapping \n Pattern Recognition \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Pattern Storage Analysis \n \n Feedback Neural Networks \n Feedback Neural Network \n FF Network Analysis \n Pattern Storage Networks-1 \n Pattern Storage Networks-2 \n Hopfield Model - 1 \n Hopfield Model - 2 \n Stochastic Networks \n Boltzman Machine - 1 \n Boltzman Machine - 2 \n \n Competitive Learning Neural Networks \n Learning Neural Network \n Feedback Layer \n Feature Mapping Network \n \n Complex Pattern Architectures & ANN Applications \n Associative Memories \n Multi Layer Neural Network \n ART \n Neural Applications - 1 \n Neural Applications - 2 \n \n Neural Networks in Machine Learning \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n Best Reference Books \n Neural Networks Books \n \n \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.375 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-01-31 21:21:08  \n  Compression = gzip "
    },
    {
      "id": "1397",
      "question": "Which of the following sets the size of the buffer used in ufuncs? \n",
      "answerA": " bufsize(size) \n",
      "answerB": " setsize(size) \n",
      "answerC": " setbufsize(size) \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " Adjusting the size of the buffer may therefore alter the speed at which ufunc calculations of various sorts are completed.   \n "
    },
    {
      "id": "1398",
      "question": "Point out the wrong statement. \n",
      "answerA": " A universal function is a function that operates on ndarrays in an element-by-element fashion \n",
      "answerB": " In Numpy, universal functions are instances of the numpy.ufunction class \n",
      "answerC": " Many of the built-in functions are implemented in compiled C code \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " ufunc instances can also be produced using the frompyfunc factory function.   \n \n \n \n \n \n "
    },
    {
      "id": "1399",
      "question": "Which of the following attribute should be used while checking for type combination input and output? \n",
      "answerA": " .types \n",
      "answerB": " .type \n",
      "answerC": " .class \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Universal functions in NumPy are flexible enough to have mixed type signatures.   \n "
    },
    {
      "id": "1400",
      "question": "Which of the following returns an array of ones with the same shape and type as a given array? \n",
      "answerA": " all_like \n",
      "answerB": " ones_like \n",
      "answerC": " one_alike \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " The optional output arguments of the function can be used to help you save memory for large calculations.   \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1401",
      "question": "Point out the wrong statement. \n",
      "answerA": " Each universal function takes array inputs and produces array outputs \n",
      "answerB": " Broadcasting is used throughout NumPy to decide how to handle disparately shaped arrays \n",
      "answerC": " The output of the ufunc is necessarily an ndarray, if all input arguments are ndarrays \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " The output of the ufunc is not necessarily an ndarray, if all input arguments are not ndarrays.   \n "
    },
    {
      "id": "1402",
      "question": "Which of the following set the floating-point error callback function or log object? \n",
      "answerA": " setter \n",
      "answerB": " settercall \n",
      "answerC": " setterstack \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " seterr sets how floating-point errors are handled.   \n \n \n    \nNote: Join free Sanfoundry classes at  Telegram  or  Youtube \n \n \n \n \n \n \n \n "
    },
    {
      "id": "1403",
      "question": "Some ufuncs can take output arguments. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " All ufuncs can take output arguments. If necessary, output will be cast to the data-type of the provided output array.   \n "
    },
    {
      "id": "1404",
      "question": "___________ decompose the elements of x into mantissa and twos exponent. \n",
      "answerA": " trunc \n",
      "answerB": " fmod \n",
      "answerC": " frexp \n",
      "answerD": " ldexp ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " fmod function return the element-wise remainder of division.   \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1405",
      "question": "Which of the following function take only single value as input? \n",
      "answerA": " iscomplex \n",
      "answerB": " minimum \n",
      "answerC": " fmin \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " iscomplex function returns a bool array, where true if input element is complex.   \n "
    },
    {
      "id": "1406",
      "question": "The array object returned by __array_prepare__ is passed to the ufunc for computation. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " If the class has an __array_wrap__ method, the returned ndarray result will be passed to that method just before passing control back to the caller.   \n \n advertisement \n \n \n \n \n Sanfoundry Global Education & Learning Series \u2013 Data Science. \n Here\u2019s the list of Best Books in Data Science. \n \nTo practice all areas of Data Science for online test,  Here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Data Science Questions and Answers \u2013 NumPy \u2013 1   Related Posts: Apply for  Data Science Internship \n Practice  Computer Science MCQs \n Check  Data Science Books \n Check  Programming Books \n Practice  Programming MCQs \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Data Science Questions and Answers \u2013 NumPy \u2013 1  \n Data Science Questions and Answers \u2013 Pandas \u2013 1  \n Data Science Questions and Answers \u2013 Pandas Data Structure  \n Data Science Questions and Answers \u2013 Graphics Devices \u2013 1  \n Data Science Questions and Answers \u2013 Summarizing and Merging Data  \n Data Science Questions and Answers \u2013 Tidy Data  \n Data Science Questions and Answers \u2013 caret \u2013 1  \n Data Science Questions and Answers \u2013 caret \u2013 3  \n Data Science Questions and Answers \u2013 Plotting Systems  \n Data Science Questions and Answers \u2013 Time Deltas  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Data Science MCQ Questions Data Structures in C C# Array Programs Data Structure MCQ Questions C Programs on Arrays Popular Pages: Searching and Sorting Algorithms in C Data Structures in C++ Clinical Science MCQ Questions Java Array Programs Data Structures in Java    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Data Science MCQs \n \n \n \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Data Science MCQ Questions Data Structures in C C# Array Programs Data Structure MCQ Questions C Programs on Arrays \n   \n \n \n \n \n \n \n   Popular Pages Searching and Sorting Algorithms in C Data Structures in C++ Clinical Science MCQ Questions Java Array Programs Data Structures in Java \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Data Science MCQs \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.499 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-01-31 13:54:09  \n  Compression = gzip "
    },
    {
      "id": "1407",
      "question": "Which of the following is contained in NumPy library? \n",
      "answerA": " n-dimensional array object \n",
      "answerB": " tools for integrating C/C++ and Fortran code \n",
      "answerC": " fourier transform \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " NumPy is the fundamental package for scientific computing with Python.   \n "
    },
    {
      "id": "1408",
      "question": "Point out the wrong statement. \n",
      "answerA": " ipython is an enhanced interactive Python shell \n",
      "answerB": " matplotlib will enable you to plot graphics \n",
      "answerC": " rPy provides a lot of scientific routines that work on top of NumPy \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " SciPy provides a lot of scientific routines that work on top of NumPy.   \n \n \n \n \n \n "
    },
    {
      "id": "1409",
      "question": "The ________ function returns its argument with a modified shape, whereas the ________ method modifies the array itself. \n",
      "answerA": " reshape, resize \n",
      "answerB": " resize, reshape \n",
      "answerC": " reshape2, resize \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " If a dimension is given as -1 in a reshaping operation, the other dimensions are automatically calculated.   \n "
    },
    {
      "id": "1410",
      "question": "To create sequences of numbers, NumPy provides a function __________ analogous to range that returns arrays instead of lists. \n",
      "answerA": " arange \n",
      "answerB": " aspace \n",
      "answerC": " aline \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " When arange is used with floating point arguments, it is generally not possible to predict the number of elements obtained.   \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1411",
      "question": "Point out the correct statement. \n",
      "answerA": " NumPy main object is the homogeneous multidimensional array \n",
      "answerB": " In Numpy, dimensions are called axes \n",
      "answerC": " Numpy array class is called ndarray \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " The number of axes is called rank.   \n "
    },
    {
      "id": "1412",
      "question": "Which of the following function stacks 1D arrays as columns into a 2D array? \n",
      "answerA": " row_stack \n",
      "answerB": " column_stack \n",
      "answerC": " com_stack \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " column_stack is equivalent to vstack only for 1D arrays.   \n \n \n    \nSubscribe Now:  Data Science Newsletter  |  Important Subjects Newsletters \n \n \n \n \n \n \n \n "
    },
    {
      "id": "1415",
      "question": "Which of the following function can be used to combine different vectors so as to obtain the result for each n-uplet? \n",
      "answerA": " iid_ \n",
      "answerB": " ix_ \n",
      "answerC": " ixd_ \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Length of the 1D boolean array must coincide with the length of the dimension (or axis) you want to slice.   \n "
    },
    {
      "id": "1416",
      "question": "ndarray.dataitemSize is the buffer containing the actual elements of the array. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " ndarray.data is the buffer containing the actual elements of the array.   \n \n advertisement \n \n \n \n \n Sanfoundry Global Education & Learning Series \u2013 Data Science. \n Here\u2019s the list of Best Books in Data Science. \n \nTo practice all areas of Data Science for campus interviews,  Here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Data Science Questions and Answers \u2013 googleVis \u00bb  Next - Data Science Questions and Answers \u2013 NumPy \u2013 2   Related Posts: Apply for  Computer Science Internship \n Check  Computer Science Books \n Check  Data Science Books \n Apply for  Data Science Internship \n Practice  Programming MCQs \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Data Science Questions and Answers \u2013 NumPy \u2013 2  \n Data Science Questions and Answers \u2013 Pandas \u2013 1  \n Data Science Questions and Answers \u2013 Pandas Data Structure  \n Data Science Questions and Answers \u2013 Pandas \u2013 2  \n Data Science Questions and Answers \u2013 Summarizing and Merging Data  \n Data Science MCQ (Multiple Choice Questions)  \n Data Science Questions and Answers \u2013 Tidy Data  \n Data Science Certification  \n Data Science Questions and Answers \u2013 Graphics Devices \u2013 1  \n Data Science Questions and Answers \u2013 Literate Statistical Programming \u2013 1  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Data Science MCQ Questions Data Structure MCQ Questions C++ Algorithm Library Data Structures in C Python Programs on Trees Popular Pages: Data Structures in C++ Books on Engineering, Science and Technology Searching and Sorting in Python Linked List Programs in Python Information Science Questions and Answers    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Data Science MCQs \n \n \n \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Data Science MCQ Questions Data Structure MCQ Questions C++ Algorithm Library Data Structures in C Python Programs on Trees \n   \n \n \n \n \n \n \n   Popular Pages Data Structures in C++ Books on Engineering, Science and Technology Searching and Sorting in Python Linked List Programs in Python Information Science Questions and Answers \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Data Science MCQs \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.388 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-01-29 19:26:22  \n  Compression = gzip "
    },
    {
      "id": "1417",
      "question": "Which of the following is R interface to google charts? \n",
      "answerA": " googleVis \n",
      "answerB": " googleChart \n",
      "answerC": " googleDataVis \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " googleVis allow users to create interactive charts based on data frames.   \n "
    },
    {
      "id": "1418",
      "question": "Point out the wrong statement. \n",
      "answerA": " The plot command does open a graphics device in the modern way \n",
      "answerB": " Motion Chart is only displayed when hosted on a web server \n",
      "answerC": " gvisMotionChart is used to create motion chart \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " The plot command does not open a graphics device in the traditional way.   \n \n \n \n \n \n "
    },
    {
      "id": "1419",
      "question": "Which of the following create a Google Gadget based on a Google Visualization Object? \n",
      "answerA": " createGadget \n",
      "answerB": " createGoogleGadget \n",
      "answerC": " newGoogleGadget \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " createGoogleGadget returns a Google Gadget XML string.   \n "
    },
    {
      "id": "1420",
      "question": "Which of the following  reads a data.frame and creates text output referring to the Google Visualization API? \n",
      "answerA": " gvisAnnotatedLine \n",
      "answerB": " gvisTimeLine \n",
      "answerC": " gvisAnnotatedTimeLine \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " An annotated time line is an interactive time series line chart with optional annotations.   \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1421",
      "question": "Point out the correct statement. \n",
      "answerA": " gvisAnnotationChart returns list of class \u201cgvis\u201d and \u201clist\u201d \n",
      "answerB": " The gvisAreaChart function reads a data.frame and creates text output referring to the Google Visualization API \n",
      "answerC": " gvisAreaChart returns list of class \u201cgvis\u201d and \u201clist\u201d \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " This can be included into a web page, or as a stand-alone page.   \n "
    },
    {
      "id": "1422",
      "question": "Which of the following is used for creating interacting tables? \n",
      "answerA": " gvisGeoChart \n",
      "answerB": " gvisTable \n",
      "answerC": " gvisLineChart \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " gvisLineChart is used for creating line charts.   \n \n \n    \nNote: Join free Sanfoundry classes at  Telegram  or  Youtube \n \n \n \n \n \n \n \n "
    },
    {
      "id": "1423",
      "question": "gvisAnnotatedTimeLine returns list of class \u201cgvis\u201d and \u201clist\u201d. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " The chart is rendered within the browser using flash.   \n "
    },
    {
      "id": "1424",
      "question": "The actual chart of gvisBarChart is rendered by the web browser using _________ or VML. \n",
      "answerA": " JPEG \n",
      "answerB": " SVG \n",
      "answerC": " PDF \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " gvisBarChart reads data frame.   \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1425",
      "question": "Which of the following is used for creating tree maps? \n",
      "answerA": " gvisGeoChart \n",
      "answerB": " gvisTable \n",
      "answerC": " gvisTreeMap \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " gvisGeoChart is used for interactive maps.   \n "
    },
    {
      "id": "1426",
      "question": "gvisAnnotationChart charts are interactive time series line charts that support annotations. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Unlike the gvisAnnotatedTimeLine, which uses flash, annotation charts are SVG/VML and should be preferred whenever possible.   \n \n advertisement \n \n \n \n \n Sanfoundry Global Education & Learning Series \u2013 Data Science. \n Here\u2019s the list of Best Books in Data Science. \n \nTo practice puzzles on all areas of Data Science,  Here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Data Science Questions and Answers \u2013 Slidify \u00bb  Next - Data Science Questions and Answers \u2013 NumPy \u2013 1   Related Posts: Apply for  Data Science Internship \n Check  Programming Books \n Practice  Programming MCQs \n Practice  Computer Science MCQs \n Check  Computer Science Books \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Data Science Questions and Answers \u2013 Basics of Data Science  \n Data Science Questions and Answers \u2013 Shiny  \n Data Science Certification  \n Data Science Questions and Answers \u2013 Pandas \u2013 1  \n Data Science Questions and Answers \u2013 Exploratory Graphs  \n Data Science Questions and Answers \u2013 caret \u2013 2  \n Data Science Questions and Answers \u2013 Graphics Devices \u2013 1  \n Data Science Questions and Answers \u2013 Summarizing and Merging Data  \n Data Science Questions and Answers \u2013 CLI and Git Workflow \u2013 2  \n Data Science Questions and Answers \u2013 Big Data  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Data Science MCQ Questions Data Structures in C++ Data Structures in C Data Structure MCQ Questions Information Science Questions and Answers Popular Pages: Data Structures in Java Computer Science MCQ Questions Event Handling in Java with Examples Java Applet Programs Books on Engineering, Science and Technology    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Data Science MCQs \n \n \n \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Data Science MCQ Questions Data Structures in C++ Data Structures in C Data Structure MCQ Questions Information Science Questions and Answers \n   \n \n \n \n \n \n \n   Popular Pages Data Structures in Java Computer Science MCQ Questions Event Handling in Java with Examples Java Applet Programs Books on Engineering, Science and Technology \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Data Science MCQs \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.094 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-01-31 11:24:24  \n  Compression = gzip "
    },
    {
      "id": "1427",
      "question": "Which of the following framework is compatible with slidify? \n",
      "answerA": " io2015 \n",
      "answerB": " io2012 \n",
      "answerC": " d3 \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " D3 is a JavaScript library for visualizing data with HTML, SVG, and CSS.   \n "
    },
    {
      "id": "1428",
      "question": "Point out the wrong statement. \n",
      "answerA": " Slidify is created by Ramnath Vaidyanathan \n",
      "answerB": " Slidify is non customizable \n",
      "answerC": " Slidify presentation are just HTML files \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Slidify is customizable and extendable.   \n \n \n \n \n \n "
    },
    {
      "id": "1429",
      "question": "Which of the following statement will load slidify? \n",
      "answerA": " library(slidify) \n",
      "answerB": " install.library(slidify) \n",
      "answerC": " install.load(slidify) \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Devtools should be installed in advance.   \n "
    },
    {
      "id": "1430",
      "question": "Which of the following will be used to compose the content of the presentation? \n",
      "answerA": " ui.RMD \n",
      "answerB": " index.RMD \n",
      "answerC": " server.RMD \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " index.RMD is an R markdown document.   \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1431",
      "question": "Point out the correct statement. \n",
      "answerA": " Slidify allows embedded code chunks \n",
      "answerB": " Slidify presentation cannot be shared easily \n",
      "answerC": " Slidify is difficult to use \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Slidify allows mathematical formulas as well.   \n "
    },
    {
      "id": "1432",
      "question": "Which of the following statement generates a html slide deck from index.Rmd? \n",
      "answerA": " slidify(\u201cindex.Rmd\u201d) \n",
      "answerB": " lib.slidify(\u201cindex.Rmd\u201d) \n",
      "answerC": " slidifylib(\u201cindex.Rmd\u201d) \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " It is a static file, which means that you can open it in your browser locally and it should display fine.   \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n "
    },
    {
      "id": "1433",
      "question": "The first part of index.Rmd is XML code. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " The first part of index.Rmd is YAML code.   \n "
    },
    {
      "id": "1434",
      "question": "Which of the following statement will install slidify from github? \n",
      "answerA": " install_github(\u2018slidify\u2019, \u2018ramnathv\u2019) \n",
      "answerB": " install_github(\u2018slidify\u2019, \u2018r\u2019) \n",
      "answerC": " install(\u2018slidify\u2019, \u2018ramnathv\u2019) \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Slidify is not on CRAN.   \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1435",
      "question": "Which of the following element can be added to slidify? \n",
      "answerA": " Quiz \n",
      "answerB": " RCharts \n",
      "answerC": " Shiny apps \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " Many interactive elements can be added to slidify.   \n "
    },
    {
      "id": "1436",
      "question": "MathJax is a cross-browser JavaScript library that displays mathematical notation in web browsers. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " MathJax uses MathML.   \n \n advertisement \n \n \n \n \n Sanfoundry Global Education & Learning Series \u2013 Data Science. \n Here\u2019s the list of Best Books in Data Science. \n \nTo practice all areas of Data Science for aptitude tests,  Here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Data Science Questions and Answers \u2013 Shiny \u00bb  Next - Data Science Questions and Answers \u2013 googleVis   Related Posts: Apply for  Computer Science Internship \n Practice  Computer Science MCQs \n Apply for  Data Science Internship \n Check  Programming Books \n Check  Computer Science Books \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Data Science Questions and Answers \u2013 Shiny  \n Data Science Questions and Answers \u2013 Pandas \u2013 1  \n Data Science Questions and Answers \u2013 Pandas Data Structure  \n Data Science Questions and Answers \u2013 Graphics Devices \u2013 1  \n Data Science Questions and Answers \u2013 Basics of Data Science  \n Data Science Questions and Answers \u2013 Summarizing and Merging Data  \n Data Science Questions and Answers \u2013 CLI and Git Workflow \u2013 1  \n Data Science Questions and Answers \u2013 NumPy \u2013 1  \n Data Science Questions and Answers \u2013 Raw and Processed Data  \n Data Science Questions and Answers \u2013 Computational tools  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Data Science MCQ Questions C++ Algorithm Library Data Structure MCQ Questions Books on Engineering, Science and Technology Information Science Questions and Answers Popular Pages: Material Science MCQ Questions Computer Science MCQ Questions Clinical Science MCQ Questions Data Structures in C++ Data Structures in C    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Data Science MCQs \n \n \n \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Data Science MCQ Questions C++ Algorithm Library Data Structure MCQ Questions Books on Engineering, Science and Technology Information Science Questions and Answers \n   \n \n \n \n \n \n \n   Popular Pages Material Science MCQ Questions Computer Science MCQ Questions Clinical Science MCQ Questions Data Structures in C++ Data Structures in C \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Data Science MCQs \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.620 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-01-31 21:35:52  \n  Compression = gzip "
    },
    {
      "id": "1437",
      "question": "Which of the following project is used for calling R products from web? \n",
      "answerA": " OpenCPU \n",
      "answerB": " OpenDisk \n",
      "answerC": " OpenMem \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " OpenCPU is complementary to OpenCPU.   \n "
    },
    {
      "id": "1438",
      "question": "Point out the wrong statement. \n",
      "answerA": " Shiny is platform for creating interactive programs embedded in to web page \n",
      "answerB": " Shiny is invented by R folks \n",
      "answerC": " Time required to create data products using shiny is more \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " Time to create data products is less using shiny.   \n \n \n \n \n \n "
    },
    {
      "id": "1439",
      "question": "Which of the following statement will install shiny? \n",
      "answerA": " install.packages(\u201cshiny\u201d) \n",
      "answerB": " install.library(\u201cshiny\u201d) \n",
      "answerC": " install.lib(\u201cshiny\u201d) \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Shiny applications are automatically \u201clive\u201d in the same way that spreadsheets are live.   \n "
    },
    {
      "id": "1440",
      "question": "Which of the following can be done by shiny? \n",
      "answerA": " Tabbed main panels \n",
      "answerB": " Editable data tables \n",
      "answerC": " Dynamic UI \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " shiny allows users to upload files.   \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1441",
      "question": "Point out the correct statement. \n",
      "answerA": " shiny project is a directory containing at least three parts \n",
      "answerB": " shiny project is a file containing at least three parts \n",
      "answerC": " shiny project consist is a directory containing only one part \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " shiny project consist is a directory containing at least two parts.   \n "
    },
    {
      "id": "1442",
      "question": "Which of the following function can interrupt execution and can be called continuously? \n",
      "answerA": " browser() \n",
      "answerB": " browse() \n",
      "answerC": " search() \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Debugging shiny apps can be difficult.   \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n "
    },
    {
      "id": "1443",
      "question": "runApp() will run the shiny and open the browser window. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " The chart is rendered within the browser using Flash.   \n "
    },
    {
      "id": "1444",
      "question": "Which of the following function is for single checkbox widget? \n",
      "answerA": " checkboxInput \n",
      "answerB": " dateInput \n",
      "answerC": " singleboxInput \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Shiny comes with a family of pre-built widgets, each created with a transparently named R function.   \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1445",
      "question": "How many components are involved in shiny? \n",
      "answerA": " 3 \n",
      "answerB": " 4 \n",
      "answerC": " 5 \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " Shiny apps have two components:user-interface script and server script.   \n "
    },
    {
      "id": "1446",
      "question": "All of the styled elements are handled through server.R. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " All of the styled elements are handled through ui.R.   \n \n advertisement \n \n \n \n \n Sanfoundry Global Education & Learning Series \u2013 Data Science. \n Here\u2019s the list of Best Books in Data Science. \n \nTo practice all areas of Data Science for entrance exams,  Here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Data Science Questions and Answers \u2013 Model Based Prediction \u00bb  Next - Data Science Questions and Answers \u2013 Slidify   Related Posts: Apply for  Data Science Internship \n Check  Programming Books \n Check  Data Science Books \n Practice  Programming MCQs \n Practice  Computer Science MCQs \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Data Science Questions and Answers \u2013 Slidify  \n Data Science Questions and Answers \u2013 Summarizing and Merging Data  \n Data Science Questions and Answers \u2013 Graphics Devices \u2013 1  \n Data Science Questions and Answers \u2013 Basics of Data Science  \n Data Science Questions and Answers \u2013 caret \u2013 1  \n Data Science Questions and Answers \u2013 Pandas \u2013 1  \n Data Science Questions and Answers \u2013 caret \u2013 2  \n Data Science Questions and Answers \u2013 Computational tools  \n Data Science Questions and Answers \u2013 googleVis  \n Data Science Questions and Answers \u2013 Reading from Web and APIs \u2013 1  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Data Science MCQ Questions Data Structures in C++ Data Structures in C Information Science Questions and Answers Data Structures in Java Popular Pages: Data Structure MCQ Questions Computer Science MCQ Questions Material Science MCQ Questions Books on Engineering, Science and Technology C# Programs on Functions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Data Science MCQs \n \n \n \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Data Science MCQ Questions Data Structures in C++ Data Structures in C Information Science Questions and Answers Data Structures in Java \n   \n \n \n \n \n \n \n   Popular Pages Data Structure MCQ Questions Computer Science MCQ Questions Material Science MCQ Questions Books on Engineering, Science and Technology C# Programs on Functions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Data Science MCQs \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.440 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-01-31 21:35:44  \n  Compression = gzip "
    },
    {
      "id": "1447",
      "question": "Which of the following is correct about regularized regression? \n",
      "answerA": " Can help with bias trade-off \n",
      "answerB": " Cannot help with model selection \n",
      "answerC": " Cannot help with variance trade-off \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Regularized regression does not perform as well as random forest.   \n "
    },
    {
      "id": "1448",
      "question": "Point out the wrong statement. \n",
      "answerA": " Model based approach may be computationally convenient \n",
      "answerB": " Model based approach use Bayes theorem \n",
      "answerC": " Model based approach are reasonably inaccurate on real problems \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " Model based approach are reasonably accurate on real problems.   \n \n \n \n \n \n "
    },
    {
      "id": "1449",
      "question": "Which of the following methods are present in caret for regularized regression? \n",
      "answerA": " ridge \n",
      "answerB": " lasso \n",
      "answerC": " relaxo \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " In caret one can tune over the no of predictors to retain instead of defined values for penalty.   \n "
    },
    {
      "id": "1450",
      "question": "Which of the following method can be used to combine different classifiers? \n",
      "answerA": " Model stacking \n",
      "answerB": " Model combining \n",
      "answerC": " Model structuring \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Model ensembling is also used for combining different classifiers.   \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1451",
      "question": "Point out the correct statement. \n",
      "answerA": " Combining classifiers improves interpretability \n",
      "answerB": " Combining classifiers reduces accuracy \n",
      "answerC": " Combining classifiers improves accuracy \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " You can combine classifier by averaging.   \n "
    },
    {
      "id": "1452",
      "question": "Which of the following function provides unsupervised prediction? \n",
      "answerA": " cl_forecast \n",
      "answerB": " cl_nowcast \n",
      "answerC": " cl_precast \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " cl_predict function is clue package provides unsupervised prediction.   \n \n \n    \nNote: Join free Sanfoundry classes at  Telegram  or  Youtube \n \n \n \n \n \n \n \n "
    },
    {
      "id": "1453",
      "question": "Model based prediction considers relatively easy version for covariance matrix. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Model based prediction considers relatively easy version for covariance matrix.   \n "
    },
    {
      "id": "1454",
      "question": "Which of the following is used to assist the quantitative trader in the development? \n",
      "answerA": " quantmod \n",
      "answerB": " quantile \n",
      "answerC": " quantity \n",
      "answerD": " mboost ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Quandl package is similar to quantmod.   \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1455",
      "question": "Which of the following function can be used for forecasting? \n",
      "answerA": " predict \n",
      "answerB": " forecast \n",
      "answerC": " ets \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Forecasting is the process of making predictions of the future based on past and present data and analysis of trends.   \n "
    },
    {
      "id": "1456",
      "question": "Predictive analytics is same as forecasting. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Predictive analytics goes beyond forecasting.   \n \n advertisement \n \n \n \n \n Sanfoundry Global Education & Learning Series \u2013 Data Science. \n Here\u2019s the list of Best Books in Data Science. \n \nTo practice all areas of Data Science,  Here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Data Science Questions and Answers \u2013 Predicting with Regression \u00bb  Next - Data Science Questions and Answers \u2013 Shiny   Related Posts: Check  Computer Science Books \n Practice  Programming MCQs \n Apply for  Information Technology Internship \n Check  Data Science Books \n Check  Programming Books \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Data Science Questions and Answers \u2013 caret \u2013 3  \n Data Science Questions and Answers \u2013 Prediction Motivation  \n Data Science Questions and Answers \u2013 Residual Variation and Multivariate  \n Data Science Questions and Answers \u2013 Predicting with Regression  \n Data Science Questions and Answers \u2013 Binary and Count Outcomes  \n Data Science Questions and Answers \u2013 ToolBox Overview  \n Data Science Questions and Answers \u2013 Introduction to Regression Models  \n Bioinformatics Questions and Answers \u2013 Prediction of Gene Function Based on a Composite Analysis  \n Data Science Questions and Answers \u2013 Basics of Data Science  \n Data Science Questions and Answers \u2013 Pandas \u2013 1  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Data Science MCQ Questions Data Structure MCQ Questions Clinical Science MCQ Questions Data Structures in C++ Information Science Questions and Answers Popular Pages: Material Science MCQ Questions Books on Engineering, Science and Technology Computer Science MCQ Questions Data Structures in C Data Structures in Java    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Data Science MCQs \n \n \n \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Data Science MCQ Questions Data Structure MCQ Questions Clinical Science MCQ Questions Data Structures in C++ Information Science Questions and Answers \n   \n \n \n \n \n \n \n   Popular Pages Material Science MCQ Questions Books on Engineering, Science and Technology Computer Science MCQ Questions Data Structures in C Data Structures in Java \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Data Science MCQs \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.440 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-01-07 18:51:24  \n  Compression = gzip "
    },
    {
      "id": "1457",
      "question": "Predicting with trees evaluate _____________ within each group of data. \n",
      "answerA": " equality \n",
      "answerB": " homogeneity \n",
      "answerC": " heterogeneity \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Predicting with trees is easy to interpret.   \n "
    },
    {
      "id": "1458",
      "question": "Point out the wrong statement. \n",
      "answerA": " Training and testing data must be processed in different way \n",
      "answerB": " Test transformation would mostly be imperfect \n",
      "answerC": " The first goal is statistical and second is data compression in PCA \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Training and testing data must be processed in same way.   \n \n \n \n \n \n "
    },
    {
      "id": "1459",
      "question": "Which of the following method options is provided by train function for bagging? \n",
      "answerA": " bagEarth \n",
      "answerB": " treebag \n",
      "answerC": " bagFDA \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " Bagging can be done using bag function as well.   \n "
    },
    {
      "id": "1460",
      "question": "Which of the following is correct with respect to random forest? \n",
      "answerA": " Random forest are difficult to interpret but often very accurate \n",
      "answerB": " Random forest are easy to interpret but often very accurate \n",
      "answerC": " Random forest are difficult to interpret but very less accurate \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Random forest is top performing algorithm in prediction.   \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1461",
      "question": "Point out the correct statement. \n",
      "answerA": " Prediction with regression is easy to implement \n",
      "answerB": " Prediction with regression is easy to interpret \n",
      "answerC": " Prediction with regression performs well when linear model is correct \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " Prediction with regression gives poor performance in non linear settings.   \n "
    },
    {
      "id": "1462",
      "question": "Which of the following library is used for boosting generalized additive models? \n",
      "answerA": " gamBoost \n",
      "answerB": " gbm \n",
      "answerC": " ada \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Boosting can be used with any subset of classifier.   \n \n \n    \nNote: Join free Sanfoundry classes at  Telegram  or  Youtube \n \n \n \n \n \n \n \n "
    },
    {
      "id": "1463",
      "question": "The principal components are equal to left singular values if you first scale the variables. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " The principal components are equal to left singular values if you first scale the variables.   \n "
    },
    {
      "id": "1464",
      "question": "Which of the following is statistical boosting based on additive logistic regression? \n",
      "answerA": " gamBoost \n",
      "answerB": " gbm \n",
      "answerC": " ada \n",
      "answerD": " mboost ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " mboost is used for model based boosting.   \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1465",
      "question": "Which of the following is one of the largest boost subclass in boosting? \n",
      "answerA": " variance boosting \n",
      "answerB": " gradient boosting \n",
      "answerC": " mean boosting \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " R has multiple boosting libraries.   \n "
    },
    {
      "id": "1466",
      "question": "PCA is most useful for non linear type models. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " PCA is most useful for linear type models.   \n \n advertisement \n \n \n \n \n Sanfoundry Global Education & Learning Series \u2013 Data Science. \n Here\u2019s the list of Best Books in Data Science. \n \nTo practice all areas of Data Science,  Here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Data Science Questions and Answers \u2013 Cross Validation \u00bb  Next - Data Science Questions and Answers \u2013 Model Based Prediction   Related Posts: Practice  Computer Science MCQs \n Apply for  Information Technology Internship \n Practice  Programming MCQs \n Apply for  Data Science Internship \n Check  Data Science Books \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Data Science Questions and Answers \u2013 Introduction to Regression Models  \n Data Science Questions and Answers \u2013 Basics of Data Science  \n Data Science Questions and Answers \u2013 Raw and Processed Data  \n Data Science Questions and Answers \u2013 Summarizing and Merging Data  \n Data Science Questions and Answers \u2013 Cross Validation  \n Data Science Questions and Answers \u2013 caret \u2013 1  \n Data Science Questions and Answers \u2013 Introduction to Statistical Inference  \n Data Science Questions and Answers \u2013 Model Based Prediction  \n Data Science Questions and Answers \u2013 Probability and Statistics  \n Data Science Questions and Answers \u2013 Graphics Devices \u2013 1  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Data Science MCQ Questions Data Structure MCQ Questions Information Science Questions and Answers Data Structures in C Data Structures in Java Popular Pages: Data Structures in C++ Computer Science MCQ Questions Books on Engineering, Science and Technology Material Science MCQ Questions Clinical Science MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Data Science MCQs \n \n \n \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Data Science MCQ Questions Data Structure MCQ Questions Information Science Questions and Answers Data Structures in C Data Structures in Java \n   \n \n \n \n \n \n \n   Popular Pages Data Structures in C++ Computer Science MCQ Questions Books on Engineering, Science and Technology Material Science MCQ Questions Clinical Science MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Data Science MCQs \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.852 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-01-07 14:12:12  \n  Compression = gzip "
    },
    {
      "id": "1467",
      "question": "Which of the following is correct use of cross validation? \n",
      "answerA": " Selecting variables to include in a model \n",
      "answerB": " Comparing predictors \n",
      "answerC": " Selecting parameters in prediction function \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " Cross-validation is also used to pick type of prediction function to be used.   \n "
    },
    {
      "id": "1468",
      "question": "Point out the wrong combination. \n",
      "answerA": " True negative=correctly rejected \n",
      "answerB": " False negative=correctly rejected \nc) False positive=correctly identified \nd) All of the mentioned ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " False positive means incorrectly identified.   \n \n \n \n \n \n "
    },
    {
      "id": "1469",
      "question": "Which of the following is a common error measure? \n",
      "answerA": " Sensitivity \n",
      "answerB": " Median absolute deviation \n",
      "answerC": " Specificity \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " Sensitivity and specificity are statistical measures of the performance of a binary classification test, also known in statistics as classification function.   \n "
    },
    {
      "id": "1470",
      "question": "Which of the following is not a machine learning algorithm? \n",
      "answerA": " SVG \n",
      "answerB": " SVM \n",
      "answerC": " Random forest \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " SVM stands for scalable vector machine.   \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1471",
      "question": "Point out the wrong statement. \n",
      "answerA": " ROC curve stands for receiver operating characteristic \n",
      "answerB": " Foretime series, data must be in chunks \n",
      "answerC": " Random sampling must be done with replacement \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " Random sampling with replacement is the bootstrap.   \n "
    },
    {
      "id": "1472",
      "question": "Which of the following is a categorical outcome? \n",
      "answerA": " RMSE \n",
      "answerB": " RSquared \n",
      "answerC": " Accuracy \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " RMSE stands for Root Mean Squared Error.   \n \n \n    \nSubscribe Now:  Data Science Newsletter  |  Important Subjects Newsletters \n \n \n \n \n \n \n \n "
    },
    {
      "id": "1473",
      "question": "For k cross-validation, larger k value implies more bias. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " For k cross-validation, larger k value implies less bias.   \n "
    },
    {
      "id": "1474",
      "question": "Which of the following method is used for trainControl resampling? \n",
      "answerA": " repeatedcv \n",
      "answerB": " svm \n",
      "answerC": " bag32 \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " repeatedcv stands for repeated cross-validation.   \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1475",
      "question": "Which of the following can be used to create the most common graph types? \n",
      "answerA": " qplot \n",
      "answerB": " quickplot \n",
      "answerC": " plot \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " qplot() is short for a quick plot.   \n "
    },
    {
      "id": "1476",
      "question": "For k cross-validation, smaller k value implies less variance. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Larger k value implies more variance.   \n \n advertisement \n \n \n \n \n Sanfoundry Global Education & Learning Series \u2013 Data Science. \n Here\u2019s the list of Best Books in Data Science. \n \nTo practice all areas of Data Science,  Here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Data Science Questions and Answers \u2013 Prediction Motivation \u00bb  Next - Data Science Questions and Answers \u2013 Predicting with Regression   Related Posts: Practice  Computer Science MCQs \n Apply for  Computer Science Internship \n Check  Data Science Books \n Check  Computer Science Books \n Practice  Programming MCQs \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Data Science Questions and Answers \u2013 Prediction Motivation  \n Data Science Questions and Answers \u2013 Graphics Devices \u2013 1  \n Spring Questions and Answers \u2013 Bean validation and creating excel and pdf  \n RDBMS Questions and Answers \u2013 Validation Based Protocols  \n Data Science Questions and Answers \u2013 Pandas \u2013 1  \n Data Science Questions and Answers \u2013 caret \u2013 1  \n Data Science Questions and Answers \u2013 Summarizing and Merging Data  \n Data Science Questions and Answers \u2013 Introduction to Regression Models  \n Data Science Questions and Answers \u2013 Shiny  \n Data Science Questions and Answers \u2013 Basics of Data Science  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Data Science MCQ Questions Data Structure MCQ Questions Data Structures in C++ Data Structures in Java Data Structures in C Popular Pages: Information Science Questions and Answers Books on Engineering, Science and Technology Material Science MCQ Questions Computer Science MCQ Questions Clinical Science MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Data Science MCQs \n \n \n \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Data Science MCQ Questions Data Structure MCQ Questions Data Structures in C++ Data Structures in Java Data Structures in C \n   \n \n \n \n \n \n \n   Popular Pages Information Science Questions and Answers Books on Engineering, Science and Technology Material Science MCQ Questions Computer Science MCQ Questions Clinical Science MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Data Science MCQs \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.360 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-01-30 02:40:30  \n  Compression = gzip "
    },
    {
      "id": "1477",
      "question": "Which of the following is the valid component of the predictor? \n",
      "answerA": " data \n",
      "answerB": " question \n",
      "answerC": " algorithm \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " A prediction is a statement about the future.   \n "
    },
    {
      "id": "1478",
      "question": "Point out the wrong statement. \n",
      "answerA": " In Sample Error is also called generalization error \n",
      "answerB": " Out of Sample Error is the error rate you get on the new dataset \n",
      "answerC": " In Sample Error is also called resubstitution error \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Out of Sample Error is also called generalization error.   \n \n \n \n \n \n "
    },
    {
      "id": "1479",
      "question": "Which of the following is correct order of working? \n",
      "answerA": " questions->input data ->algorithms \n",
      "answerB": " questions->evaluation ->algorithms \n",
      "answerC": " evaluation->input data ->algorithms \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Evaluation is done in the last.   \n "
    },
    {
      "id": "1480",
      "question": "Which of the following shows correct relative order of importance? \n",
      "answerA": " question->features->data->algorithms \n",
      "answerB": " question->data->features->algorithms \n",
      "answerC": " algorithms->data->features->question \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Garbage in should be equal to garbage out.   \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1481",
      "question": "Point out the correct statement. \n",
      "answerA": " In Sample Error is the error rate you get on the same dataset used to model a predictor \n",
      "answerB": " Data have two parts-signal and noise \n",
      "answerC": " The goal of predictor is to find signal \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " Perfect in sample prediction can be built.   \n "
    },
    {
      "id": "1482",
      "question": "Which of the following is characteristic of best machine learning method? \n",
      "answerA": " Fast \n",
      "answerB": " Accuracy \n",
      "answerC": " Scalable \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " There is always a trade-off in prediction accuracy.   \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n "
    },
    {
      "id": "1483",
      "question": "True positive means correctly rejected. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " True positive means correctly identified.   \n "
    },
    {
      "id": "1484",
      "question": "Which of the following trade-off occurs during prediction? \n",
      "answerA": " Speed vs Accuracy \n",
      "answerB": " Simplicity vs Accuracy \n",
      "answerC": " Scalability vs Accuracy \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " Interpretability also matters during prediction.   \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1485",
      "question": "Which of the following expression is true? \n",
      "answerA": " In sample error < out sample error \n",
      "answerB": " In sample error > out sample error \n",
      "answerC": " In sample error = out sample error \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Out of sample error is given more importance.   \n "
    },
    {
      "id": "1486",
      "question": "Backtesting is a key component of effective trading-system development. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Backtesting is the process of applying a trading strategy or analytical method to historical data to see how accurately the strategy or method would have predicted actual results.   \n \n advertisement \n \n \n \n \n Sanfoundry Global Education & Learning Series \u2013 Data Science. \n Here\u2019s the list of Best Books in Data Science. \n \nTo practice all areas of Data Science,  Here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Data Science Questions and Answers \u2013 caret \u2013 3 \u00bb  Next - Data Science Questions and Answers \u2013 Cross Validation   Related Posts: Check  Data Science Books \n Apply for  Data Science Internship \n Check  Computer Science Books \n Practice  Computer Science MCQs \n Apply for  Computer Science Internship \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Data Science Questions and Answers \u2013 Model Based Prediction  \n Data Science Questions and Answers \u2013 Basics of Data Science  \n Data Science Questions and Answers \u2013 Pandas \u2013 1  \n Data Science Questions and Answers \u2013 Likelihood  \n Data Science Questions and Answers \u2013 Graphics Devices \u2013 1  \n Data Science Questions and Answers \u2013 Summarizing and Merging Data  \n Data Science Questions and Answers \u2013 Statistical Inference Concepts  \n Data Science Questions and Answers \u2013 Shiny  \n Data Science Questions and Answers \u2013 Raw and Processed Data  \n Data Science Questions and Answers \u2013 caret \u2013 1  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Data Science MCQ Questions Data Structure MCQ Questions Computer Science MCQ Questions Information Science Questions and Answers Data Structures in C++ Popular Pages: Data Structures in Java Data Structures in C C++ Algorithm Library Books on Engineering, Science and Technology Material Science MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Data Science MCQs \n \n \n \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Data Science MCQ Questions Data Structure MCQ Questions Computer Science MCQ Questions Information Science Questions and Answers Data Structures in C++ \n   \n \n \n \n \n \n \n   Popular Pages Data Structures in Java Data Structures in C C++ Algorithm Library Books on Engineering, Science and Technology Material Science MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Data Science MCQs \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.623 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-01-31 11:19:10  \n  Compression = gzip "
    },
    {
      "id": "1487",
      "question": "varImp is a wrapper around the evimp function in the _______ package. \n",
      "answerA": " numpy \n",
      "answerB": " earth \n",
      "answerC": " plot \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " The earth package is an implementation of Jerome Friedman\u2019s Multivariate Adaptive Regression Splines.   \n "
    },
    {
      "id": "1488",
      "question": "Point out the wrong statement. \n",
      "answerA": " The trapezoidal rule is used to compute the area under the ROC curve \n",
      "answerB": " For regression, the relationship between each predictor and the outcome is evaluated \n",
      "answerC": " An argument, para, is used to pick the model fitting technique \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " An argument, nonpara, is used to pick the model fitting technique.   \n \n \n \n \n \n "
    },
    {
      "id": "1489",
      "question": "Which of the following curve analysis is conducted on each predictor for classification? \n",
      "answerA": " NOC \n",
      "answerB": " ROC \n",
      "answerC": " COC \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " For two class problems, a series of cutoffs is applied to the predictor data to predict the class.   \n "
    },
    {
      "id": "1490",
      "question": "Which of the following function tracks the changes in model statistics? \n",
      "answerA": " varImp \n",
      "answerB": " varImpTrack \n",
      "answerC": " findTrack \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " GCV change value can also be tracked.   \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1491",
      "question": "Point out the correct statement. \n",
      "answerA": " The difference between the class centroids and the overall centroid is used to measure the variable influence \n",
      "answerB": " The Bagged Trees output contains variable usage statistics \n",
      "answerC": " Boosted Trees uses different approach as a single tree \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " The larger the difference between the class centroid and the overall center of the data, the larger the separation between the classes.   \n "
    },
    {
      "id": "1492",
      "question": "Which of the following model model include a backwards elimination feature selection routine? \n",
      "answerA": " MCV \n",
      "answerB": " MARS \n",
      "answerC": " MCRS \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " MARS stands for Multivariate Adaptive Regression Splines.   \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n "
    },
    {
      "id": "1493",
      "question": "The advantage of using a model-based approach is that is more closely tied to the model performance. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Model-based approach is able to incorporate the correlation structure between the predictors into the importance calculation.   \n "
    },
    {
      "id": "1494",
      "question": "Which of the following model sums the importance over each boosting iteration? \n",
      "answerA": " Boosted trees \n",
      "answerB": " Bagged trees \n",
      "answerC": " Partial least squares \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " gbm package can be used here.   \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1495",
      "question": "Which of the following argument is used to set importance values? \n",
      "answerA": " scale \n",
      "answerB": " set \n",
      "answerC": " value \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " All measures of importance are scaled to have a maximum value of "
    },
    {
      "id": "1496",
      "question": "For most classification models, each predictor will have a separate variable importance for each class. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " The exceptions are classification trees, bagged trees and boosted trees.   \n \n advertisement \n \n \n \n \n Sanfoundry Global Education & Learning Series \u2013 Data Science. \n Here\u2019s the list of Best Books in Data Science. \n \nTo practice all areas of Data Science,  Here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Data Science Questions and Answers \u2013 caret \u2013 2 \u00bb  Next - Data Science Questions and Answers \u2013 Prediction Motivation   Related Posts: Practice  Computer Science MCQs \n Apply for  Data Science Internship \n Practice  Programming MCQs \n Check  Computer Science Books \n Check  Data Science Books \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Data Science Questions and Answers \u2013 caret \u2013 1  \n Data Science Questions and Answers \u2013 caret \u2013 2  \n Data Science Questions and Answers \u2013 Binary and Count Outcomes  \n Data Science Questions and Answers \u2013 ToolBox Overview  \n Data Science Questions and Answers \u2013 Residual Variation and Multivariate  \n Data Science Questions and Answers \u2013 Introduction to Regression Models  \n Data Science Questions and Answers \u2013 Model Based Prediction  \n Data Science Questions and Answers \u2013 Predicting with Regression  \n Data Science Questions and Answers \u2013 Prediction Motivation  \n Data Science Questions and Answers \u2013 Cross Validation  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Data Science MCQ Questions Probability and Statistics MCQ Questions Data Structure MCQ Questions Information Science Questions and Answers Books on Engineering, Science and Technology Popular Pages: Material Science MCQ Questions Computer Science MCQ Questions Clinical Science MCQ Questions Data Structures in C++ Data Structures in C    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Data Science MCQs \n \n \n \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Data Science MCQ Questions Probability and Statistics MCQ Questions Data Structure MCQ Questions Information Science Questions and Answers Books on Engineering, Science and Technology \n   \n \n \n \n \n \n \n   Popular Pages Material Science MCQ Questions Computer Science MCQ Questions Clinical Science MCQ Questions Data Structures in C++ Data Structures in C \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Data Science MCQs \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.663 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-01-31 10:19:17  \n  Compression = gzip "
    },
    {
      "id": "1497",
      "question": "Which of the following function is a wrapper for different lattice plots to visualize the data? \n",
      "answerA": " levelplot \n",
      "answerB": " featurePlot \n",
      "answerC": " plotsample \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " featurePlot is used for data visualization in caret.   \n "
    },
    {
      "id": "1498",
      "question": "Point out the wrong statement. \n",
      "answerA": " In every situation, the data generating mechanism can create predictors that only have a single unique value \n",
      "answerB": " Predictors might have only a handful of unique values that occur with very low frequencies \n",
      "answerC": " The function findLinearCombos uses the QR decomposition of a matrix to enumerate sets of linear combinations \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " In some situations, the data generating mechanism can create predictors that only have a single unique value.   \n \n \n \n \n \n "
    },
    {
      "id": "1499",
      "question": "Which of the following function can be used to identify near zero-variance variables? \n",
      "answerA": " zeroVar \n",
      "answerB": " nearVar \n",
      "answerC": " nearZeroVar \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " The saveMetrics argument can be used to show the details and usually defaults to FALSE.   \n "
    },
    {
      "id": "1500",
      "question": "Which of the following function can be used to flag predictors for removal? \n",
      "answerA": " searchCorrelation \n",
      "answerB": " findCausation \n",
      "answerC": " findCorrelation \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " Some models thrive on correlated predictors.   \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1501",
      "question": "Point out the correct statement. \n",
      "answerA": " findLinearColumns will also return a vector of column positions can be removed to eliminate the linear dependencies \n",
      "answerB": " findLinearCombos will return a list that enumerates dependencies \n",
      "answerC": " the function findLinearRows can be used to generate a complete set of row variables from one factor \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " For each linear combination, it will incrementally remove columns from the matrix and test to see if the dependencies have been resolved.   \n "
    },
    {
      "id": "1502",
      "question": "Which of the following can be used to impute data sets based only on information in the training set? \n",
      "answerA": " postProcess \n",
      "answerB": " preProcess \n",
      "answerC": " process \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " This can be done with K-nearest neighbors.   \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n "
    },
    {
      "id": "1503",
      "question": "The function preProcess estimates the required parameters for each operation. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " predict.preProcess is used to apply them to specific data sets.   \n "
    },
    {
      "id": "1504",
      "question": "Which of the following can also be used to find new variables that are linear combinations of the original set with independent components? \n",
      "answerA": " ICA \n",
      "answerB": " SCA \n",
      "answerC": " PCA \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " ICA stands for independent component analysis.   \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1505",
      "question": "Which of the following function is used to generate the class distances? \n",
      "answerA": " preprocess.classDist \n",
      "answerB": " predict.classDist \n",
      "answerC": " predict.classDistance \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " By default, the distances are logged.   \n "
    },
    {
      "id": "1506",
      "question": "The preProcess class can be used for many operations on predictors. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Operations include centering and scaling.   \n \n advertisement \n \n \n \n \n Sanfoundry Global Education & Learning Series \u2013 Data Science. \n Here\u2019s the list of Best Books in Data Science. \n \nTo practice all areas of Data Science,  Here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Data Science Questions and Answers \u2013 caret \u2013 1 \u00bb  Next - Data Science Questions and Answers \u2013 caret \u2013 3   Related Posts: Practice  Computer Science MCQs \n Practice  Programming MCQs \n Apply for  Data Science Internship \n Apply for  Computer Science Internship \n Check  Computer Science Books \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Data Science Questions and Answers \u2013 caret \u2013 1  \n Data Science Questions and Answers \u2013 caret \u2013 3  \n Data Science Questions and Answers \u2013 Shiny  \n Data Science Questions and Answers \u2013 Summarizing and Merging Data  \n Data Science Questions and Answers \u2013 Graphics Devices \u2013 1  \n Data Science Questions and Answers \u2013 Cross Validation  \n Data Science Questions and Answers \u2013 Basics of Data Science  \n Data Science Questions and Answers \u2013 Model Based Prediction  \n Data Science Questions and Answers \u2013 Pandas \u2013 1  \n Data Science Questions and Answers \u2013 CLI and Git Workflow \u2013 2  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Data Science MCQ Questions Data Structures in C Data Structures in C++ Data Structure MCQ Questions C++ Algorithm Library Popular Pages: Data Structures in Java Information Science Questions and Answers Computer Science MCQ Questions Material Science MCQ Questions Books on Engineering, Science and Technology    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Data Science MCQs \n \n \n \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Data Science MCQ Questions Data Structures in C Data Structures in C++ Data Structure MCQ Questions C++ Algorithm Library \n   \n \n \n \n \n \n \n   Popular Pages Data Structures in Java Information Science Questions and Answers Computer Science MCQ Questions Material Science MCQ Questions Books on Engineering, Science and Technology \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Data Science MCQs \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.406 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-01-08 05:59:40  \n  Compression = gzip "
    },
    {
      "id": "1507",
      "question": "Which of the following can be used to generate balanced cross\u2013validation groupings from a set of data? \n",
      "answerA": " createFolds \n",
      "answerB": " createSample \n",
      "answerC": " createResample \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " createResample can be used to make simple bootstrap samples.   \n "
    },
    {
      "id": "1508",
      "question": "Point out the wrong statement. \n",
      "answerA": " Simple random sampling of time series is probably the best way to resample times series data. \n",
      "answerB": " Three parameters are used for time series splitting \n",
      "answerC": " Horizon parameter is the number of consecutive values in test set sample \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Simple random sampling of time series is probably not the best way to resample times series data.   \n \n \n \n \n \n "
    },
    {
      "id": "1509",
      "question": "Which of the following function can be used to maximize the minimum dissimilarities? \n",
      "answerA": " sumDiss \n",
      "answerB": " minDiss \n",
      "answerC": " avgDiss \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " sumDiss can be used to maximize the total dissimilarities.   \n "
    },
    {
      "id": "1510",
      "question": "Which of the following function can create the indices for time series type of splitting? \n",
      "answerA": " newTimeSlices \n",
      "answerB": " createTimeSlices \n",
      "answerC": " binTimeSlices \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Rolling forecasting origin techniques are associated with time series type of splitting.   \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1511",
      "question": "Point out the correct statement. \n",
      "answerA": " Asymptotics are used for inference usually \n",
      "answerB": " Caret includes several functions to pre-process the predictor data \n",
      "answerC": " The function dummyVars can be used to generate a complete set of dummy variables from one or more factors \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " The function dummyVars takes a formula and a data set and outputs an object that can be used to create the dummy variables using the predict method.   \n "
    },
    {
      "id": "1512",
      "question": "Which of the following can be used to create sub\u2013samples using a maximum dissimilarity approach? \n",
      "answerA": " minDissim \n",
      "answerB": " maxDissim \n",
      "answerC": " inmaxDissim \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Splitting is based on the predictors.   \n \n \n    \nNote: Join free Sanfoundry classes at  Telegram  or  Youtube \n \n \n \n \n \n \n \n "
    },
    {
      "id": "1513",
      "question": "caret does not use the proxy package. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " caret uses the proxy package.   \n "
    },
    {
      "id": "1514",
      "question": "Which of the following function can be used to create balanced splits of the data? \n",
      "answerA": " newDataPartition \n",
      "answerB": " createDataPartition \n",
      "answerC": " renameDataPartition \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " If the y argument to this function is a factor, the random sampling occurs within each class and should preserve the overall class distribution of the data.   \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1515",
      "question": "Which of the following package tools are present in caret? \n",
      "answerA": " pre-processing \n",
      "answerB": " feature selection \n",
      "answerC": " model tuning \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " There are many different modeling functions in R.   \n "
    },
    {
      "id": "1516",
      "question": "caret stands for classification and regression training. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " The caret package is a set of functions that attempt to streamline the process for creating predictive models.   \n \n advertisement \n \n \n \n \n Sanfoundry Global Education & Learning Series \u2013 Data Science. \n Here\u2019s the list of Best Books in Data Science. \n \nTo practice all areas of Data Science,  Here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Data Science Questions and Answers \u2013 Binary and Count Outcomes \u00bb  Next - Data Science Questions and Answers \u2013 caret \u2013 2   Related Posts: Check  Programming Books \n Check  Data Science Books \n Practice  Programming MCQs \n Apply for  Data Science Internship \n Check  Computer Science Books \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Data Science Questions and Answers \u2013 caret \u2013 2  \n Data Science Questions and Answers \u2013 caret \u2013 3  \n Data Science Questions and Answers \u2013 Cross Validation  \n Data Science Questions and Answers \u2013 Summarizing and Merging Data  \n Data Science Questions and Answers \u2013 Introduction to Statistical Inference  \n Data Science Questions and Answers \u2013 Graphics Devices \u2013 1  \n Data Science Questions and Answers \u2013 Probability and Statistics  \n Data Science Questions and Answers \u2013 Predicting with Regression  \n Data Science Questions and Answers \u2013 Common Distributions  \n Data Science Questions and Answers \u2013 Basics of Data Science  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Data Science MCQ Questions Data Structure MCQ Questions Information Science Questions and Answers Data Structures in C++ Data Structures in Java Popular Pages: Probability and Statistics MCQ Questions Data Structures in C Computer Science MCQ Questions Books on Engineering, Science and Technology C# String Programs    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Data Science MCQs \n \n \n \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Data Science MCQ Questions Data Structure MCQ Questions Information Science Questions and Answers Data Structures in C++ Data Structures in Java \n   \n \n \n \n \n \n \n   Popular Pages Probability and Statistics MCQ Questions Data Structures in C Computer Science MCQ Questions Books on Engineering, Science and Technology C# String Programs \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Data Science MCQs \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.467 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-01-31 14:34:38  \n  Compression = gzip "
    },
    {
      "id": "1517",
      "question": "How many components are present in generalized linear models? \n",
      "answerA": " 2 \n",
      "answerB": " 4 \n",
      "answerC": " 6 \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " Generalized linear models involve three components.   \n "
    },
    {
      "id": "1518",
      "question": "Point out the wrong statement. \n",
      "answerA": " Additive response models don\u2019t make much sense if the response is discrete, or strictly positive \n",
      "answerB": " Transformations are often easy to interpret in linear model \n",
      "answerC": " Regression models are used to predict one variable from one or more other variables \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Transformations are often hard to interpret in linear model.   \n \n \n \n \n \n "
    },
    {
      "id": "1519",
      "question": "Which of the following component is involved in generalized linear models? \n",
      "answerA": " An exponential family model for the response \n",
      "answerB": " A systematic component via a linear predictor \n",
      "answerC": " A link function that connects the means of the response to the linear predictor \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " GLM is a flexible generalization of ordinary linear regression that allows for response variables that have error distribution models other than a normal distribution.   \n "
    },
    {
      "id": "1520",
      "question": "Collection of exchangeable binary outcomes for the same covariate data are called _______ outcomes. \n",
      "answerA": " random \n",
      "answerB": " direct \n",
      "answerC": " binomial \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " The multivariate regression model for binary outcomes gives odds ratios, not risk ratios.   \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1521",
      "question": "Point out the wrong statement. \n",
      "answerA": " Asymptotics are used for inference usually \n",
      "answerB": " Adding squared terms makes it continuously differentiable at the knot points \n",
      "answerC": " Adding squared terms makes it twice continuously differentiable at the knot points \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " Adding cubic terms makes it twice continuously differentiable at the knot points.   \n "
    },
    {
      "id": "1522",
      "question": "Which of the following is example use of Poisson distribution? \n",
      "answerA": " Analyzing contingency table data \n",
      "answerB": " Modeling web traffic hits \n",
      "answerC": " Incidence rates \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " The Poisson distribution is a useful model for counts and rates.   \n \n \n    \nNote: Join free Sanfoundry classes at  Telegram  or  Youtube \n \n \n \n \n \n \n \n "
    },
    {
      "id": "1523",
      "question": "Principal components or factor analytic models on covariates are often useful for reducing complex covariate spaces. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " The space of models explodes quickly as you add interactions and polynomial terms.   \n "
    },
    {
      "id": "1524",
      "question": "How many outcomes are possible with bernoulli trial? \n",
      "answerA": " 2 \n",
      "answerB": " 3 \n",
      "answerC": " 4 \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Bernoulli trial is a random experiment with exactly two possible outcomes.   \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1525",
      "question": "Which of the following analysis is a statistical process for estimating the relationships among variables? \n",
      "answerA": " Causal \n",
      "answerB": " Regression \n",
      "answerC": " Multivariate \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Regression models provide the scientist with a powerful tool, allowing predictions about past, present, or future events to be made with information about past or present events.   \n "
    },
    {
      "id": "1526",
      "question": "Linear models are the most useful applied statistical technique. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Linear model do have limitations.   \n \n advertisement \n \n \n \n \n Sanfoundry Global Education & Learning Series \u2013 Data Science. \n Here\u2019s the list of Best Books in Data Science. \n \nTo practice all areas of Data Science,  Here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Data Science Questions and Answers \u2013 Residual Variation and Multivariate \u00bb  Next - Data Science Questions and Answers \u2013 caret \u2013 1   Related Posts: Check  Programming Books \n Check  Computer Science Books \n Practice  Computer Science MCQs \n Apply for  Computer Science Internship \n Practice  Programming MCQs \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Data Science Questions and Answers \u2013 Predicting with Regression  \n Data Science Questions and Answers \u2013 Residual Variation and Multivariate  \n Data Science Questions and Answers \u2013 Introduction to Regression Models  \n Data Science MCQ (Multiple Choice Questions)  \n Data Science Questions and Answers \u2013 caret \u2013 3  \n Data Science Questions and Answers \u2013 Model Based Prediction  \n Data Science Questions and Answers \u2013 Summarizing and Merging Data  \n Data Science Questions and Answers \u2013 caret \u2013 2  \n Data Science Questions and Answers \u2013 caret \u2013 1  \n Data Science Questions and Answers \u2013 Pandas \u2013 1  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Data Science MCQ Questions Data Structures in C Data Structures in Java Data Structures in C++ Data Structure MCQ Questions Popular Pages: Material Science MCQ Questions Probability and Statistics MCQ Questions R Programming MCQ Questions Searching and Sorting Algorithms in C Information Science Questions and Answers    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Data Science MCQs \n \n \n \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Data Science MCQ Questions Data Structures in C Data Structures in Java Data Structures in C++ Data Structure MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Material Science MCQ Questions Probability and Statistics MCQ Questions R Programming MCQ Questions Searching and Sorting Algorithms in C Information Science Questions and Answers \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Data Science MCQs \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.745 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-01-31 10:30:56  \n  Compression = gzip "
    },
    {
      "id": "1527",
      "question": "Which of the following is the correct formula for total variation? \n",
      "answerA": " Total Variation = Residual Variation \u2013 Regression Variation \n",
      "answerB": " Total Variation = Residual Variation + Regression Variation \n",
      "answerC": " Total Variation = Residual Variation * Regression Variation \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " The complementary part of the total variation is called unexplained or residual.   \n "
    },
    {
      "id": "1528",
      "question": "Point out the correct statement. \n",
      "answerA": " A standard error is needed to create a prediction interval \n",
      "answerB": " The prediction interval must incorporate the variability in the data around the line \n",
      "answerC": " Investors use the residual variance to measure the accuracy of their predictions on the value of an asset \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " In statistics, explained variation measures the proportion to which a mathematical model accounts for the variation of a given data set.   \n \n \n \n \n \n "
    },
    {
      "id": "1529",
      "question": "Which of the following things can be accomplished with linear model? \n",
      "answerA": " Flexibly fit complicated functions \n",
      "answerB": " Uncover complex multivariate relationships \n",
      "answerC": " Build accurate prediction models \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " Linear models are the single most important applied statistical and machine learning technique.   \n "
    },
    {
      "id": "1530",
      "question": "Which of the following statement is incorrect with respect to outliers? \n",
      "answerA": " Outliers can have varying degrees of influence \n",
      "answerB": " Outliers can be the result of spurious or real processes \n",
      "answerC": " Outliers cannot conform to the regression relationship \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " Outliers can conform to the regression relationship.   \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1531",
      "question": "Point out the wrong statement. \n",
      "answerA": " The fraction of variance unexplained is an established concept in the context of linear regression \n",
      "answerB": " \u201cExplained variance\u201d is routinely used in principal component analysis \n",
      "answerC": " The general linear model extends simple linear regression (SLR) by adding terms linearly into the model \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " Linearity refers to a mathematical relationship or function that can be graphically represented as a straight line.   \n "
    },
    {
      "id": "1532",
      "question": "Which of the following can be useful for diagnosing data entry errors? \n",
      "answerA": " hat values \n",
      "answerB": " dffit \n",
      "answerC": " resid \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " resid returns the ordinary residuals.   \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n "
    },
    {
      "id": "1533",
      "question": "Multivariate regression estimates are exactly those having removed the linear relationship of the other variables from both the regressor and response. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Multivariate Data Analysis refers to any statistical technique used to analyze data that arises from more than one variable.   \n "
    },
    {
      "id": "1534",
      "question": "Residual ______ plots investigate normality of the errors. \n",
      "answerA": " RR \n",
      "answerB": " PP \n",
      "answerC": " QQ \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " Patterns in your residual plots generally indicate some poor aspect of model fit.   \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1535",
      "question": "Which of the following show residuals divided by their standard deviations? \n",
      "answerA": " rstudent \n",
      "answerB": " cooks.distance \n",
      "answerC": " rstandard \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " rstandard stands for standardized residuals.   \n "
    },
    {
      "id": "1536",
      "question": "The least squares estimate for the coefficient of a multivariate regression model is exactly regression through the origin with the linear relationships. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Multivariate regression adjusts a coefficient for the linear impact of the other variables.   \n \n advertisement \n \n \n \n \n Sanfoundry Global Education & Learning Series \u2013 Data Science. \n Here\u2019s the list of Best Books in Data Science. \n \nTo practice all areas of Data Science,  Here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Data Science Questions and Answers \u2013 Introduction to Regression Models \u00bb  Next - Data Science Questions and Answers \u2013 Binary and Count Outcomes   Related Posts: Practice  Computer Science MCQs \n Apply for  Computer Science Internship \n Check  Programming Books \n Apply for  Data Science Internship \n Check  Data Science Books \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Data Science Questions and Answers \u2013 Predicting with Regression  \n Data Science Questions and Answers \u2013 Model Based Prediction  \n Data Science MCQ (Multiple Choice Questions)  \n Data Science Questions and Answers \u2013 Pandas \u2013 1  \n Data Science Questions and Answers \u2013 Graphics Devices \u2013 1  \n Data Science Questions and Answers \u2013 Prediction Motivation  \n Data Science Questions and Answers \u2013 Summarizing and Merging Data  \n Data Science Questions and Answers \u2013 caret \u2013 3  \n Data Science Questions and Answers \u2013 Introduction to Regression Models  \n Data Science Questions and Answers \u2013 caret \u2013 1  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Data Science MCQ Questions Data Structures in C Probability and Statistics MCQ Questions Data Structure MCQ Questions Information Science Questions and Answers Popular Pages: Data Structures in Java Data Structures in C++ Computer Science MCQ Questions Books on Engineering, Science and Technology R Programming MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Data Science MCQs \n \n \n \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Data Science MCQ Questions Data Structures in C Probability and Statistics MCQ Questions Data Structure MCQ Questions Information Science Questions and Answers \n   \n \n \n \n \n \n \n   Popular Pages Data Structures in Java Data Structures in C++ Computer Science MCQ Questions Books on Engineering, Science and Technology R Programming MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Data Science MCQs \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.155 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-01-31 09:50:06  \n  Compression = gzip "
    },
    {
      "id": "1537",
      "question": "Which of the following function can be replaced with the question mark in the below figure? \n \n",
      "answerA": " boxplot \n",
      "answerB": " lplot \n",
      "answerC": " levelplot \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " levelplot is used plotting \u201cimage\u201d.   \n "
    },
    {
      "id": "1538",
      "question": "Point out the correct statement. \n",
      "answerA": " The mean is a measure of central tendency of the data \n",
      "answerB": " Empirical mean is related to \u201ccentering\u201d the random variables \n",
      "answerC": " The empirical standard deviation is a measure of spread \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " The process of centering and scaling the data is called \u201cnormalizing\u201d the data.   \n \n \n \n \n \n "
    },
    {
      "id": "1539",
      "question": "Which of the following implies no relationship with respect to correlation? \n",
      "answerA": " Cor(X, Y) = 1 \n",
      "answerB": " Cor(X, Y) = 0 \n",
      "answerC": " Cor(X, Y) = 2 \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Correlation is a statistical technique that can show whether and how strongly pairs of variables are related.   \n "
    },
    {
      "id": "1540",
      "question": "Normalized data are centered at ___ and have units equal to standard deviations of the original data. \n",
      "answerA": " 0 \n",
      "answerB": " 5 \n",
      "answerC": " 1 \n",
      "answerD": "10",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " In statistics and applications of statistics, normalization can have a range of meanings.   \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1541",
      "question": "Point out the wrong statement. \n",
      "answerA": " Regression through the origin yields an equivalent slope if you center the data first \n",
      "answerB": " Normalizing variables results in the slope being the correlation \n",
      "answerC": " Least squares is not an estimation tool \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " Least squares is an estimation tool.   \n "
    },
    {
      "id": "1542",
      "question": "Which of the following is correct with respect to residuals? \n",
      "answerA": " Positive residuals are above the line, negative residuals are below \n",
      "answerB": " Positive residuals are below the line, negative residuals are above \n",
      "answerC": " Positive residuals and negative residuals are below the line \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Residuals can be thought of as the outcome with the linear association of the predictor removed.   \n \n \n    \nNote: Join free Sanfoundry classes at  Telegram  or  Youtube \n \n \n \n \n \n \n \n "
    },
    {
      "id": "1543",
      "question": "Minimizing the likelihood is the same as maximizing -2 log likelihood. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Maximizing the likelihood is the same as minimizing 2 log likelihood.   \n "
    },
    {
      "id": "1544",
      "question": "Which of the following refers to the circumstance in which the variability of a variable is unequal across the range of values of a second variable that predicts it? \n",
      "answerA": " Heterogeneity \n",
      "answerB": " Heteroskedasticity \n",
      "answerC": " Heteroelasticty \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Heteroskedasticity has serious consequences for the OLS estimator.   \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1545",
      "question": "Which of the following outcome is odd man out in the below figure? \n \n",
      "answerA": " R Squared \n",
      "answerB": " Kappa \n",
      "answerC": " RMSE \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Kappa is categorical outcome.   \n "
    },
    {
      "id": "1546",
      "question": "Residuals are useful for investigating best model fit. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Residuals are useful for investigating poor model fit.   \n \n advertisement \n \n \n \n \n Sanfoundry Global Education & Learning Series \u2013 Data Science. \n Here\u2019s the list of Best Books in Data Science. \n \nTo practice all areas of Data Science,  Here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Data Science Questions and Answers \u2013 Statistical Inference Concepts \u00bb  Next - Data Science Questions and Answers \u2013 Residual Variation and Multivariate   Related Posts: Check  Data Science Books \n Apply for  Data Science Internship \n Practice  Programming MCQs \n Check  Computer Science Books \n Practice  Computer Science MCQs \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Data Science Questions and Answers \u2013 Probability and Statistics  \n Data Science Questions and Answers \u2013 Predicting with Regression  \n Data Science Questions and Answers \u2013 caret \u2013 2  \n Data Science Questions and Answers \u2013 Common Distributions  \n Data Science Questions and Answers \u2013 Summarizing and Merging Data  \n Data Science Questions and Answers \u2013 Introduction to Statistical Inference  \n Data Science Questions and Answers \u2013 Introduction to Reproducible Research  \n Data Science Questions and Answers \u2013 Basics of Data Science  \n Data Science Questions and Answers \u2013 Pandas \u2013 1  \n Data Science Questions and Answers \u2013 Residual Variation and Multivariate  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Data Science MCQ Questions Information Science Questions and Answers Computer Science MCQ Questions Books on Engineering, Science and Technology Data Structure MCQ Questions Popular Pages: Probability and Statistics MCQ Questions Data Structures in C Data Structures in Java Data Structures in C++ Clinical Science MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Data Science MCQs \n \n \n \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Data Science MCQ Questions Information Science Questions and Answers Computer Science MCQ Questions Books on Engineering, Science and Technology Data Structure MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Probability and Statistics MCQ Questions Data Structures in C Data Structures in Java Data Structures in C++ Clinical Science MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Data Science MCQs \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.505 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-01-31 14:43:40  \n  Compression = gzip "
    },
    {
      "id": "1547",
      "question": "Which of the following testing is concerned with making decisions using data? \n",
      "answerA": " Probability \n",
      "answerB": " Hypothesis \n",
      "answerC": " Causal \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " The null hypothesis is assumed true and statistical evidence is required to reject it in favor of a research or alternative hypothesis.   \n "
    },
    {
      "id": "1548",
      "question": "Point out the correct statement. \n",
      "answerA": " Power of a one sided test is lower than the power of the associated two sided test \n",
      "answerB": " Power of a two sided test is greater than the power of the associated one sided test \n",
      "answerC": " Hypothesis testing is less commonly used \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " Power of a one sided test is greater than the power of the associated two sided test.   \n \n \n \n \n \n "
    },
    {
      "id": "1549",
      "question": "Which of the following value is the most common measure of \u201cstatistical significance\u201d? \n",
      "answerA": " P \n",
      "answerB": " A \n",
      "answerC": " L \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " The P-value is the probability under the null hypothesis of obtaining evidence as extreme or more extreme than would be observed by chance alone.   \n "
    },
    {
      "id": "1550",
      "question": "What is the purpose of multiple testing in statistical inference? \n",
      "answerA": " Minimize errors \n",
      "answerB": " Minimize false positives \n",
      "answerC": " Minimize false negatives \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " A false positive is an error in some evaluation process in which a condition tested for is mistakenly found to have been detected.   \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1551",
      "question": "Point out the wrong statement with respect to FDR. \n",
      "answerA": " FDR is difficult to calculate \n",
      "answerB": " FDR is relatively less conservative \n",
      "answerC": " FDR allows for more false positives \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " FDR stands for false discovery rate.   \n "
    },
    {
      "id": "1552",
      "question": "Which of the following is the oldest multiple testing correction? \n",
      "answerA": " Bonferroni correction \n",
      "answerB": " Bernoulli correction \n",
      "answerC": " Likelihood correction \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Bonferroni correction is easy to calculate.   \n \n \n    \nSubscribe Now:  Data Science Newsletter  |  Important Subjects Newsletters \n \n \n \n \n \n \n \n "
    },
    {
      "id": "1553",
      "question": "The pooled estimator is a mixture of the group variances, placing greater weight on whichever has a larger sample size. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " If the sample sizes are the same the pooled variance estimate is the average of the group variances.   \n "
    },
    {
      "id": "1554",
      "question": "Which of the following tool is used for constructing confidence intervals and calculating standard errors for difficult statistics? \n",
      "answerA": " baggyer \n",
      "answerB": " bootstrap \n",
      "answerC": " jacknife \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " The bootstrap procedure follows from the so called bootstrap principle.   \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1555",
      "question": "Which of the following tool is used for estimating standard errors and the bias of estimators? \n",
      "answerA": " knitr \n",
      "answerB": " jackknife \n",
      "answerC": " ggplot2 \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " jackknife involves resampling data.   \n "
    },
    {
      "id": "1556",
      "question": "Power is the probability of rejecting the null hypothesis when it is true. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Power is the probability of rejecting the null hypothesis when it is false.   \n \n advertisement \n \n \n \n \n Sanfoundry Global Education & Learning Series \u2013 Data Science. \n Here\u2019s the list of Best Books in Data Science. \n \nTo practice basic questions on all areas of Data Science,  Here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Data Science Questions and Answers \u2013 Likelihood \u00bb  Next - Data Science Questions and Answers \u2013 Introduction to Regression Models   Related Posts: Apply for  Computer Science Internship \n Apply for  Data Science Internship \n Practice  Computer Science MCQs \n Check  Programming Books \n Check  Computer Science Books \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Data Science Questions and Answers \u2013 Introduction to Statistical Inference  \n Data Science Questions and Answers \u2013 Literate Statistical Programming \u2013 1  \n Data Science Questions and Answers \u2013 Literate Statistical Programming \u2013 2  \n Data Science Questions and Answers \u2013 Predicting with Regression  \n Data Science Questions and Answers \u2013 Introduction to Reproducible Research  \n Data Science Questions and Answers \u2013 Graphics Devices \u2013 2  \n Data Science Questions and Answers \u2013 Graphics Devices \u2013 1  \n Statistical Quality Control Questions and Answers \u2013 Control Charting Techniques \u2013 Statistical Process Control for Short Production Runs \u2013 1  \n Data Science Questions and Answers \u2013 Basics of Data Science  \n Data Science Questions and Answers \u2013 Likelihood  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Data Science MCQ Questions Statistical Quality Control MCQ Questions Probability and Statistics MCQ Questions Information Science Questions and Answers Computer Science MCQ Questions Popular Pages: Books on Engineering, Science and Technology Clinical Science MCQ Questions Material Science MCQ Questions Data Structure MCQ Questions Data Structures in C++    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Data Science MCQs \n \n \n \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Data Science MCQ Questions Statistical Quality Control MCQ Questions Probability and Statistics MCQ Questions Information Science Questions and Answers Computer Science MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Books on Engineering, Science and Technology Clinical Science MCQ Questions Material Science MCQ Questions Data Structure MCQ Questions Data Structures in C++ \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Data Science MCQs \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.561 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-01-31 15:10:53  \n  Compression = gzip "
    },
    {
      "id": "1557",
      "question": "The _________ of the Chi-squared distribution is twice the degrees of freedom. \n",
      "answerA": " variance \n",
      "answerB": " standard deviation \n",
      "answerC": " mode \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " The mean of the Chi-squared is its degrees of freedom.   \n "
    },
    {
      "id": "1558",
      "question": "Point out the correct statement. \n",
      "answerA": " Asymptotics are incredibly useful for simple statistical inference and approximations \n",
      "answerB": " Asymptotics often lead to nice understanding of procedures \n",
      "answerC": " An estimator is consistent if it converges to what you want to estimate \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " Consistency is neither necessary nor sufficient for one estimator to be better than another.   \n \n \n \n \n \n "
    },
    {
      "id": "1559",
      "question": "Gosset\u2019s distribution is invented by which of the following scientist? \n",
      "answerA": " William Gosset \n",
      "answerB": " William Gosling \n",
      "answerC": " Gosling Gosset \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Gosset\u2019s distribution is indexed by a degrees of freedom.   \n "
    },
    {
      "id": "1560",
      "question": "The _________ of a collection of data is the joint density evaluated as a function of the parameters with the data fixed. \n",
      "answerA": " probability \n",
      "answerB": " likelihood \n",
      "answerC": " poisson distribution \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Likelihood analysis of data uses the likelihood to perform inference regarding the unknown parameter.   \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1561",
      "question": "Point out the wrong statement. \n",
      "answerA": " Asymptotics generally give assurances about finite sample performance \n",
      "answerB": " The sample variance and the sample standard deviation are consistent as well \n",
      "answerC": " The sample mean and the sample variance are unbiased as well \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " The kinds of asymptotics that do are orders of magnitude more difficult to work with.   \n "
    },
    {
      "id": "1562",
      "question": "Which of the following is a property of likelihood? \n",
      "answerA": " Ratios of likelihood values measure the relative evidence of one value of the unknown parameter to another \n",
      "answerB": " Given a statistical model and observed data, all of the relevant information contained in the data regarding the unknown parameter is contained in the likelihood \n",
      "answerC": " The Resultant likelihood is multiplication of individual likelihood \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " Likelihood is the hypothetical probability that an event that has already occurred would yield a specific outcome.   \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n "
    },
    {
      "id": "1563",
      "question": "CLT is mostly useful as an approximation. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " The CLT applies in an endless variety of settings.   \n "
    },
    {
      "id": "1564",
      "question": "The beta distribution is the default prior for parameters between ____________ \n",
      "answerA": " 0 and 10 \n",
      "answerB": " 1 and 2 \n",
      "answerC": " 0 and 1 \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " Bayesian statistics posits a prior on the parameter of interest.   \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1565",
      "question": "Which of the following mean is a mixture of the MLE and the prior mean? \n",
      "answerA": " interior \n",
      "answerB": " exterior \n",
      "answerC": " posterior \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " MLE stands for maximum likelihood.   \n "
    },
    {
      "id": "1566",
      "question": "Usually replacing the standard error by its estimated value does change the CLT. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Usually replacing the standard error by its estimated value doesn\u2019t change the CLT.   \n \n advertisement \n \n \n \n \n Sanfoundry Global Education & Learning Series \u2013 Data Science. \n Here\u2019s the list of Best Books in Data Science. \n \nTo practice all areas of Data Science,  Here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Data Science Questions and Answers \u2013 Common Distributions \u00bb  Next - Data Science Questions and Answers \u2013 Statistical Inference Concepts   Related Posts: Apply for  Data Science Internship \n Practice  Computer Science MCQs \n Check  Programming Books \n Check  Data Science Books \n Practice  Programming MCQs \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Data Science Questions and Answers \u2013 Common Distributions  \n Data Science Questions and Answers \u2013 Introduction to Statistical Inference  \n Data Science Questions and Answers \u2013 caret \u2013 1  \n Data Science Questions and Answers \u2013 Statistical Inference Concepts  \n Data Science Questions and Answers \u2013 Binary and Count Outcomes  \n Data Science Questions and Answers \u2013 Introduction to Regression Models  \n Data Science Questions and Answers \u2013 Probability and Statistics  \n Data Science Questions and Answers \u2013 Summarizing and Merging Data  \n Data Science Questions and Answers \u2013 Graphics Devices \u2013 1  \n Data Science MCQ (Multiple Choice Questions)  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Data Science MCQ Questions Information Science Questions and Answers Data Structures in C Data Structures in Java Data Structures in C++ Popular Pages: Computer Science MCQ Questions Data Structure MCQ Questions Books on Engineering, Science and Technology Material Science MCQ Questions Clinical Science MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Data Science MCQs \n \n \n \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Data Science MCQ Questions Information Science Questions and Answers Data Structures in C Data Structures in Java Data Structures in C++ \n   \n \n \n \n \n \n \n   Popular Pages Computer Science MCQ Questions Data Structure MCQ Questions Books on Engineering, Science and Technology Material Science MCQ Questions Clinical Science MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Data Science MCQs \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.313 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-01-29 20:23:23  \n  Compression = gzip "
    },
    {
      "id": "1567",
      "question": "Which of the following goal is incorrectly represented in the below figure? \n \n",
      "answerA": " Relationship between variables \n",
      "answerB": " Distribution of variables \n",
      "answerC": " Inference about relationships \n",
      "answerD": " Causal ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " Causal is not directly related to goal of statistical modelling.   \n "
    },
    {
      "id": "1568",
      "question": "Point out the correct statement. \n",
      "answerA": " The exponent of a normally distributed random variables follows what is called the log-normal distribution \n",
      "answerB": " Sums of normally distributed random variables are again normally distributed even if the variables are dependent \n",
      "answerC": " The square of a standard normal random variable follows what is called chi-squared distribution \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " Many random variables, properly normalized, limit to a normal distribution.   \n \n \n \n \n \n "
    },
    {
      "id": "1569",
      "question": "Which of the following is incorrect with respect to use of Poisson distribution? \n",
      "answerA": " Modeling event/time data \n",
      "answerB": " Modeling bounded count data \n",
      "answerC": " Modeling contingency tables \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Poisson distribution is used for modeling unbounded count data.   \n "
    },
    {
      "id": "1570",
      "question": "__________ random variables are used to model rates. \n",
      "answerA": " Empirical \n",
      "answerB": " Binomial \n",
      "answerC": " Poisson \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " Poisson distribution is used to model counts.   \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1571",
      "question": "Point out the wrong statement. \n",
      "answerA": " The normal distribution is asymmetric and peaked about its mode \n",
      "answerB": " A constant times a normally distributed random variable is also normally distributed \n",
      "answerC": " Sample means of normally distributed random variables are again normally distributed \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " The normal distribution is symmetric and peaked about its mean.   \n "
    },
    {
      "id": "1572",
      "question": "Which of the following form the basis for frequency interpretation of probabilities? \n",
      "answerA": " Asymptotics \n",
      "answerB": " Symptotics \n",
      "answerC": " Asymmetry \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Asymptotics is the term for the behavior of statistics as the sample size.   \n \n \n    \nNote: Join free Sanfoundry classes at  Telegram  or  Youtube \n \n \n \n \n \n \n \n "
    },
    {
      "id": "1573",
      "question": "\n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " The Bernoulli distribution arises as the result of a binary outcome.   \n "
    },
    {
      "id": "1574",
      "question": "The _________ basically states that the sample mean is consistent. \n",
      "answerA": " LAN \n",
      "answerB": " LLN \n",
      "answerC": " LWN \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " LLN stands for law of large numbers.   \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1575",
      "question": "Which of the following theorem states that the distribution of averages of iid variables, properly normalized, becomes that of a standard normal as the sample size increases? \n",
      "answerA": " Central Limit Theorem \n",
      "answerB": " Central Mean Theorem \n",
      "answerC": " Centroid Limit Theorem \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " The Central Limit Theorem (CLT) is one of the most important theorems in statistics.   \n "
    },
    {
      "id": "1576",
      "question": "The binomial random variables are obtained as the sum of iid Gaussian trials. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " The binomial random variables are obtained as the sum of iid Bernoulli trials.   \n \n advertisement \n \n \n \n \n Sanfoundry Global Education & Learning Series \u2013 Data Science. \n Here\u2019s the list of Best Books in Data Science. \n \nTo practice all areas of Data Science,  Here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Data Science Questions and Answers \u2013 Probability and Statistics \u00bb  Next - Data Science Questions and Answers \u2013 Likelihood   Related Posts: Practice  Programming MCQs \n Check  Programming Books \n Apply for  Information Technology Internship \n Apply for  Computer Science Internship \n Check  Data Science Books \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Data Science Questions and Answers \u2013 Binary and Count Outcomes  \n Data Science Questions and Answers \u2013 Probability and Statistics  \n Data Science Questions and Answers \u2013 Summarizing and Merging Data  \n Data Science Questions and Answers \u2013 Types of Questions \u2013 2  \n Probability and Statistics Questions and Answers \u2013 Probability Distributions \u2013 1  \n Statistical Quality Control Questions and Answers \u2013 Modeling Process Quality \u2013 Discrete Distributions \u2013 2  \n Data Science Questions and Answers \u2013 caret \u2013 1  \n Data Science Questions and Answers \u2013 Introduction to Statistical Inference  \n Data Science Questions and Answers \u2013 Basics of Data Science  \n Data Science Questions and Answers \u2013 Analysis and Experimental Design  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Data Science MCQ Questions Probability and Statistics MCQ Questions Data Structure MCQ Questions Probability MCQ Questions Data Structures in C Popular Pages: Data Structures in Java Data Structures in C++ MATLAB MCQ Questions Information Science Questions and Answers Computer Science MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Data Science MCQs \n \n \n \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Data Science MCQ Questions Probability and Statistics MCQ Questions Data Structure MCQ Questions Probability MCQ Questions Data Structures in C \n   \n \n \n \n \n \n \n   Popular Pages Data Structures in Java Data Structures in C++ MATLAB MCQ Questions Information Science Questions and Answers Computer Science MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Data Science MCQs \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.394 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-01-07 18:24:16  \n  Compression = gzip "
    },
    {
      "id": "1577",
      "question": "The expected value or _______ of a random variable is the center of its distribution. \n",
      "answerA": " mode \n",
      "answerB": " median \n",
      "answerC": " mean \n",
      "answerD": " bayesian inference ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " A probability model connects the data to the population using assumptions.   \n "
    },
    {
      "id": "1578",
      "question": "Point out the correct statement. \n",
      "answerA": " Some cumulative distribution function F is non-decreasing and right-continuous \n",
      "answerB": " Every cumulative distribution function F is decreasing and right-continuous \n",
      "answerC": " Every cumulative distribution function F is increasing and left-continuous \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " Every cumulative distribution function F is non-decreasing and right-continuous.   \n \n \n \n \n \n "
    },
    {
      "id": "1579",
      "question": "Which of the following of a random variable is a measure of spread? \n",
      "answerA": " variance \n",
      "answerB": " standard deviation \n",
      "answerC": " empirical mean \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Densities with a higher variance are more spread out than densities with a lower variance.   \n "
    },
    {
      "id": "1580",
      "question": "The square root of the variance is called the ________ deviation. \n",
      "answerA": " empirical \n",
      "answerB": " mean \n",
      "answerC": " continuous \n",
      "answerD": " standard ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " Standard Deviation (SD) is the measure of spread of the numbers in a set of data from its mean value.   \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1581",
      "question": "Point out the wrong statement. \n",
      "answerA": " A percentile is simply a quantile with expressed as a percent \n",
      "answerB": " There are two types of random variable \n",
      "answerC": " R cannot approximate quantiles for you for common distributions \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " R can approximate quantiles for you for common distributions.   \n "
    },
    {
      "id": "1582",
      "question": "Which of the following inequality is useful for interpreting variances? \n",
      "answerA": " Chebyshev \n",
      "answerB": " Stautaory \n",
      "answerC": " Testory \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Chebyshev\u2019s inequality is also spelled as Tchebysheff\u2019s inequality.   \n \n \n    \nNote: Join free Sanfoundry classes at  Telegram  or  Youtube \n \n \n \n \n \n \n \n "
    },
    {
      "id": "1583",
      "question": "For continuous random variables, the CDF is the derivative of the PDF. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " For continuous random variables, the PDF is the derivative of the CDF.   \n "
    },
    {
      "id": "1584",
      "question": "Chebyshev\u2019s inequality states that the probability of a \u201cSix Sigma\u201d event is less than ___________ \n",
      "answerA": " 10% \n",
      "answerB": " 20% \n",
      "answerC": " 30% \n",
      "answerD": " 3% ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " If a bell curve is assumed, the probability of a \u201csix sigma\u201d event is on the order of one ten millionth of a percent.   \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1585",
      "question": "Which of the following random variables are the default model for random samples? \n",
      "answerA": " iid \n",
      "answerB": " id \n",
      "answerC": " pmd \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Random variables are said to be iid if they are independent and identically distributed.   \n "
    },
    {
      "id": "1586",
      "question": "Cumulative distribution functions are used to specify the distribution of multivariate random variables. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " In the case of a continuous distribution, it gives the area under the probability density function from minus infinity to x.   \n \n advertisement \n \n \n \n \n Sanfoundry Global Education & Learning Series \u2013 Data Science. \n Here\u2019s the list of Best Books in Data Science. \n \nTo practice all areas of Data Science,  Here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Data Science Questions and Answers \u2013 Introduction to Statistical Inference \u00bb  Next - Data Science Questions and Answers \u2013 Common Distributions   Related Posts: Practice  Programming MCQs \n Practice  Computer Science MCQs \n Check  Data Science Books \n Apply for  Data Science Internship \n Check  Computer Science Books \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Probability and Statistics Questions and Answers \u2013 F-Distribution  \n Probability and Statistics Questions and Answers \u2013 Poisson Distribution  \n Probability and Statistics Questions and Answers \u2013 Binomial Distribution  \n Probability and Statistics Questions and Answers \u2013 Probability Distributions \u2013 1  \n Probability and Statistics Questions and Answers \u2013 Normal Distribution  \n Probability and Statistics Questions and Answers \u2013 Probability Distributions \u2013 2  \n Probability Questions and Answers \u2013 Mean and Variance of Distribution \u2013 Set 2  \n Probability and Statistics Questions and Answers \u2013 Mathematical Expectation  \n Probability and Statistics Questions and Answers \u2013 Mean and Variance of Distribution  \n Total Quality Management Questions and Answers \u2013 Statistics for TQMR \u2013 2  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Probability and Statistics MCQ Questions Probability MCQ Questions Data Science MCQ Questions Data Structure MCQ Questions Statistical Quality Control MCQ Questions Popular Pages: Data Structures in C Data Structures in Java Data Structures in C++ Clinical Science MCQ Questions Computer Science MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Data Science MCQs \n \n \n \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Probability and Statistics MCQ Questions Probability MCQ Questions Data Science MCQ Questions Data Structure MCQ Questions Statistical Quality Control MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Data Structures in C Data Structures in Java Data Structures in C++ Clinical Science MCQ Questions Computer Science MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Data Science MCQs \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.575 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-01-31 14:44:35  \n  Compression = gzip "
    },
    {
      "id": "1587",
      "question": "The expected value or _______ of a random variable is the center of its distribution. \n",
      "answerA": " mode \n",
      "answerB": " median \n",
      "answerC": " mean \n",
      "answerD": " bayesian inference ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " A probability model connects the data to the population using assumptions.   \n "
    },
    {
      "id": "1588",
      "question": "Point out the correct statement. \n",
      "answerA": " Some cumulative distribution function F is non-decreasing and right-continuous \n",
      "answerB": " Every cumulative distribution function F is decreasing and right-continuous \n",
      "answerC": " Every cumulative distribution function F is increasing and left-continuous \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " Every cumulative distribution function F is non-decreasing and right-continuous.   \n \n \n \n \n \n "
    },
    {
      "id": "1589",
      "question": "Which of the following of a random variable is a measure of spread? \n",
      "answerA": " variance \n",
      "answerB": " standard deviation \n",
      "answerC": " empirical mean \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Densities with a higher variance are more spread out than densities with a lower variance.   \n "
    },
    {
      "id": "1590",
      "question": "The square root of the variance is called the ________ deviation. \n",
      "answerA": " empirical \n",
      "answerB": " mean \n",
      "answerC": " continuous \n",
      "answerD": " standard ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " Standard Deviation (SD) is the measure of spread of the numbers in a set of data from its mean value.   \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1591",
      "question": "Point out the wrong statement. \n",
      "answerA": " A percentile is simply a quantile with expressed as a percent \n",
      "answerB": " There are two types of random variable \n",
      "answerC": " R cannot approximate quantiles for you for common distributions \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " R can approximate quantiles for you for common distributions.   \n "
    },
    {
      "id": "1592",
      "question": "Which of the following inequality is useful for interpreting variances? \n",
      "answerA": " Chebyshev \n",
      "answerB": " Stautaory \n",
      "answerC": " Testory \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Chebyshev\u2019s inequality is also spelled as Tchebysheff\u2019s inequality.   \n \n \n    \nNote: Join free Sanfoundry classes at  Telegram  or  Youtube \n \n \n \n \n \n \n \n "
    },
    {
      "id": "1593",
      "question": "For continuous random variables, the CDF is the derivative of the PDF. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " For continuous random variables, the PDF is the derivative of the CDF.   \n "
    },
    {
      "id": "1594",
      "question": "Chebyshev\u2019s inequality states that the probability of a \u201cSix Sigma\u201d event is less than ___________ \n",
      "answerA": " 10% \n",
      "answerB": " 20% \n",
      "answerC": " 30% \n",
      "answerD": " 3% ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " If a bell curve is assumed, the probability of a \u201csix sigma\u201d event is on the order of one ten millionth of a percent.   \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1595",
      "question": "Which of the following random variables are the default model for random samples? \n",
      "answerA": " iid \n",
      "answerB": " id \n",
      "answerC": " pmd \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Random variables are said to be iid if they are independent and identically distributed.   \n "
    },
    {
      "id": "1596",
      "question": "Cumulative distribution functions are used to specify the distribution of multivariate random variables. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " In the case of a continuous distribution, it gives the area under the probability density function from minus infinity to x.   \n \n advertisement \n \n \n \n \n Sanfoundry Global Education & Learning Series \u2013 Data Science. \n Here\u2019s the list of Best Books in Data Science. \n \nTo practice all areas of Data Science,  Here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Data Science Questions and Answers \u2013 Introduction to Statistical Inference \u00bb  Next - Data Science Questions and Answers \u2013 Common Distributions   Related Posts: Apply for  Computer Science Internship \n Apply for  Information Technology Internship \n Practice  Programming MCQs \n Check  Computer Science Books \n Check  Programming Books \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Probability and Statistics Questions and Answers \u2013 F-Distribution  \n Probability and Statistics Questions and Answers \u2013 Poisson Distribution  \n Probability and Statistics Questions and Answers \u2013 Binomial Distribution  \n Probability and Statistics Questions and Answers \u2013 Probability Distributions \u2013 1  \n Probability and Statistics Questions and Answers \u2013 Normal Distribution  \n Probability and Statistics Questions and Answers \u2013 Probability Distributions \u2013 2  \n Probability Questions and Answers \u2013 Mean and Variance of Distribution \u2013 Set 2  \n Probability and Statistics Questions and Answers \u2013 Mathematical Expectation  \n Probability and Statistics Questions and Answers \u2013 Mean and Variance of Distribution  \n Total Quality Management Questions and Answers \u2013 Statistics for TQMR \u2013 2  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Probability and Statistics MCQ Questions Probability MCQ Questions Data Science MCQ Questions Data Structure MCQ Questions Statistical Quality Control MCQ Questions Popular Pages: Data Structures in C Data Structures in Java Data Structures in C++ Clinical Science MCQ Questions Computer Science MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Data Science MCQs \n \n \n \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Probability and Statistics MCQ Questions Probability MCQ Questions Data Science MCQ Questions Data Structure MCQ Questions Statistical Quality Control MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Data Structures in C Data Structures in Java Data Structures in C++ Clinical Science MCQ Questions Computer Science MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Data Science MCQs \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.552 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-01-24 06:06:15  \n  Compression = gzip "
    },
    {
      "id": "1597",
      "question": "Which of the following is the probability calculus of beliefs, given that beliefs follow certain rules? \n",
      "answerA": " Bayesian probability \n",
      "answerB": " Frequency probability \n",
      "answerC": " Frequency inference \n",
      "answerD": " Bayesian inference ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Data scientists tend to fall within shades of gray of these and various other schools of inference.   \n "
    },
    {
      "id": "1598",
      "question": "Point out the correct statement. \n",
      "answerA": " Bayesian inference is the use of Bayesian probability representation of beliefs to perform inference \n",
      "answerB": " NULL is the standard missing data marker used in S \n",
      "answerC": " Frequency inference is the use of Bayesian probability representation of beliefs to perform inference \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Frequency probability is the long run proportion of times an event occurs in independent, identically distributed repetitions.   \n \n \n \n \n \n "
    },
    {
      "id": "1599",
      "question": "Which of the following can be considered as random variable? \n",
      "answerA": " The outcome from the roll of a die \n",
      "answerB": " The outcome of flip of a coin \n",
      "answerC": " The outcome of exam \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " The probability distribution of a discrete random variable is a list of probabilities associated with each of its possible values.   \n "
    },
    {
      "id": "1600",
      "question": "Which of the following random variable that take on only a countable number of possibilities? \n",
      "answerA": " Discrete \n",
      "answerB": " Non Discrete \n",
      "answerC": " Continuous \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Continuous random variable can take any value on some subset of the real line.   \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1601",
      "question": "Point out the wrong statement. \n",
      "answerA": " A random variable is a numerical outcome of an experiment \n",
      "answerB": " There are three types of random variable \n",
      "answerC": " Continuous random variable can take any value on the real line \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " There are two types of random variable-continuous and discrete.   \n "
    },
    {
      "id": "1602",
      "question": "Which of the following is also referred to as random variable? \n",
      "answerA": " stochast \n",
      "answerB": " aleatory \n",
      "answerC": " eliette \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Random variable is also known as stochastic variable.   \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n "
    },
    {
      "id": "1603",
      "question": "Bayesian inference uses frequency interpretations of probabilities to control error rates. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Frequency inference uses frequency interpretations of probabilities to control error rates.   \n "
    },
    {
      "id": "1604",
      "question": "Which of the following condition should be satisfied by function for pmf? \n",
      "answerA": " The sum of all of the possible values is 1 \n",
      "answerB": " The sum of all of the possible values is 0 \n",
      "answerC": " The sum of all of the possible values is infinite \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " A probability mass function evaluated at a value corresponds to the probability that a random variable takes that value.   \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1605",
      "question": "Which of the following function is associated with a continuous random variable? \n",
      "answerA": " pdf \n",
      "answerB": " pmv \n",
      "answerC": " pmf \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " pdf stands for probability density function.   \n "
    },
    {
      "id": "1606",
      "question": "Statistical inference is the process of drawing formal conclusions from data. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Statistical inference requires navigating the set of assumptions and tools.   \n \n advertisement \n \n \n \n \n Sanfoundry Global Education & Learning Series \u2013 Data Science. \n Here\u2019s the list of Best Books in Data Science. \n \nTo practice all areas of Data Science,  Here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Data Science Questions and Answers \u2013 Literate Statistical Programming \u2013 2 \u00bb  Next - Data Science Questions and Answers \u2013 Probability and Statistics   Related Posts: Check  Computer Science Books \n Apply for  Data Science Internship \n Apply for  Computer Science Internship \n Check  Programming Books \n Check  Data Science Books \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Data Science Questions and Answers \u2013 Statistical Inference Concepts  \n Data Science Questions and Answers \u2013 Probability and Statistics  \n Data Science Questions and Answers \u2013 Introduction to Regression Models  \n Data Science Questions and Answers \u2013 Likelihood  \n Data Science Questions and Answers \u2013 Summarizing and Merging Data  \n Data Science Questions and Answers \u2013 Common Distributions  \n Probability and Statistics Questions and Answers \u2013 Probability Distributions \u2013 2  \n Data Science Questions and Answers \u2013 Introduction to Reproducible Research  \n Probability and Statistics Questions and Answers \u2013 Probability Distributions \u2013 1  \n Statistical Quality Control Questions and Answers \u2013 Modeling Process Quality -Continuous Distributions \u2013 1  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Data Science MCQ Questions Probability and Statistics MCQ Questions Statistical Quality Control MCQ Questions Information Science Questions and Answers Computer Science MCQ Questions Popular Pages: Discrete Mathematics MCQ Questions Data Structures in C Data Structures in C++ Data Structures in Java Data Structure MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Data Science MCQs \n \n \n \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Data Science MCQ Questions Probability and Statistics MCQ Questions Statistical Quality Control MCQ Questions Information Science Questions and Answers Computer Science MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Discrete Mathematics MCQ Questions Data Structures in C Data Structures in C++ Data Structures in Java Data Structure MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Data Science MCQs \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.520 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-01-31 10:36:59  \n  Compression = gzip "
    },
    {
      "id": "1607",
      "question": "Original idea comes of Literate Statistical Practice from _______________ \n",
      "answerA": " Don Knuth \n",
      "answerB": " Don Cutting \n",
      "answerC": " Douglas Cutting \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Literate programs are tangled to produce machine readable documents.   \n "
    },
    {
      "id": "1608",
      "question": "Point out the correct statement. \n",
      "answerA": " An article is stream of code and text \n",
      "answerB": " Analysis code is divided in to code chunks only \n",
      "answerC": " Literate programs are tangled to produce human readable documents \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Analysis code is divided in to code chunks and text.   \n \n \n \n \n \n "
    },
    {
      "id": "1609",
      "question": "Which of the following is required for literate programming? \n",
      "answerA": " documentation language \n",
      "answerB": " mapper language \n",
      "answerC": " reducer language \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Programming language is also required for literate programming.   \n "
    },
    {
      "id": "1610",
      "question": "Which of the following is required to implement a literate programming system? \n",
      "answerA": " A programming language like Perl \n",
      "answerB": " A programming language like Java \n",
      "answerC": " A programming language like R \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " R is a language and environment for statistical computing and graphics.   \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1611",
      "question": "Which of the following way is required to make work reproducible? \n",
      "answerA": " keep track of things \n",
      "answerB": " Save output \n",
      "answerC": " Save data in proprietary formats \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Save data in NON proprietary formats to make work reproducible.   \n "
    },
    {
      "id": "1612",
      "question": "Which of the following disadvantage does literate programming have? \n",
      "answerA": " Slow processing of documents \n",
      "answerB": " Code is not automatic \n",
      "answerC": " No logical order \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Code and text is in one place.   \n \n \n Sanfoundry Certification Contest  of the Month is Live. 100+ Subjects. Participate Now!\n \n \n \n \n \n \n \n "
    },
    {
      "id": "1613",
      "question": "knitr supports only one documentation language. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " knitr supports various documentation languages.   \n "
    },
    {
      "id": "1614",
      "question": "Which of the following tool documentation language is supported by knitr? \n",
      "answerA": " RMarkdown \n",
      "answerB": " LaTeX \n",
      "answerC": " HTML \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " knitr is available on CRAN.   \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1615",
      "question": "Which of the following package by Yihui is built in to RStudio environment? \n",
      "answerA": " rpy2 \n",
      "answerB": " knitr \n",
      "answerC": " ggplot2 \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " It can be exported to pdf and html.   \n "
    },
    {
      "id": "1616",
      "question": "Literate program code is live-automatic \u201cregression test\u201d when building a document. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Data and results are automatically updated to reflect external changes.   \n \n advertisement \n \n \n \n \n Sanfoundry Global Education & Learning Series \u2013 Data Science. \n Here\u2019s the list of Best Books in Data Science. \n \nTo practice all areas of Data Science for quizzes,  Here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Data Science Questions and Answers \u2013 Literate Statistical Programming \u2013 1 \u00bb  Next - Data Science Questions and Answers \u2013 Introduction to Statistical Inference   Related Posts: Check  Programming Books \n Apply for  Data Science Internship \n Practice  Programming MCQs \n Check  Computer Science Books \n Apply for  Computer Science Internship \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Data Science Questions and Answers \u2013 Literate Statistical Programming \u2013 1  \n Data Science Questions and Answers \u2013 Introduction to Statistical Inference  \n Data Science Questions and Answers \u2013 Statistical Inference Concepts  \n Data Science Questions and Answers \u2013 Basics of Data Science  \n Data Science MCQ (Multiple Choice Questions)  \n Data Science Questions and Answers \u2013 knitr  \n Data Science Questions and Answers \u2013 Introduction to Reproducible Research  \n Data Science Questions and Answers \u2013 Graphics Devices \u2013 1  \n Data Science Questions and Answers \u2013 Cross Validation  \n Data Science Questions and Answers \u2013 Tidy Data  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Data Science MCQ Questions Statistical Quality Control MCQ Questions R Programming MCQ Questions Object Oriented Programming MCQ Questions C Programming MCQ Questions Popular Pages: C Programming Interview Questions Advanced C Programming C Programming Examples C++ Programming MCQ Questions Data Structure MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Data Science MCQs \n \n \n \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Data Science MCQ Questions Statistical Quality Control MCQ Questions R Programming MCQ Questions Object Oriented Programming MCQ Questions C Programming MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages C Programming Interview Questions Advanced C Programming C Programming Examples C++ Programming MCQ Questions Data Structure MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Data Science MCQs \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.420 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-01-08 08:09:05  \n  Compression = gzip "
    },
    {
      "id": "1617",
      "question": "What is the role of processing code in the research pipeline? \n",
      "answerA": " Transforms the analytical results into figures and tables \n",
      "answerB": " Transforms the analytic data into measured data \n",
      "answerC": " Transforms the measured data into analytic data \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " Data science workflow is a non-linear, iterative process.   \n "
    },
    {
      "id": "1618",
      "question": "Which of the following is a goal of literate statistical programming? \n",
      "answerA": " Combine explanatory text and data analysis code in a single document \n",
      "answerB": " Ensure that data analysis documents are always exported in JPEG format \n",
      "answerC": " Require those data analysis summaries are always written in R \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Literate Statistical Practice is a programming methodology.   \n \n \n \n \n \n "
    },
    {
      "id": "1619",
      "question": "What does it mean to weave a literate statistical program? \n",
      "answerA": " Convert a program from S to python \n",
      "answerB": " Convert the program into a human readable document \n",
      "answerC": " Convert a program to decompress it \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Literate Statistical Programming can be done with knitr.   \n "
    },
    {
      "id": "1620",
      "question": "Which of the following is required to implement a literate programming system? \n",
      "answerA": " A programming language like Perl \n",
      "answerB": " A programming language like Java \n",
      "answerC": " A programming language like R \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " R is a language and environment for statistical computing and graphics.   \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1621",
      "question": "What is one way in which the knitr system differs from Sweave? \n",
      "answerA": " knitr allows for the use of markdown instead of LaTeX \n",
      "answerB": " knitr is written in python instead of R \n",
      "answerC": " knitr lacks features like caching of code chunks \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " knitr is an engine for dynamic report generation with R.   \n "
    },
    {
      "id": "1622",
      "question": "Which of the following is useful way to put text, code, data, output all in one document? \n",
      "answerA": " Literate statistical programming \n",
      "answerB": " Object oriented programming \n",
      "answerC": " Descriptive programming \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Object-oriented programming is a programming language model organized around objects rather than \u201cactions\u201d and data rather than logic.   \n \n \n    \nSubscribe Now:  Data Science Newsletter  |  Important Subjects Newsletters \n \n \n \n \n \n \n \n "
    },
    {
      "id": "1623",
      "question": "Some chunks have to be re-computed every time you re-knit the file. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " All chunks have to be re-computed every time you re-knit the file.   \n "
    },
    {
      "id": "1624",
      "question": "Which of the following tool can be used for integrating text and code in one document? \n",
      "answerA": " knitr \n",
      "answerB": " ggplot2 \n",
      "answerC": " NumPy \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " knitr is a way to write LaTeX, HTML, and Markdown with R code interlaced.   \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1625",
      "question": "Which of the following should be set on chunk by chunk basis to store results of computation? \n",
      "answerA": " cache=TRUE \n",
      "answerB": " cache=FALSE \n",
      "answerC": " caching=TRUE \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " After the first run. The results are loaded from cache.   \n "
    },
    {
      "id": "1626",
      "question": "Dependencies are checked explicitly in caching caveats. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Dependencies are not checked explicitly in caching caveats.   \n \n advertisement \n \n \n \n \n Sanfoundry Global Education & Learning Series \u2013 Data Science. \n Here\u2019s the list of Best Books in Data Science. \n \nTo practice all areas of Data Science,  Here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Data Science Questions and Answers \u2013 knitr \u00bb  Next - Data Science Questions and Answers \u2013 Literate Statistical Programming \u2013 2   Related Posts: Check  Computer Science Books \n Check  Programming Books \n Practice  Programming MCQs \n Check  Data Science Books \n Apply for  Data Science Internship \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Data Science Questions and Answers \u2013 Literate Statistical Programming \u2013 2  \n Data Science Questions and Answers \u2013 Basics of Data Science  \n Data Science Questions and Answers \u2013 Statistical Inference Concepts  \n Data Science MCQ (Multiple Choice Questions)  \n Data Science Questions and Answers \u2013 Introduction to Statistical Inference  \n Data Science Questions and Answers \u2013 Summarizing and Merging Data  \n Data Science Questions and Answers \u2013 Introduction to Reproducible Research  \n Data Science Questions and Answers \u2013 Tidy Data  \n Data Science Questions and Answers \u2013 ToolBox Overview  \n Data Science Questions and Answers \u2013 Raw and Processed Data  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Data Science MCQ Questions Data Structures in C Statistical Quality Control MCQ Questions Data Structures in C++ C Programming Examples Popular Pages: R Programming MCQ Questions Data Structures in Java PLC Programming Examples Java Programming Examples C Programming Examples on Trees    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Data Science MCQs \n \n \n \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Data Science MCQ Questions Data Structures in C Statistical Quality Control MCQ Questions Data Structures in C++ C Programming Examples \n   \n \n \n \n \n \n \n   Popular Pages R Programming MCQ Questions Data Structures in Java PLC Programming Examples Java Programming Examples C Programming Examples on Trees \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Data Science MCQs \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.563 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-01-31 11:59:47  \n  Compression = gzip "
    },
    {
      "id": "1627",
      "question": "Which of the following is suitable for knitr? \n",
      "answerA": " Reports \n",
      "answerB": " Data preprocessing documents \n",
      "answerC": " Technical manuals \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " knitr has short technical documents.   \n "
    },
    {
      "id": "1628",
      "question": "Point out the correct combination related to output statements. \n",
      "answerA": " results: \u201casis\u201d \n",
      "answerB": " echo: true \n",
      "answerC": " echo=false \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Global option relating to echo have values TRUE and FALSE.   \n \n \n \n \n \n "
    },
    {
      "id": "1629",
      "question": "Which of the following is required for not echoing the code? \n",
      "answerA": " echo=TRUE \n",
      "answerB": " print=TRUE \n",
      "answerC": " echo=FALSE \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Code has to be written to set the global options.   \n "
    },
    {
      "id": "1630",
      "question": "Which of the following global options are available for figures in knitr? \n",
      "answerA": " fig.height \n",
      "answerB": " fig.size \n",
      "answerC": " fig.breadth \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " fig.height has numeric value.   \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1631",
      "question": "Which of the following global option has value \u201chide\u201d? \n",
      "answerA": " results \n",
      "answerB": " fig.width \n",
      "answerC": " echo \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Workflow R Markdown is a format for writing reproducible, dynamic reports with R.   \n "
    },
    {
      "id": "1632",
      "question": "Which of the following is the correct order of conversion? \n",
      "answerA": " .md->.Rmd->.html \n",
      "answerB": " .Rmd->.md->.html \n",
      "answerC": " .Rmd->.md->.xml \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " knitr converts markdown document in to html by default.   \n \n \n    \nSubscribe Now:  Data Science Newsletter  |  Important Subjects Newsletters \n \n \n \n \n \n \n \n "
    },
    {
      "id": "1633",
      "question": "knitr is good for complex time-consuming computations. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " knitr is poor for complex time-consuming computations.   \n "
    },
    {
      "id": "1634",
      "question": "Which of the following statement is used for importing knitr library? \n",
      "answerA": " library(knitr) \n",
      "answerB": " import knitr \n",
      "answerC": " lib(knitr) \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " knitr is not good for documents that require precise formatting.   \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1635",
      "question": "The document produced by knitr document has which of the following extension? \n",
      "answerA": " .md \n",
      "answerB": " .rmd \n",
      "answerC": " .html \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " knitr produces markdown document.   \n "
    },
    {
      "id": "1636",
      "question": "Code chunks begin with \u201c`{r} and end with \u201c`. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Code chunks can have names.   \n \n advertisement \n \n \n \n \n Sanfoundry Global Education & Learning Series \u2013 Data Science. \n Here\u2019s the list of Best Books in Data Science. \n \nTo practice all areas of Data Science,  Here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Data Science Questions and Answers \u2013 Introduction to Reproducible Research \u00bb  Next - Data Science Questions and Answers \u2013 Literate Statistical Programming \u2013 1   Related Posts: Check  Programming Books \n Apply for  Data Science Internship \n Apply for  Computer Science Internship \n Practice  Programming MCQs \n Check  Data Science Books \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Data Science Questions and Answers \u2013 Literate Statistical Programming \u2013 1  \n Data Science Questions and Answers \u2013 Literate Statistical Programming \u2013 2  \n Data Science Questions and Answers \u2013 Graphics Devices \u2013 1  \n Data Science Questions and Answers \u2013 Basics of Data Science  \n Data Science Questions and Answers \u2013 Summarizing and Merging Data  \n Data Science Questions and Answers \u2013 Pandas \u2013 1  \n Data Science Questions and Answers \u2013 Shiny  \n Data Science Questions and Answers \u2013 Raw and Processed Data  \n Data Science Questions and Answers \u2013 Statistical Inference Concepts  \n Data Science Questions and Answers \u2013 Reading from Web and APIs \u2013 1  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Data Science MCQ Questions Information Science Questions and Answers Computer Science MCQ Questions Data Structure MCQ Questions Data Structures in C Popular Pages: Data Structures in Java Data Structures in C++ Books on Engineering, Science and Technology Clinical Science MCQ Questions Material Science MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Data Science MCQs \n \n \n \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Data Science MCQ Questions Information Science Questions and Answers Computer Science MCQ Questions Data Structure MCQ Questions Data Structures in C \n   \n \n \n \n \n \n \n   Popular Pages Data Structures in Java Data Structures in C++ Books on Engineering, Science and Technology Clinical Science MCQ Questions Material Science MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Data Science MCQs \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.508 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-01-30 20:48:34  \n  Compression = gzip "
    },
    {
      "id": "1637",
      "question": "Which of the following problem is solved by reproducibility? \n",
      "answerA": " Scalability \n",
      "answerB": " Data availability \n",
      "answerC": " Improved data analysis \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " More transparency is achieved with reproducibility.   \n "
    },
    {
      "id": "1638",
      "question": "Point out the correct statement with respect to replication. \n",
      "answerA": " Focuses on the validity of the data analysis \n",
      "answerB": " Focuses on the validity of the scientific claim \n",
      "answerC": " Arguably a minimum standard for any scientific study \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Data replication if the same data is stored on multiple storage device.   \n \n \n \n \n \n "
    },
    {
      "id": "1639",
      "question": "Which of the following is effective way of checking validity of data analysis? \n",
      "answerA": " Re-run the analysis \n",
      "answerB": " Review the code \n",
      "answerC": " Check the sensitivity \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " Reproducibility addresses the most \u201cdownstream\u201d aspect of the research process.   \n "
    },
    {
      "id": "1640",
      "question": "Which of the following is similar to a pre-specified clinical trial protocol? \n",
      "answerA": " Caching-based Data Analysis \n",
      "answerB": " Evidence-based Data Analysis \n",
      "answerC": " Markdown-based Data Analysis \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Evidence-based Data Analysis a deterministic statistical machine.   \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1641",
      "question": "Point out the wrong statement with respect to reproducibility. \n",
      "answerA": " Focuses on the validity of the data analysis \n",
      "answerB": " The ultimate standard for strengthening scientific evidence \n",
      "answerC": " Important when replication is impossible \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Replication is particularly important in studies that can impact broad policy or regulatory decisions.   \n "
    },
    {
      "id": "1642",
      "question": "Which of the following can be used for data analysis model? \n",
      "answerA": " CRAN \n",
      "answerB": " CPAN \n",
      "answerC": " CTAN \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " Different problems require different approaches and expertise.   \n \n \n    \nNote: Join free Sanfoundry classes at  Telegram  or  Youtube \n \n \n \n \n \n \n \n "
    },
    {
      "id": "1643",
      "question": "Reproducibility determines correctness of data analysis. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Reproducibility has nothing to do with validity of data analysis.   \n "
    },
    {
      "id": "1644",
      "question": "Which of the following step is not required in data analysis? \n",
      "answerA": " Synthesize results \n",
      "answerB": " Create reproducible code \n",
      "answerC": " Interpret results \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " The data set may depend on your goal.   \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1645",
      "question": "Which of the following gives reviewers an important tool without dramatically increasing the burden? \n",
      "answerA": " Quality research \n",
      "answerB": " Replication research \n",
      "answerC": " Reproducible research \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " Reproducible research is important, but does not necessarily solve the critical question of whether a data analysis is trustworthy.   \n "
    },
    {
      "id": "1646",
      "question": "Result analysis are relatively easy to replicate or reproduce. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " Complicated analyses should not be trusted.   \n \n advertisement \n \n \n \n \n Sanfoundry Global Education & Learning Series \u2013 Data Science. \n Here\u2019s the list of Best Books in Data Science. \n \nTo practice all areas of Data Science,  Here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Data Science Questions and Answers \u2013 Exploratory Graphs \u00bb  Next - Data Science Questions and Answers \u2013 knitr   Related Posts: Check  Programming Books \n Check  Computer Science Books \n Apply for  Data Science Internship \n Practice  Computer Science MCQs \n Practice  Programming MCQs \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Data Science Questions and Answers \u2013 Introduction to Statistical Inference  \n Data Science Questions and Answers \u2013 Introduction to Regression Models  \n Data Science Questions and Answers \u2013 Basics of Data Science  \n Data Science Questions and Answers \u2013 Graphics Devices \u2013 1  \n Data Science Questions and Answers \u2013 ToolBox Overview  \n Data Science Questions and Answers \u2013 Pandas \u2013 1  \n Data Science Questions and Answers \u2013 Big Data  \n Data Science Questions and Answers \u2013 Summarizing and Merging Data  \n Data Science Questions and Answers \u2013 Analysis and Experimental Design  \n Data Science Questions and Answers \u2013 Tidy Data  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Data Science MCQ Questions Computer Science MCQ Questions Data Structure MCQ Questions Information Science Questions and Answers Data Structures in C Popular Pages: Books on Engineering, Science and Technology Data Structures in Java Data Structures in C++ Material Science MCQ Questions Clinical Science MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Data Science MCQs \n \n \n \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Data Science MCQ Questions Computer Science MCQ Questions Data Structure MCQ Questions Information Science Questions and Answers Data Structures in C \n   \n \n \n \n \n \n \n   Popular Pages Books on Engineering, Science and Technology Data Structures in Java Data Structures in C++ Material Science MCQ Questions Clinical Science MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Data Science MCQs \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.808 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-01-31 10:36:02  \n  Compression = gzip "
    },
    {
      "id": "1647",
      "question": "Which of the following graphs has properties in the below figure? \n \n",
      "answerA": " Exploratory \n",
      "answerB": " Inferential \n",
      "answerC": " Causal \n",
      "answerD": " None of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Making plots of the data reveals various interesting features.   \n "
    },
    {
      "id": "1648",
      "question": "Which of the following dimension type graph is shown in the below figure? \n \n",
      "answerA": " one-dimensional \n",
      "answerB": " two-dimensional \n",
      "answerC": " three-dimensional \n",
      "answerD": " none of the mentioned ",
      "correctAnswer": "b \n",
      "trackName": "Data Science",
      "explanation": " A two-dimensional graph is a set of points in two-dimensional space.   \n \n \n \n \n \n "
    },
    {
      "id": "1649",
      "question": "Which of the following gave rise to need of graphs in data analysis? \n",
      "answerA": " Data visualization \n",
      "answerB": " Communicating results \n",
      "answerC": " Decision making \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "d \n",
      "trackName": "Data Science",
      "explanation": " A picture can tell better story than data.   \n "
    },
    {
      "id": "1650",
      "question": "Which of the following is characteristic of exploratory graph? \n",
      "answerA": " Made slowly \n",
      "answerB": " Axes are not cleaned up \n",
      "answerC": " Color is used for personal information \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " A large number of exploratory graphs are made.   \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1651",
      "question": "Point out the correct statement. \n",
      "answerA": " coplots are one dimensional data graph \n",
      "answerB": " Exploratory graphs are made quickly \n",
      "answerC": " Exploratory graphs are made relatively less in number \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " coplot is used for two dimensional representation.   \n "
    },
    {
      "id": "1652",
      "question": "Which of the following graph can be used for simple summarization of data? \n",
      "answerA": " Scatterplot \n",
      "answerB": " Overlaying \n",
      "answerC": " Barplot \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " A bar chart or bar graph is a chart that presents Grouped data with rectangular bars with lengths proportional to the values that they represent.   \n \n \n    \nSubscribe Now:  Data Science Newsletter  |  Important Subjects Newsletters \n \n \n \n \n \n \n \n "
    },
    {
      "id": "1653",
      "question": "Color and shape are used to add dimensions to graph data. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " Graphs are commonly used by print and electronic media.    \n "
    },
    {
      "id": "1654",
      "question": "Which of the following information is not given by five-number summary? \n",
      "answerA": " Mean \n",
      "answerB": " Median \n",
      "answerC": " Mode \n",
      "answerD": " All of the mentioned ",
      "correctAnswer": "c \n",
      "trackName": "Data Science",
      "explanation": " The mode is the value that appears most often in a set of data.   \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1655",
      "question": "Which of the following is also referred to as overlayed 1D plot? \n",
      "answerA": " lattice \n",
      "answerB": " barplot \n",
      "answerC": " gplot \n",
      "answerD": " all of the mentioned ",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " lattice is an add-on package that implements Trellis graphics.   \n "
    },
    {
      "id": "1656",
      "question": "Spinning plots can be used for two dimensional data. \n",
      "answerA": " True \n",
      "answerB": " False ",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Data Science",
      "explanation": " There are many ways to create a 3D spinning plot as well.   \n \n advertisement \n \n \n \n \n Sanfoundry Global Education & Learning Series \u2013 Data Science. \n Here\u2019s the list of Best Books in Data Science. \n \nTo practice all areas of Data Science,  Here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Data Science Questions and Answers \u2013 Clustering \u00bb  Next - Data Science Questions and Answers \u2013 Introduction to Reproducible Research   Related Posts: Apply for  Computer Science Internship \n Apply for  Data Science Internship \n Practice  Programming MCQs \n Check  Programming Books \n Practice  Computer Science MCQs \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Data Science Questions and Answers \u2013 Types of Questions \u2013 1  \n R Programming Questions and Answers \u2013 Exploratory Data Analysis \u2013 1  \n Data Science Questions and Answers \u2013 Graphics Devices \u2013 1  \n Data Science Questions and Answers \u2013 Types of Questions \u2013 2  \n Data Science Questions and Answers \u2013 ToolBox Overview  \n Data Science Questions and Answers \u2013 Plotting Systems  \n R Programming Questions and Answers \u2013 Exploratory Data Analysis \u2013 2  \n Data Science Questions and Answers \u2013 Pandas \u2013 1  \n Data Science Questions and Answers \u2013 Summarizing and Merging Data  \n Data Science Questions and Answers \u2013 Basics of Data Science  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python Programs on Graphs Data Science MCQ Questions Data Structures in Java Data Structures in C++ Data Structures in C Popular Pages: Data Structure MCQ Questions Information Science Questions and Answers Books on Engineering, Science and Technology Computer Science MCQ Questions R Programming MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Data Science MCQs \n \n \n \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python Programs on Graphs Data Science MCQ Questions Data Structures in Java Data Structures in C++ Data Structures in C \n   \n \n \n \n \n \n \n   Popular Pages Data Structure MCQ Questions Information Science Questions and Answers Books on Engineering, Science and Technology Computer Science MCQ Questions R Programming MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Data Science MCQs \n \n Data Science Basics & Data Scientist Toolbox \n Data Science Basics \n ToolBox Overview \n CLI & Git Workflow-1 \n CLI & Git Workflow-2 \n Types of Questions - 1 \n Types of Questions - 2 \n Big Data \n Data Science Analysis \n \n Data Analysis with Python \n Time Deltas \n Python Plotting \n Computational Tools \n Pandas Data Structure \n Pandas - 1 \n Pandas - 2 \n Pandas - 3 \n \n Getting Data \n Raw & Processed Data \n Tidy Data \n Web & APIs Reading - 1 \n Web & APIs Reading - 2 \n Summarizing Data \n Regular Expressions \n \n Data Analysis & Research \n Graphics Devices - 1 \n Graphics Devices - 2 \n Plotting Systems \n Clustering \n Exploratory Graphs \n Reproducible Research \n knitr Basics \n Statistical Programming - 1 \n Statistical Programming - 2 \n \n Statistical Inference & Regression Models \n Statistical Inference Basics \n Probability & Statistics \n Common Distributions \n Likelihood \n Statistical Inference \n Regression Models \n Residual Variation \n Binary & Count Outcomes \n \n Machine Learning \n Caret - 1 \n Caret - 2 \n Caret - 3 \n Prediction Motivation \n Cross Validation \n Regression Predicting \n Model Based Prediction \n \n Developing Data Products & NumPy \n Shiny \n Slidify \n GoogleVis \n NumPy - 1 \n NumPy - 2 \n \n Best Reference Books \n Data Science Books \n \n \n Tests Data Science Tests   Data Science Certification \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 1.902 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-01-31 10:23:29  \n  Compression = gzip "
    }
  ],
  "Machine Learning": [
    {
      "id": "1673",
      "question": "Which type of machine learning algorithm falls under the category of \u201cunsupervised learning\u201d? \n",
      "answerA": " Linear Regression \n",
      "answerB": " K-means Clustering \n",
      "answerC": " Decision Trees \n",
      "answerD": "Random Forest",
      "correctAnswer": "b \n",
      "trackName": "Machine Learning",
      "explanation": " K-means Clustering is an example of unsupervised learning used for clustering unlabeled data based on similarities. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1657",
      "question": "What kind of algorithm is logistic regression? \n",
      "answerA": " Cost function minimization \n",
      "answerB": " Ranking \n",
      "answerC": " Regression \n",
      "answerD": "Classification",
      "correctAnswer": "d \n",
      "trackName": "Machine Learning",
      "explanation": " Logistic regression is a classification problem. The target variable is categorical (specific few options). Logistic regression outputs in yes or no / true or false / 0 or 1 and so on. \n \n \n \n \n \n \n "
    },
    {
      "id": "1658",
      "question": "Can a cancer detection problem be solved by logistic regression? \n",
      "answerA": " Sometimes \n",
      "answerB": " No \n",
      "answerC": " Yes \n",
      "answerD": "Depends on the dataset",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": " If the target is to detect cancer, logistic regression can always be used. Logistic regression algorithm will output if the patient has cancer or not, depending on the symptoms and training examples. \n \n "
    },
    {
      "id": "1659",
      "question": "In a logistic regression problem, there are 300 instances. 270 people voted. 30 people did not cast their votes. What is the probability of finding a person who cast one\u2019s vote? \n",
      "answerA": "10%",
      "answerB": "90%",
      "answerC": "0.9",
      "answerD": "0.1",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": " 270 out of 300 people voted. Hence, the probability of finding a person who cast his/her vote is 270/300 or 9/10 i.e. 0."
    },
    {
      "id": "1660",
      "question": "In a logistic regression problem, what is a possible output for a new instance? \n",
      "answerA": "0.85",
      "answerB": "-0.19",
      "answerC": "1.2",
      "answerD": "89%",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " The output in a logistic regression problem is calculated by a probability function. Thus, the output can only be between 0 and "
    },
    {
      "id": "1661",
      "question": "The output in a logistic regression problem is yes (equivalent to 1 or true). What is its possible value? \n",
      "answerA": " Greater than 0.5 \n",
      "answerB": " Depends on the algorithm\u2019s threshold value \n",
      "answerC": " Greater than 0.6 \n",
      "answerD": "Equal to 1",
      "correctAnswer": "b \n",
      "trackName": "Machine Learning",
      "explanation": " If the output is true, the probability of the instance to be true is greater than the threshold value. Now, for different datasets, the threshold value can be different. It can be 0.5, it can also be 0."
    },
    {
      "id": "1662",
      "question": "Who invented logistic regression? \n",
      "answerA": " Vapnik \n",
      "answerB": " Ross Quinlan \n",
      "answerC": " DR Cox \n",
      "answerD": "Chervonenkis",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": "Statistician DR Cox invented Logistic Regression in"
    },
    {
      "id": "1663",
      "question": "An artificially intelligent car knows if to brake or not based on its distance from the car in front of it. Logistic regression algorithm is used. \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " The output is given as yes or no, based on the distance from the car in front of it. It is thus a classification problem. Hence, the logistic regression algorithm can be used to determine whether to stop or not. \n \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1664",
      "question": "An artificially intelligent car decreases its speed based on its distance from the car in front of it. Which algorithm is used? \n",
      "answerA": " Decision Tree \n",
      "answerB": " Na\u00efve-Bayes \n",
      "answerC": " Logistic Regression \n",
      "answerD": "Linear Regression",
      "correctAnswer": "d \n",
      "trackName": "Machine Learning",
      "explanation": " The output is numerical. It determines the speed of the car. Hence it is not a classification problem. All the three, decision tree, na\u00efve-Bayes, and logistic regression are classification algorithms. Linear regression, on the other hand, outputs numerical values based on input. So, this can be used. \n \n "
    },
    {
      "id": "1665",
      "question": "In a logistic regression problem an instance is similar to 60 positive instances, 20 negative instances, dissimilar to 30 positive instances, 90 negative instances. What kind of an instance is this? \n",
      "answerA": " Negative instance \n",
      "answerB": " Positive instance \n",
      "answerC": " Cannot be determined, even if the threshold is given \n",
      "answerD": " Can be determined, if the threshold is given ",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": " Similarity or dissimilarity does not determine the output of logistic regression. The output is completely dependent on the independent variables and their values. So, the output cannot be determined even if the threshold is given. \n \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1666",
      "question": "When was logistic regression invented? \n",
      "answerA": "1968",
      "answerB": "1958",
      "answerC": "1948",
      "answerD": "1988",
      "correctAnswer": "b \n",
      "trackName": "Machine Learning",
      "explanation": "Logistic regression was invented by statistician DR Cox in the year"
    },
    {
      "id": "1667",
      "question": "What is Machine learning? \n",
      "answerA": " The selective acquisition of knowledge through the use of computer programs \n",
      "answerB": " The selective acquisition of knowledge through the use of manual programs \n",
      "answerC": " The autonomous acquisition of knowledge through the use of computer programs \n",
      "answerD": "The autonomous acquisition of knowledge through the use of manual programs",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": " Machine learning is the autonomous acquisition of knowledge through the use of computer programs. \n \n \n \n \n \n "
    },
    {
      "id": "1668",
      "question": "K-Nearest Neighbors (KNN) is classified as what type of machine learning algorithm? \n",
      "answerA": " Instance-based learning \n",
      "answerB": " Parametric learning \n",
      "answerC": " Non-parametric learning \n",
      "answerD": "Model-based learning",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " KNN doesn\u2019t build a parametric model of the data. Instead, it directly classifies new data points based on the k nearest points in the training data. \n "
    },
    {
      "id": "1669",
      "question": "Which of the following is not a supervised machine learning algorithm? \n",
      "answerA": " K-means \n",
      "answerB": " Na\u00efve Bayes \n",
      "answerC": " SVM for classification problems \n",
      "answerD": "Decision tree",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " Decision tree, SVM (Support vector machines) for classification problems and Na\u00efve Bayes are the examples of supervised machine learning algorithm. K-means is an example of unsupervised machine learning algorithm. \n \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1670",
      "question": "What\u2019s the key benefit of using deep learning for tasks like recognizing images? \n",
      "answerA": " They need less training data than other methods. \n",
      "answerB": " They\u2019re easier to explain and understand than other models. \n",
      "answerC": " They can learn complex details from the data on their own. \n",
      "answerD": "They work faster and are more efficient computationally.",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": " Deep learning is great at figuring out intricate details from data, especially in tasks like recognizing images. \n "
    },
    {
      "id": "1671",
      "question": "Which algorithm is best suited for a binary classification problem? \n",
      "answerA": " K-nearest Neighbors \n",
      "answerB": " Decision Trees \n",
      "answerC": " Random Forest \n",
      "answerD": "Linear Regression",
      "correctAnswer": "b \n",
      "trackName": "Machine Learning",
      "explanation": " Decision Trees are versatile and can be used for classification problems, particularly for binary classification, where the output is divided into two classes. \n \n \n \n \n \n "
    },
    {
      "id": "1672",
      "question": "What is the key difference between supervised and unsupervised learning? \n",
      "answerA": " Supervised learning requires labeled data, while unsupervised learning does not. \n",
      "answerB": " Supervised learning predicts labels, while unsupervised learning discovers patterns. \n",
      "answerC": " Supervised learning is used for classification, while unsupervised learning is used for regression. \n",
      "answerD": "Supervised learning is always more accurate than unsupervised learning.",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " The presence or absence of labeled data in the training set distinguishes supervised and unsupervised learning approaches. \n "
    },
    {
      "id": "1674",
      "question": "Which of the following statements is true about AdaBoost? \n",
      "answerA": " It is particularly prone to overfitting on noisy datasets \n",
      "answerB": " Complexity of the weak learner is important in AdaBoost \n",
      "answerC": " It is generally more prone to overfitting \n",
      "answerD": "It improves classification accuracy",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": " AdaBoost is generally not more prone to overfitting but is less prone to overfitting. And it is prone to overfitting on noisy datasets. If you use very simple weak learners, then the algorithms are much less prone to overfitting and it improves classification accuracy. So Complexity of the weak learner is important in AdaBoost. \n \n "
    },
    {
      "id": "1675",
      "question": "Which one of the following models is a generative model used in machine learning? \n",
      "answerA": " Support vector machines \n",
      "answerB": " Na\u00efve Bayes \n",
      "answerC": " Logistic Regression \n",
      "answerD": "Linear Regression",
      "correctAnswer": "b \n",
      "trackName": "Machine Learning",
      "explanation": " Na\u00efve Bayes is a type of generative model which is used in machine learning. Linear Regression, Logistic Regression and Support vector machines are the types of discriminative models which are used in machine learning. \n \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1676",
      "question": "An artificially intelligent car decreases its speed based on its distance from the car in front of it. Which algorithm is used? \n",
      "answerA": " Na\u00efve-Bayes \n",
      "answerB": " Decision Tree \n",
      "answerC": " Linear Regression \n",
      "answerD": "Logistic Regression",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": " The output is numerical. It determines the speed of the car. Hence it is not a classification problem. All the three, decision tree, na\u00efve-Bayes, and logistic regression are classification algorithms. Linear regression, on the other hand, outputs numerical values based on input. So, this can be used. \n \n "
    },
    {
      "id": "1677",
      "question": "Which of the following statements is false about Ensemble learning? \n",
      "answerA": " It is a supervised learning algorithm \n",
      "answerB": " It is an unsupervised learning algorithm \n",
      "answerC": " More random algorithms can be used to produce a stronger ensemble \n",
      "answerD": "Ensembles can be shown to have more flexibility in the functions they can represent",
      "correctAnswer": "b \n",
      "trackName": "Machine Learning",
      "explanation": " Ensemble learning is not an unsupervised learning algorithm. It is a supervised learning algorithm that combines several machine learning techniques into one predictive model to decrease variance and bias. It can be trained and then used to make predictions. And this ensemble can be shown to have more flexibility in the functions they can represent. \n \n "
    },
    {
      "id": "1678",
      "question": "Which of the following statements is true about stochastic gradient descent? \n",
      "answerA": " It processes one training example per iteration \n",
      "answerB": " It is not preferred, if the number of training examples is large \n",
      "answerC": " It processes all the training examples for each iteration of gradient descent \n",
      "answerD": " It is computationally very expensive, if the number of training examples is large ",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " Stochastic gradient descent processes one training example per iteration. That is it updates the weight vector based on one data point at a time. All other three are the features of Batch Gradient Descent. \n \n "
    },
    {
      "id": "1679",
      "question": "What elements describe the Candidate-Elimination algorithm? \n",
      "answerA": " depends on the dataset \n",
      "answerB": " just a set of candidate hypotheses \n",
      "answerC": " just a set of instances \n",
      "answerD": " set of instances, set of candidate hypotheses ",
      "correctAnswer": "d \n",
      "trackName": "Machine Learning",
      "explanation": " A set of instances is required. A set of candidate hypotheses are given. These are applied to the training data and the list of accurate hypotheses is output in accordance with the candidate-elimination algorithm. \n \n "
    },
    {
      "id": "1680",
      "question": "Which of the following statements is not true about boosting? \n",
      "answerA": " It mainly increases the bias and the variance \n",
      "answerB": " It tries to generate complementary base-learners by training the next learner on the mistakes of the previous learners \n",
      "answerC": " It is a technique for solving two-class classification problems \n",
      "answerD": "It uses the mechanism of increasing the weights of misclassified data in preceding classifiers",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " Boosting does not increase the bias and variance but it mainly reduces the bias and the variance. It is a technique for solving two-class classification problems. And it tries to generate complementary base-learners by training the next learner (by increasing the weights) on the mistakes (misclassified data) of the previous learners. \n \n \n \n \n Chapterwise Multiple Choice Questions on Machine Learning \n \n \n \nOur 1000+ MCQs focus on all topics of the Machine Learning subject, covering 100+ topics. This will help you to prepare for exams, contests, online tests, quizzes, viva-voce, interviews, and certifications. You can practice these MCQs chapter by chapter starting from the 1st chapter or you can jump to any chapter of your choice. You can also download the PDF of Machine Learning MCQs by applying below.\n \n \n \n Formal Learning Model \n Version Spaces \n VC-Dimension \n Linear Regression \n Multivariate Linear Regression \n Logistic Regression \n Ensemble Learning \n Stochastic Gradient Descent \n Kernels \n Support Vector Machines \n Decision Trees \n Nearest Neighbor \n Naive-Bayes Algorithm \n Machine Learning \u2013 Neural Networks \n \n \n \n "
    },
    {
      "id": "1681",
      "question": "In which category does linear regression belong to? \n",
      "answerA": " Neither supervised nor unsupervised learning \n",
      "answerB": " Both supervised and unsupervised learning \n",
      "answerC": " Unsupervised learning \n",
      "answerD": "Supervised learning",
      "correctAnswer": "d \n",
      "trackName": "Machine Learning",
      "explanation": " In linear regression, the dataset is given to the learner. The classification is already done in the training data, from which the learner can learn. Hence, it is supervised learning. \n \n \n \n \n \n \n "
    },
    {
      "id": "1682",
      "question": "The learner is trying to predict housing prices based on the size of each house. What type of regression is this? \n",
      "answerA": "  Multivariate Logistic Regression \n",
      "answerB": " Logistic Regression \n",
      "answerC": " Linear Regression \n",
      "answerD": "Multivariate Linear Regression",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": " Learner is trying to predict a discrete number instead of binary output (yes or no / 0 or 1, etc.). Hence, it is a linear regression and not a logistic regression.  Since there is only one independent variable, it is not multivariate linear regression. \n \n "
    },
    {
      "id": "1683",
      "question": "The learner is trying to predict housing prices based on the size of each house. The variable \u201csize\u201d is ___________ \n",
      "answerA": " dependent variable \n",
      "answerB": " label set variable \n",
      "answerC": " independent variable \n",
      "answerD": "target variable",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": " The variable \u201csize\u201d is not dependent on the price of the house. So, it is an independent variable. The variable \u201cprice\u201d is dependent on size. \n \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1684",
      "question": "The target variable is represented along ____________ \n",
      "answerA": " Y axis \n",
      "answerB": " X axis \n",
      "answerC": " Either Y-axis or X-axis, it doesn\u2019t matter \n",
      "answerD": "Depends on the dataset",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " The target variable is dependent on the other variables. So, it is represented as a function of the independent variable. Thus, it is plotted along the y-axis, after its value is calculated using the function. \n \n "
    },
    {
      "id": "1685",
      "question": "The learner is trying to predict the cost of papaya based on its size. The variable \u201ccost\u201d is __________ \n",
      "answerA": " independent variable \n",
      "answerB": " target Variable \n",
      "answerC": " ranked variable \n",
      "answerD": "categorical variable",
      "correctAnswer": "b \n",
      "trackName": "Machine Learning",
      "explanation": " The cost is dependent on the size of the papaya. It is measured as a function of the size. The learner\u2019s goal is to predict the price of the papaya. Hence, it is the target variable. It is represented along y-axis. \n \n \n \n \n \n \n "
    },
    {
      "id": "1686",
      "question": "The independent variable is represented along _________ \n",
      "answerA": " Either X-axis or Y-axis, it doesn\u2019t matter \n",
      "answerB": " Y axis \n",
      "answerC": " X axis \n",
      "answerD": "Depends on the dataset",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": " As the name suggests, the independent variable is not dependent on other variables. The target variable\u2019s value is predicted using the value of the independent variable. Thus, it is represented along the x-axis. \n \n "
    },
    {
      "id": "1687",
      "question": "How many variables are required to represent a linear regression model? \n",
      "answerA": "3",
      "answerB": "2",
      "answerC": "1",
      "answerD": "4",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " Three variables are required. They are: \u2013 1) m = the number of training examples, 2) x = the independent variable, y = the target variable. \n \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1688",
      "question": "What does (x (5) , y (5) ) represent or imply? \n",
      "answerA": " There are 5 training examples \n",
      "answerB": " The values of x and y are 5 \n",
      "answerC": " The fourth training example \n",
      "answerD": "The fifth training example",
      "correctAnswer": "d \n",
      "trackName": "Machine Learning",
      "explanation": " In a linear regression model, the set (x (i) , y (i) ) represents the i th  example in the training set. x (i)  gives the value of i th  x, y (i)  gives the i th  value of y. \n \n "
    },
    {
      "id": "1689",
      "question": "Hypothesis h maps from x (independent variable) to y (dependent variable). \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " The hypothesis is developed by the learner to predict y. It reads the value of x and then uses the mapping function to calculate the value of y for the given value of x. \n \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1690",
      "question": "Na\u00efve Bayes classifier algorithms are mainly used in text classification. \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " Na\u00efve Bayes classifier is a simple probabilistic framework for solving a classification problem. It is used to organize text into categories based on the bayes probability and is used to train data to learn document-class probabilities before classifying text documents. \n \n \n \n \n \n \n "
    },
    {
      "id": "1691",
      "question": "\n",
      "answerA": " P(H|E) = [P(E|H) * P(E)] / P(H) \n",
      "answerB": " P(A|B) = [P(A|B) * P(A)] / P(B) \n",
      "answerC": " P(H|E) = [P(H|E) * P(H)] / P(E) \n",
      "answerD": "P(A|B) = [P(B|A) * P(A)] / P(B)",
      "correctAnswer": "d \n",
      "trackName": "Machine Learning",
      "explanation": " Here, P(A) &P(H) is the probability of hypothesis before observing the evidence, P(B) & P(E) is the probability of evidence, P(A|B) & P(H|E) is the posterior probability and P(B|A) & P(E|H) is the likelihood probability. Since Bayes Theorem states that: \n Conditional Probability of A given B = \\(\\frac {Conditional \\, probability \\, of \\, B \\, given \\, A \\, * \\, Prior probability \\, of \\, A}{Prior \\, probability \\, of \\, B}\\)  \n \n "
    },
    {
      "id": "1692",
      "question": "Which of the following statement is not true about Na\u00efve Bayes classifier algorithm? \n",
      "answerA": " It cannot be used for Binary as well as multi-class classifications \n",
      "answerB": " It is the most popular choice for text classification problems \n",
      "answerC": " It performs well in Multi-class prediction as compared to other algorithms \n",
      "answerD": "It is one of the fast and easy machine learning algorithms to predict a class of test datasets",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " Na\u00efve Bayes algorithm can be used for binary as well as multi-class classifications. It is a parametric algorithm, which means it requires a fixed set of assumptions or parameters to simplify the machine\u2019s learning process. \n \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1693",
      "question": "What is the assumptions of Na\u00efve Bayesian classifier? \n",
      "answerA": " It assumes that features of a data are completely dependent on each other \n",
      "answerB": " It assumes that each input variable is dependent and the model is not generative \n",
      "answerC": " It assumes that each input attributes are independent of each other and the model is generative \n",
      "answerD": "It assumes that the data dimensions are dependent and the model is generative",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": " The assumptions of Na\u00efve Bayes Classifier is that it assumes that each input attributes are independent of each other which is the Na\u00efve part, and the model is generative which is the Bayesian part. \n \n "
    },
    {
      "id": "1694",
      "question": "Which of the following is not a supervised machine learning algorithm? \n",
      "answerA": " Decision tree \n",
      "answerB": " SVM for classification problems \n",
      "answerC": " Na\u00efve Bayes \n",
      "answerD": "K-means",
      "correctAnswer": "d \n",
      "trackName": "Machine Learning",
      "explanation": " Decision tree, SVM (Support vector machines) for classification problems and Na\u00efve Bayes are the examples of supervised machine learning algorithm. K-means is an example of unsupervised machine learning algorithm. \n \n \n \n \n \n \n "
    },
    {
      "id": "1695",
      "question": "Which one of the following terms is not used in the Bayes\u2019 Theorem? \n",
      "answerA": " Prior \n",
      "answerB": " Unlikelihood \n",
      "answerC": " Posterior \n",
      "answerD": "Evidence",
      "correctAnswer": "b \n",
      "trackName": "Machine Learning",
      "explanation": " The terms Evidence, Prior, Likelihood and Posterior are used in the Bayes\u2019 Theorem. But, the term unlikelihood is not used in the Bayes\u2019 Theorem. Bayes Theorem states that   Posterior = (Likelihood * Prior) / Evidence. \n \n "
    },
    {
      "id": "1696",
      "question": "Is the assumption of the Na\u00efve Bayes algorithm a limitation to use it? \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " It\u2019s true that the assumption of the Na\u00efve Bayes\u2019 algorithm is a limitation to use it since implicitly it assumes that all the input attributes are mutually independent of each other. But in real life it is almost impossible that we get a set of input attributes which are independent. \n \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1697",
      "question": "In which of the following case the Na\u00efve Bayes\u2019 algorithm does not work well? \n",
      "answerA": " When faster prediction is required \n",
      "answerB": " When the Na\u00efve assumption holds true \n",
      "answerC": " When there is the case of Zero Frequency \n",
      "answerD": "When there is a multiclass prediction",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": " When there is a case of \u201cZero Frequency\u201d, the categorical variable is not detected and hence the classifier will not be able to make prediction with an assumption of \u201cZero\u201d probability. \n \n "
    },
    {
      "id": "1698",
      "question": "There are two boxes. The first box contains 3 white and 2 red balls whereas the second contains 5 white and 4 red balls. A ball is drawn at random from one of the two boxes and is found to be white. Find the probability that the ball was drawn from the second box? \n",
      "answerA": " 53/50 \n",
      "answerB": " 50/104 \n",
      "answerC": " 54/104 \n",
      "answerD": "54/44",
      "correctAnswer": "b \n",
      "trackName": "Machine Learning",
      "explanation": " Let the first box be A and the second box be B \nThen probability of choosing one box from the two is P(A) = 1/2 and P(B) = 1/2 \nAs given in the question we have to find the probability that the white ball was drawn from the second box = P(B/W) \nNow, \n P(W/A) = 3/5 and P(W/B) = 5/9 \nAccording to Bayes Theorem we know that, \nP(B/W) = \\(\\frac {P(W/B) * P(B)}{P(W/B) * P(B) + P(W/A) * P(A)}\\)  \nP(B/W) = \\(\\frac {5/9 * 1/2}{(5/9 * 1/2) + (3/5 * 1/2)}\\)  \nP(B/W) = \\(\\frac {5/18}{5/18 + 3/10}\\)  \nP(B/W) = \\(\\frac {5/18}{104/180}\\)  \nP(B/W) = 50/104 \n \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1699",
      "question": "Which one of the following models is a generative model used in machine learning? \n",
      "answerA": " Linear Regression \n",
      "answerB": " Logistic Regression \n",
      "answerC": " Na\u00efve Bayes \n",
      "answerD": "Support vector machines",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": " Na\u00efve Bayes is a type of generative model which is used in machine learning. Linear Regression, Logistic Regression and Support vector machines are the types of discriminative models which are used in machine learning. \n \n "
    },
    {
      "id": "1700",
      "question": "The number of balls in three boxes are as follows \n \n \n Box \n Green \n Blue \n Yellow \n \n \n A \n 3 \n 2 \n 1 \n \n \n B \n 2 \n 1 \n 2 \n \n \n C \n 4 \n 2 \n 3 \n \n \n One box is chosen at random and two balls are drawn from it. The balls are green and blue. What is the probability that the ball chosen are from the first box? \n",
      "answerA": " 37/18 \n",
      "answerB": " 15/56 \n",
      "answerC": " 18/37 \n",
      "answerD": "56/15",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": "The probability of choosing one box out of three boxes is P(A) = P(B) = P(C) = 1/"
    },
    {
      "id": "1701",
      "question": "Identify the parametric machine learning algorithm. \n",
      "answerA": " CNN (Convolutional neural network) \n",
      "answerB": " KNN (K-Nearest Neighbours) \n",
      "answerC": " Na\u00efve Bayes \n",
      "answerD": "SVM (Support vector machines)",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": " In machine learning, the algorithms which can simplify a function by collecting information about its prediction within a finite set of parameters is defined as parametric machine learning algorithm. Na\u00efve Bayes is a parametric machine learning algorithm whereas CNN, KNN and SVM are non-parametric machine learning algorithms. \n \n "
    },
    {
      "id": "1702",
      "question": "Which one of the following applications is not an example of Na\u00efve Bayes algorithm? \n",
      "answerA": " Spam filtering \n",
      "answerB": " Text classification \n",
      "answerC": " Stock market forecasting \n",
      "answerD": "Sentiment analysis",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": " Stock market forecasting is one of the most core financial tasks of KNN (K-Nearest Neighbours). Spam filtering, text classification and sentiment analysis is the application of Na\u00efve Bayes algorithm, which uses Bayes theorem of probability for prediction of unknown classes. \n \n "
    },
    {
      "id": "1703",
      "question": "Arrange the following steps in sequence in order to calculate the probability of an event through Na\u00efve Bayes classifier. \nI. Find the likelihood probability with each attribute for each class. \nII. Calculate the prior probability for given class labels. \nIII. Put these values in Bayes formula and calculate posterior probability. \nIV. See which class has a higher probability, given the input belongs to the higher probability class. \n",
      "answerA": " I \u2192 II \u2192 III \u2192 IV \n",
      "answerB": " II \u2192 I \u2192 III \u2192 IV \n",
      "answerC": " III \u2192 II \u2192 I \u2192 IV \n",
      "answerD": "II \u2192 III \u2192 I \u2192 IV",
      "correctAnswer": "b \n",
      "trackName": "Machine Learning",
      "explanation": " The sequence in which Na\u00efve Bayes calculates the probability of an event is: \nII. Calculate the prior probability for given class labels. \nI. Find the likelihood probability with each attribute for each class. \nIII. Put these values in Bayes formula and calculate posterior probability. \nIV. See which class has a higher probability, given the input belongs to the higher probability class. \n \n "
    },
    {
      "id": "1704",
      "question": "\u201cIt is easy and fast to predict the class of the test data set by using Na\u00efve Bayes algorithm\u201d. \n Which of the following statement contradicts the above given statement? \n",
      "answerA": " Because there is no iteration \n",
      "answerB": " Because there is no epoch \n",
      "answerC": " Because there is an error back propagation \n",
      "answerD": "Because there are no operations involved in solving a matrix problem",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": " Na\u00efve Bayes algorithm is easy and fast to predict the class of the test data set because there is no iteration involved, there is no epoch, there are no operations involved in solving a matrix problem and there is no error back propagation. \n \n Sanfoundry Global Education & Learning Series \u2013 Machine Learning . \n To practice all areas of Machine Learning,   here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Nearest Neighbor Analysis Questions and Answers    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n C Program to Perform Naive String Matching  \n Class 12 Maths MCQ \u2013 Bayes Theorem  \n C++ Program to Perform Naive String Matching  \n Machine Learning Questions and Answers \u2013 Logistic Regression \u2013 Multiple Classification  \n C++ Program to Find the Maximum Subarray Sum using Naive Method  \n Adaboost Algorithm Questions and Answers  \n Probability Questions and Answers \u2013 Marginalization, Independence, Conditioning and Bayes Rule  \n Logistic Regression Questions and Answers  \n Machine Learning Questions and Answers \u2013 PAC Learning  \n C++ Program to Compute Discrete Fourier Transform using Naive Approach  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: C++ Algorithm Library Searching Algorithms in Java Neural Networks MCQ Questions Probability and Statistics MCQ Questions Machine Tools MCQ Questions Popular Pages: Algorithms in C String Programs in C++ Java String Programs: Code Examples & Solutions Sorting Algorithms in Java Searching and Sorting Algorithms in C    .inside-article  \n  #post-##  \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Machine Learning MCQs \n \n \n \n \n Formal Learning Model \n Statistical Learning Framework \n Empirical Minimization Framework \n PAC Learning \n \n Version Spaces \n Version Spaces \n Find-S Algorithm \n Candidate Elimination Algorithm \n \n VC-Dimension \n VC-Dimension - Set 1 \n VC-Dimension - Set 2 \n PAC Learning Theorem \n \n Linear Regression \n Linear Regression \n Cost Function \n Gradient Descent \n \n Multivariate Linear Regression \n Multivariate Linear Regression \n Variables Gradient Descent \n Polynomial Regression \n \n Logistic Regression \n Logistic Regression \n Hypothesis Representation \n Decision Boundary \n Cost Function & Gradient Descent \n Advanced Optimization \n Multiple Classification \n \n Ensemble Learning \n Model Combination Schemes \n Ensemble Learning \n Error Correcting Codes \n Boosting Weak Learnability \n Adaboost Algorithm \n Stacking \n \n Stochastic Gradient Descent \n Gradient Descent Algorithm \n Subgradient Descent \n Stochastic Gradient Descent \n Stochastic Gradient Descent - 2 \n SGD Variants \n \n Kernels \n Kernels \n Kernel Trick \n \n Support Vector Machines \n Support Vector Machines \n Large Margin Intuition \n Margin & Hard SVM \n Soft SVM & Norm Regularization \n Optimality Conditions and Support Vectors \n Soft SVM Implementation \n \n Decision Trees \n Decision Trees \n Gain Measure Implementation \n Decision Tree Pruning - 1 \n Decision Tree Pruning - 2 \n Threshold Splitting Rules \n Inductive Bias \n Classification Tree \n Regression Trees \n Random Forest Algorithm \n \n Nearest Neighbour \n K-Nearest Neighbor Algorithm \n Nearest Neighbor Analysis \n \n Naive-Bayes Algorithm \n Naive-Bayes Algorithm \n \n Neural Networks in Machine Learning \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics C++ Algorithm Library Searching Algorithms in Java Neural Networks MCQ Questions Probability and Statistics MCQ Questions Machine Tools MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Algorithms in C String Programs in C++ Java String Programs: Code Examples & Solutions Sorting Algorithms in Java Searching and Sorting Algorithms in C \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Machine Learning MCQs \n \n Formal Learning Model \n Statistical Learning Framework \n Empirical Minimization Framework \n PAC Learning \n \n Version Spaces \n Version Spaces \n Find-S Algorithm \n Candidate Elimination Algorithm \n \n VC-Dimension \n VC-Dimension - Set 1 \n VC-Dimension - Set 2 \n PAC Learning Theorem \n \n Linear Regression \n Linear Regression \n Cost Function \n Gradient Descent \n \n Multivariate Linear Regression \n Multivariate Linear Regression \n Variables Gradient Descent \n Polynomial Regression \n \n Logistic Regression \n Logistic Regression \n Hypothesis Representation \n Decision Boundary \n Cost Function & Gradient Descent \n Advanced Optimization \n Multiple Classification \n \n Ensemble Learning \n Model Combination Schemes \n Ensemble Learning \n Error Correcting Codes \n Boosting Weak Learnability \n Adaboost Algorithm \n Stacking \n \n Stochastic Gradient Descent \n Gradient Descent Algorithm \n Subgradient Descent \n Stochastic Gradient Descent \n Stochastic Gradient Descent - 2 \n SGD Variants \n \n Kernels \n Kernels \n Kernel Trick \n \n Support Vector Machines \n Support Vector Machines \n Large Margin Intuition \n Margin & Hard SVM \n Soft SVM & Norm Regularization \n Optimality Conditions and Support Vectors \n Soft SVM Implementation \n \n Decision Trees \n Decision Trees \n Gain Measure Implementation \n Decision Tree Pruning - 1 \n Decision Tree Pruning - 2 \n Threshold Splitting Rules \n Inductive Bias \n Classification Tree \n Regression Trees \n Random Forest Algorithm \n \n Nearest Neighbour \n K-Nearest Neighbor Algorithm \n Nearest Neighbor Analysis \n \n Naive-Bayes Algorithm \n Naive-Bayes Algorithm \n \n Neural Networks in Machine Learning \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n \n  Dynamic page generated in 2.556 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 00:35:49  \n  Compression = gzip "
    },
    {
      "id": "1705",
      "question": "Gradient descent is an optimization algorithm for finding the local minimum of a function. \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " Gradient descent is an optimization algorithm for finding the local minimum of a function. It is used to find the values of parameters of a function that minimizes a cost function. The slope of this cost function curve tells us how to update our parameters to make the model more accurate. \n \n \n \n \n \n \n "
    },
    {
      "id": "1706",
      "question": "Which of the following statements is false about gradient descent? \n",
      "answerA": " It updates the weight to comprise a small step in the direction of the negative gradient \n",
      "answerB": " The learning rate parameter is \u03b7 where \u03b7 > 0 \n",
      "answerC": " In each iteration, the gradient is re-evaluated for the new weight vector \n",
      "answerD": " In each iteration, the weight is updated in the direction of positive gradient ",
      "correctAnswer": "d \n",
      "trackName": "Machine Learning",
      "explanation": " Gradient descent is an optimization algorithm, and in each iteration the weight is not updated in the direction of positive gradient. Here it updates the weight in the direction of the negative gradient. And the gradient is re-evaluated for the new weight vector with a learning parameter \u03b7 > "
    },
    {
      "id": "1707",
      "question": "In batch method gradient descent, each step requires the entire training set be processed in order to evaluate the error function. \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " Techniques that use the whole data set at once are called batch methods. So in batch method gradient descent, each step requires the entire training set be processed in order to evaluate the error function. Here the error function is defined with respect to a training set. \n \n "
    },
    {
      "id": "1708",
      "question": "What is the gradient of the function 2x 2  \u2013 3y 2  + 4y \u2013 10 at point (0, 0)? \n",
      "answerA": " 0i + 4j \n",
      "answerB": " 1i + 10j \n",
      "answerC": " 2i \u2013 3j \n",
      "answerD": "-3i + 4j",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " Given the function f = 2x 2 -3y 2 +4y-10  at point (0, 0). Then the gradient of the function can be calculated as: \n\\( \\frac {\\partial f}{\\partial x} =  \\frac {\\partial (2x^2 \u2013 3y^2 + 4y \u2013 10)}{\\partial x}\\)  \n= 4x \n= 4 * 0 \n= 0 \n\\( \\frac {\\partial f}{\\partial y} = \\frac {\\partial (2x^2 \u2013 3y^2  + 4y \u2013 10)}{\\partial y}\\)  \n= -6y + 4 \n= (-6 * 0) + 4 \n= 0 + 4 \n= 4 \nGradient, \u2207f = 0i + 4j \n \n "
    },
    {
      "id": "1709",
      "question": "The main difference between gradient descents variants are based on the amount of data. \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " There are mainly three types of gradient descents. They are batch gradient descent, stochastic gradient, and mini-batch gradient descent. The main difference between these algorithms is the amount of data they handle. And based on this their accuracy, and time taken for the weight updating varies. \n \n "
    },
    {
      "id": "1710",
      "question": "Which of the following statements is false about choosing learning rate in gradient descent? \n",
      "answerA": " Small learning rate leads to slow convergence \n",
      "answerB": " Large learning rate cause the loss function to fluctuate around the minimum \n",
      "answerC": " Large learning rate can cause to divergence \n",
      "answerD": "Small learning rate cause the training to progress very fast",
      "correctAnswer": "d \n",
      "trackName": "Machine Learning",
      "explanation": " If the learning rate is too small then the training will progress very slowly because the weight updating is very small. So, it leads to slow convergence. Whereas the large learning rate causes the loss function to fluctuate around the minimum and even can cause divergence. \n \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1711",
      "question": "Which of the following is not related to a gradient descent? \n",
      "answerA": " AdaBoost \n",
      "answerB": " Adadelta \n",
      "answerC": " Adagrad \n",
      "answerD": "RMSprop",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " AdaBoost is a meta algorithm to combine the base learners to form a final classifier. Where Adadelta, Adagrad and RMSprop are the gradient descent optimization algorithms. And these algorithms are most widely used by the deep learning community to solve a number of challenges. \n \n "
    },
    {
      "id": "1712",
      "question": "Given a function y = (x + 4) 2 . What is the local minima of the function starting from the point x = 3 and the value of x after the first iteration using gradient descent (Assume the learning rate is 0.01)? \n",
      "answerA": " 0, 3.02 \n",
      "answerB": " 0, 4.08 \n",
      "answerC": " -4, 2.86 \n",
      "answerD": " 4, 3.8 ",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": "  We know y = (x + 4) 2  reaches its minimum value when x = -4 (i.e when x = -4, y = 0). Hence x = -4 is the local and global minima of the function. \nLet x 0  = 3, Learning rate = 0.01 and y = (x + 4) 2 . Then using gradient descent, \n\\(\\frac {dy}{dx} = \\frac {d(x + 4)^2}{dy}\\)  \n= 2 * (x + 4) \nDuring the first iteration, \nx 1  = x 0  \u2013 (learning rate * \\(\\frac {dy}{dx}\\)) \n= 3 \u2013 (0.01 * (2 * (3 + 4))) \n= 3 \u2013 (0.01 * (2 * 7)) \n= 3 \u2013 (0.01 * 14) \n= 3 \u2013 0.14 \n= 2.86 \n \n "
    },
    {
      "id": "1713",
      "question": "Given a function y = (x + 30) 2 . How many iterations does it need to reach the first negative value of the function starting from the point x = 1 using gradient descent (Assume the learning rate is 0.01)? \n",
      "answerA": "3",
      "answerB": "4",
      "answerC": "2",
      "answerD": "5",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": " Let x 0  = 1, Learning rate = 0.01 and y = (x + 30) 2 . Then using gradient descent, \n\\(\\frac {dy}{dx} = \\frac {d(x + 30)^2}{dy}\\)  \n = 2 * (x + 30) \nDuring the first iteration, \nx 1  = x 0  \u2013 (learning rate * \\(\\frac {dy}{dx}\\)) \n= 1 \u2013 (0.01 * (2 * (1 + 30))) \n= 1 \u2013 (0.01 * (2 * 31)) \n= 1 \u2013 (0.01 * 62) \n= 1 \u2013 0.62 \n= 0.38 \nDuring the second iteration, \nx 2  = x 1  \u2013 (learning rate * \\(\\frac {dy}{dx}\\)) \n= 0.38 \u2013 (0.01 * (2 * (0.38 + 30))) \n= 0.38 \u2013 (0.01 * (2 * 30.38)) \n= 0.38 \u2013 (0.01 * 60.76) \n= 0.38 \u2013 0.61 \n= -0.23 \nSo, the function reaches the first negative value after the two iterations. \n \n Sanfoundry Global Education & Learning Series \u2013 Machine Learning . \n To practice all areas of Machine Learning,   here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Machine Learning Questions and Answers \u2013 Stacking \u00bb  Next - Machine Learning Questions and Answers \u2013 Subgradient Descent    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Stochastic Gradient Descent Questions and Answers  \n Machine Learning Questions and Answers \u2013 Linear Regression \u2013 Gradient Descent  \n Machine Learning Questions and Answers \u2013 Gradient Descent for Multiple Variables  \n Stochastic Gradient Descent Questions and Answers \u2013 Set 2  \n Machine Learning Questions and Answers \u2013 Logistic Regression \u2013 Cost Function and Gradient Descent  \n Machine Learning Questions and Answers \u2013 Subgradient Descent  \n Aircraft Performance Questions and Answers \u2013 Descent Performance in Aircraft Operations \u2013 2  \n Aircraft Performance Questions and Answers \u2013 Descent Performance in Aircraft Operations \u2013 1  \n Finite Element Method Questions and Answers \u2013 Conjugate Gradient Method for Equation Solving  \n Machine Learning Questions and Answers \u2013 Implementing Soft SVM with SGD  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: C++ Algorithm Library Aircraft Performance MCQ Questions Python Programs on Graphs Neural Networks MCQ Questions C# Programs on Functions Popular Pages: Searching and Sorting Algorithms in C Searching Algorithms in Java String Programs in C String Programs in C++ Distillation Design MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Machine Learning MCQs \n \n \n \n \n Formal Learning Model \n Statistical Learning Framework \n Empirical Minimization Framework \n PAC Learning \n \n Version Spaces \n Version Spaces \n Find-S Algorithm \n Candidate Elimination Algorithm \n \n VC-Dimension \n VC-Dimension - Set 1 \n VC-Dimension - Set 2 \n PAC Learning Theorem \n \n Linear Regression \n Linear Regression \n Cost Function \n Gradient Descent \n \n Multivariate Linear Regression \n Multivariate Linear Regression \n Variables Gradient Descent \n Polynomial Regression \n \n Logistic Regression \n Logistic Regression \n Hypothesis Representation \n Decision Boundary \n Cost Function & Gradient Descent \n Advanced Optimization \n Multiple Classification \n \n Ensemble Learning \n Model Combination Schemes \n Ensemble Learning \n Error Correcting Codes \n Boosting Weak Learnability \n Adaboost Algorithm \n Stacking \n \n Stochastic Gradient Descent \n Gradient Descent Algorithm \n Subgradient Descent \n Stochastic Gradient Descent \n Stochastic Gradient Descent - 2 \n SGD Variants \n \n Kernels \n Kernels \n Kernel Trick \n \n Support Vector Machines \n Support Vector Machines \n Large Margin Intuition \n Margin & Hard SVM \n Soft SVM & Norm Regularization \n Optimality Conditions and Support Vectors \n Soft SVM Implementation \n \n Decision Trees \n Decision Trees \n Gain Measure Implementation \n Decision Tree Pruning - 1 \n Decision Tree Pruning - 2 \n Threshold Splitting Rules \n Inductive Bias \n Classification Tree \n Regression Trees \n Random Forest Algorithm \n \n Nearest Neighbour \n K-Nearest Neighbor Algorithm \n Nearest Neighbor Analysis \n \n Naive-Bayes Algorithm \n Naive-Bayes Algorithm \n \n Neural Networks in Machine Learning \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics C++ Algorithm Library Aircraft Performance MCQ Questions Python Programs on Graphs Neural Networks MCQ Questions C# Programs on Functions \n   \n \n \n \n \n \n \n   Popular Pages Searching and Sorting Algorithms in C Searching Algorithms in Java String Programs in C String Programs in C++ Distillation Design MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Machine Learning MCQs \n \n Formal Learning Model \n Statistical Learning Framework \n Empirical Minimization Framework \n PAC Learning \n \n Version Spaces \n Version Spaces \n Find-S Algorithm \n Candidate Elimination Algorithm \n \n VC-Dimension \n VC-Dimension - Set 1 \n VC-Dimension - Set 2 \n PAC Learning Theorem \n \n Linear Regression \n Linear Regression \n Cost Function \n Gradient Descent \n \n Multivariate Linear Regression \n Multivariate Linear Regression \n Variables Gradient Descent \n Polynomial Regression \n \n Logistic Regression \n Logistic Regression \n Hypothesis Representation \n Decision Boundary \n Cost Function & Gradient Descent \n Advanced Optimization \n Multiple Classification \n \n Ensemble Learning \n Model Combination Schemes \n Ensemble Learning \n Error Correcting Codes \n Boosting Weak Learnability \n Adaboost Algorithm \n Stacking \n \n Stochastic Gradient Descent \n Gradient Descent Algorithm \n Subgradient Descent \n Stochastic Gradient Descent \n Stochastic Gradient Descent - 2 \n SGD Variants \n \n Kernels \n Kernels \n Kernel Trick \n \n Support Vector Machines \n Support Vector Machines \n Large Margin Intuition \n Margin & Hard SVM \n Soft SVM & Norm Regularization \n Optimality Conditions and Support Vectors \n Soft SVM Implementation \n \n Decision Trees \n Decision Trees \n Gain Measure Implementation \n Decision Tree Pruning - 1 \n Decision Tree Pruning - 2 \n Threshold Splitting Rules \n Inductive Bias \n Classification Tree \n Regression Trees \n Random Forest Algorithm \n \n Nearest Neighbour \n K-Nearest Neighbor Algorithm \n Nearest Neighbor Analysis \n \n Naive-Bayes Algorithm \n Naive-Bayes Algorithm \n \n Neural Networks in Machine Learning \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n \n  Dynamic page generated in 2.802 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 00:35:35  \n  Compression = gzip "
    },
    {
      "id": "1714",
      "question": "Which of the following statements is not true about the Decision tree? \n",
      "answerA": " It can be applied on binary classification problems only \n",
      "answerB": " It is a predictor that predicts the label associated with an instance by traveling from a root node of a tree to a leaf \n",
      "answerC": " At each node, the successor child is chosen on the basis of a splitting of the input space \n",
      "answerD": "The splitting is based on one of the features or on a predefined set of splitting rules",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " Decision trees can be also used for other prediction problems and not only for binary classification problems. So it is a predictor that predicts the label associated with an instance by traveling from a root node of a tree to a leaf. The successor child is chosen on the basis of a splitting of the input space and is based on one of the features or on a predefined set of splitting rules. \n \n \n \n \n \n \n "
    },
    {
      "id": "1715",
      "question": "Decision tree uses the inductive learning machine learning approach. \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " Decision tree uses the inductive learning machine learning approach. Inductive learning enables the system to recognize patterns and regularities in previous knowledge or training data and extract the general rules from them. A decision tree is considered to be an inductive learning task as it uses particular facts to make more generalized conclusions. \n \n "
    },
    {
      "id": "1716",
      "question": "Which of the following statements is not true about a splitting rule at internal nodes of the tree based on thresholding the value of a single feature? \n",
      "answerA": " It move to the right or left child of the node on the basis of 1 [xi < \u03d1] , where  i \u2208 [d]  is the index of the relevant feature \n",
      "answerB": " It move to the right or left child of the node on the basis of 1 [xi < \u03d1] , where  \u03d1 \u2208 R  is the threshold \n",
      "answerC": " Here a decision tree splits the instance space,  X = R d , into cells, where each leaf of the tree corresponds to one cell \n",
      "answerD": "Splits based on thresholding the value of a single feature are also known as multivariate splits",
      "correctAnswer": "d \n",
      "trackName": "Machine Learning",
      "explanation": " Splits based on thresholding the value of a single feature are known as univariate splits. And here it moves to the right or left child of the node on the basis of 1 [xi < \u03d1] , where  i \u2208 [d]  is the index of the relevant feature and  \u03d1 \u2208 R  is the threshold. A decision tree splits the instance space,  X = R d , into cells, where each leaf of the tree corresponds to one cell. \n \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1717",
      "question": "Consider the figure. If person A starts driving at 8:30 AM and there are no other vehicles on the road, and another person B starts driving at 10 AM and there is an accident on the road, what will be the commute time of A and B respectively? \n \n",
      "answerA": " LONG, LONG \n",
      "answerB": " LONG, SHORT \n",
      "answerC": " SHORT, LONG \n",
      "answerD": " SHORT, SHORT ",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": " Given figure shows a decision tree. And person A starts driving at 8:30 AM and there is no traffic. So he will commute in SHORT time. At the same time person B starts driving at 10 AM and there was an accident on the road. So he will commute for a LONG time. \n \n "
    },
    {
      "id": "1718",
      "question": "Minimum description length (MDL) principle is used to avoid overfitting in decision trees. \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " MDL procedures automatically and inherently protect against overfitting and can be used to estimate both the parameters and the structure of a model. Hence MDL principle is used to avoid overfitting in decision trees and aim at learning a decision tree that on one hand fits the data well while on the other hand is not too large. \n \n "
    },
    {
      "id": "1719",
      "question": "Suppose in a decision tree, we are making some simplifying assumptions that each instance is a vector of d bits  (X = {0, 1} d ) . Which of the following statements is not true about the above situation? \n",
      "answerA": " It thresholding the value of a single feature corresponds to a splitting rule of the form 1 [xi=1]  for some  i = [d] \n",
      "answerB": " The hypothesis class becomes finite, but is still very large \n",
      "answerC": " Any classifier from  {0, 1} d  to  {0, 1}  can be represented by a decision tree with 2 d  leaves and depth of  d + 1 \n",
      "answerD": " Any classifier from  {0, 1} d  to  {0, 1}  can be represented by a decision tree with 2 d+1  leaves and depth of  d + 1 ",
      "correctAnswer": "d \n",
      "trackName": "Machine Learning",
      "explanation": " Given the simplifying assumptions, and any classifier from  {0, 1} d  to  {0, 1}  can be represented by a decision tree not with 2 d+1  leaves but with 2 d   leaves and depth of  d + 1 . And here the hypothesis class becomes finite, but is still very large. \n \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1720",
      "question": "What does it mean by the VC dimension of a class is 2 d ? \n",
      "answerA": " The number of examples need to PAC learn the hypothesis class grows with 2 d \n",
      "answerB": " The number of examples need to PAC learn the hypothesis class grows with 2 d+1 \n",
      "answerC": " The number of examples need to PAC learn the hypothesis class grows with 2 d-1 \n",
      "answerD": "The number of examples need to PAC learn the hypothesis class grows with 2 d +1",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " Suppose in a decision tree we are making some simplifying assumptions that each instance is a vector of d bits  (X = {0, 1} d ) . Then the VC dimension of the class is 2 d , which means that the number of examples we need to PAC learn the hypothesis class grows with 2 d . Unless d is very small, this is a huge number of examples. \n \n "
    },
    {
      "id": "1721",
      "question": "Consider the dataset given below where T and F represent True and False respectively. What is the entropy H (Rain)? \n \n \n Temperature \n Cloud \n Rain \n \n \n Low \n T \n T \n \n \n Low \n T \n T \n \n \n Medium \n T \n F \n \n \n Medium \n T \n T \n \n \n High \n T \n F \n \n \n High \n F \n F \n \n \n \n advertisement \n \n \n \n \n ",
      "answerA": "1",
      "answerB": "0.5",
      "answerC": "0.2",
      "answerD": "0.6",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " We know entropy = \u2211\\(_{i = 1} ^n\\) \u2013 P i  log 2  P i . \nEntropy = \u2013 (3/6) * log 2  (3/6) \u2013 (3/6) * log 2  (3/6) \n= \u2013 (1/2) * log 2  (1/2) \u2013 (1/2) * log 2  (1/2) \n= \u2013 0.5 * -1 \u2013 0.5 * -1 \n= 0.5 + 0.5 \n= 1 \n \n "
    },
    {
      "id": "1722",
      "question": "What does the following figure represent? \n \n",
      "answerA": " Decision tree for OR \n",
      "answerB": " Decision tree for AND \n",
      "answerC": " Decision tree for XOR \n",
      "answerD": "Decision tree for XNOR",
      "correctAnswer": "b \n",
      "trackName": "Machine Learning",
      "explanation": " The given figure represents the decision tree implementation of Boolean AND as per the following truth table. \n \n \n A \n B \n A AND B \n \n \n F \n F \n F \n \n \n F \n T \n F \n \n \n T \n T \n T \n \n \n T \n F \n F \n \n \n So whenever A is false the decision tree will lead to false. Otherwise it will lead to true or false according to the B. \n \n More MCQs on Decision Trees: \n \n Decision Trees MCQ (Set 2) \n Decision Trees MCQ (Set 3) \n Decision Trees MCQ (Set 4) \n Decision Trees MCQ (Set 5) \n \n Sanfoundry Global Education & Learning Series \u2013 Machine Learning . \n To practice all areas of Machine Learning,   here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Machine Learning Questions and Answers \u2013 Implementing Soft SVM with SGD \u00bb  Next - Decision Trees Questions and Answers \u2013 Gain Measure Implementation    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Decision Trees Questions and Answers \u2013 Threshold Based Splitting Rules  \n Decision Trees Questions and Answers \u2013 Gain Measure Implementation  \n Artificial Intelligence Questions and Answers \u2013 Decision Trees  \n Decision Trees Questions and Answers \u2013 Inductive Bias  \n Decision Tree Pruning Questions and Answers  \n Decision Tree Pruning Questions and Answers \u2013 Set 2  \n Python Programs on Trees  \n K-ary Tree Multiple Choice Questions and Answers  \n C++ Program to Count Leaf Nodes in a Binary Search Tree  \n Ternary Tree Multiple Choice Questions and Answers  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Python Programs on Trees C Programming Examples on Trees Tree Programs in C++ Tree Programs in Java Linked List Programs in C Popular Pages: C# String Programs Data Structures in C++ Data Structure MCQ Questions Linked List Programs in Python Python Programs on Graphs    .inside-article  \n  #post-##  \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Machine Learning MCQs \n \n \n \n \n Formal Learning Model \n Statistical Learning Framework \n Empirical Minimization Framework \n PAC Learning \n \n Version Spaces \n Version Spaces \n Find-S Algorithm \n Candidate Elimination Algorithm \n \n VC-Dimension \n VC-Dimension - Set 1 \n VC-Dimension - Set 2 \n PAC Learning Theorem \n \n Linear Regression \n Linear Regression \n Cost Function \n Gradient Descent \n \n Multivariate Linear Regression \n Multivariate Linear Regression \n Variables Gradient Descent \n Polynomial Regression \n \n Logistic Regression \n Logistic Regression \n Hypothesis Representation \n Decision Boundary \n Cost Function & Gradient Descent \n Advanced Optimization \n Multiple Classification \n \n Ensemble Learning \n Model Combination Schemes \n Ensemble Learning \n Error Correcting Codes \n Boosting Weak Learnability \n Adaboost Algorithm \n Stacking \n \n Stochastic Gradient Descent \n Gradient Descent Algorithm \n Subgradient Descent \n Stochastic Gradient Descent \n Stochastic Gradient Descent - 2 \n SGD Variants \n \n Kernels \n Kernels \n Kernel Trick \n \n Support Vector Machines \n Support Vector Machines \n Large Margin Intuition \n Margin & Hard SVM \n Soft SVM & Norm Regularization \n Optimality Conditions and Support Vectors \n Soft SVM Implementation \n \n Decision Trees \n Decision Trees \n Gain Measure Implementation \n Decision Tree Pruning - 1 \n Decision Tree Pruning - 2 \n Threshold Splitting Rules \n Inductive Bias \n Classification Tree \n Regression Trees \n Random Forest Algorithm \n \n Nearest Neighbour \n K-Nearest Neighbor Algorithm \n Nearest Neighbor Analysis \n \n Naive-Bayes Algorithm \n Naive-Bayes Algorithm \n \n Neural Networks in Machine Learning \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Python Programs on Trees C Programming Examples on Trees Tree Programs in C++ Tree Programs in Java Linked List Programs in C \n   \n \n \n \n \n \n \n   Popular Pages C# String Programs Data Structures in C++ Data Structure MCQ Questions Linked List Programs in Python Python Programs on Graphs \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Machine Learning MCQs \n \n Formal Learning Model \n Statistical Learning Framework \n Empirical Minimization Framework \n PAC Learning \n \n Version Spaces \n Version Spaces \n Find-S Algorithm \n Candidate Elimination Algorithm \n \n VC-Dimension \n VC-Dimension - Set 1 \n VC-Dimension - Set 2 \n PAC Learning Theorem \n \n Linear Regression \n Linear Regression \n Cost Function \n Gradient Descent \n \n Multivariate Linear Regression \n Multivariate Linear Regression \n Variables Gradient Descent \n Polynomial Regression \n \n Logistic Regression \n Logistic Regression \n Hypothesis Representation \n Decision Boundary \n Cost Function & Gradient Descent \n Advanced Optimization \n Multiple Classification \n \n Ensemble Learning \n Model Combination Schemes \n Ensemble Learning \n Error Correcting Codes \n Boosting Weak Learnability \n Adaboost Algorithm \n Stacking \n \n Stochastic Gradient Descent \n Gradient Descent Algorithm \n Subgradient Descent \n Stochastic Gradient Descent \n Stochastic Gradient Descent - 2 \n SGD Variants \n \n Kernels \n Kernels \n Kernel Trick \n \n Support Vector Machines \n Support Vector Machines \n Large Margin Intuition \n Margin & Hard SVM \n Soft SVM & Norm Regularization \n Optimality Conditions and Support Vectors \n Soft SVM Implementation \n \n Decision Trees \n Decision Trees \n Gain Measure Implementation \n Decision Tree Pruning - 1 \n Decision Tree Pruning - 2 \n Threshold Splitting Rules \n Inductive Bias \n Classification Tree \n Regression Trees \n Random Forest Algorithm \n \n Nearest Neighbour \n K-Nearest Neighbor Algorithm \n Nearest Neighbor Analysis \n \n Naive-Bayes Algorithm \n Naive-Bayes Algorithm \n \n Neural Networks in Machine Learning \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n \n  Dynamic page generated in 1.938 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 00:35:44  \n  Compression = gzip "
    },
    {
      "id": "1723",
      "question": "Which of the following statements is not true about the cost function? \n",
      "answerA": " It is a measure of how good a neural network did with respect to its given training sample and the expected output \n",
      "answerB": " It depend on variables such as weights \n",
      "answerC": " It is a single value, not a vector \n",
      "answerD": "It never depends on bias",
      "correctAnswer": "d \n",
      "trackName": "Machine Learning",
      "explanation": " A cost function is a measure of how good a neural network did with respect to its given training sample and the expected output. It depends on variables such as weights and biases. A cost function is a single value, not a vector, because it rates how good the neural network did as a whole. \n \n \n \n \n \n \n "
    },
    {
      "id": "1724",
      "question": "Which of the following is not a cost function requirement? \n",
      "answerA": " The cost function must be able to be written as an average \n",
      "answerB": " The cost function must not be dependent on any activation values of a neural network \n",
      "answerC": " Technically a cost function can be dependent on any output values \n",
      "answerD": " If the cost function is dependent on other activation layers besides the output one, back propagation will be valid ",
      "correctAnswer": "d \n",
      "trackName": "Machine Learning",
      "explanation": " Technically a cost function can be dependent on any output values. And it just makes this restriction so that we can backpropagate. If the cost function is dependent on other activation layers besides the output one, back propagation will be invalid because the idea of trickling backwards no longer works. \n \n "
    },
    {
      "id": "1725",
      "question": "When the cost function increases, the learning rate also increases. \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " When you define a cost function for a neural network, the goal is to minimize this cost function. Cost function does not converge to an optimal solution and can even diverge. If the cost oscillates wildly, the learning rate is too high. So if the cost increases, the learning rate is too high. \n \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1726",
      "question": "Which of the following statements is not true about cost function? \n",
      "answerA": " Cost function is also called a loss or error function \n",
      "answerB": " Its goal is to maximize the cost function \n",
      "answerC": " We want to define a cost function to find the weight in the neural network \n",
      "answerD": "It wants different cost functions for regression and classification problems",
      "correctAnswer": "b \n",
      "trackName": "Machine Learning",
      "explanation": " Cost function is also called a loss or error function. Our goal is to minimize the cost function and not to maximize it. We want to define a cost function to find the weight in the neural network. And we want different cost functions for regression and classification problems. \n \n "
    },
    {
      "id": "1727",
      "question": "A variational problem is one in which we are looking for a function which can optimize a certain cost function. \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " Variational problems can also be expressed and solved numerically using back propagation networks. A variational problem is one in which we are looking for a function which can optimize a certain cost function. Usually cost is expressed analytically in terms of the unknown function and finding a solution is in many cases an extremely difficult problem. \n \n \n \n    \nSubscribe Now:  Neural Network Newsletter  |  Important Subjects Newsletters \n \n \n \n \n \n \n \n "
    },
    {
      "id": "1728",
      "question": "Mean squared error is a simple and commonly used cost function. \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " Mean squared error is a simple and commonly used cost function and it is given as C = \\(\\frac {1}{n}\\)\u2211\\(_{i=1} ^{n}\\)(y i  \u2013 y i \u2018 ) 2 , where y is the expected output and y \u2018  is the actual predicted output. Cost function gives a value which we want to optimize and there are so many other cost functions. \n \n "
    },
    {
      "id": "1729",
      "question": "Very mall learning rate improves cost function. \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Machine Learning",
      "explanation": " The learning rate cannot be too small because many more iterations will be required to reach the minimum where the actual goal is to minimize the cost function. A better idea is to select the dynamic learning rate which decreases over time because it allows the algorithm to swiftly identify the point. \n \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1730",
      "question": "The cost function of a neural network is always convex. \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Machine Learning",
      "explanation": " The cost function of a neural network  J (W, b)  is in general neither convex nor concave. This means that the matrix of all second partial derivatives \\(\\frac {\\partial J}{\\partial W}\\) (the Hessian) is neither positive semidefinite, nor negative semidefinite. Since the second derivative is a matrix, it\u2019s possible that it\u2019s neither one nor the other. \n \n "
    },
    {
      "id": "1731",
      "question": "Which of the following statements is not true about the cost function? \n",
      "answerA": " The maximum of the concave function is a point where the derivative is 0 \n",
      "answerB": " The maximum of the convex function is a point where the derivative is 0 \n",
      "answerC": " Analytical Approach is used to find out the minimum or maximum of a cost function \n",
      "answerD": "Hill climbing approach is used to find out the minimum or maximum of a cost function",
      "correctAnswer": "b \n",
      "trackName": "Machine Learning",
      "explanation": "The minimum of the convex function and the maximum of a concave function is a point where the derivative is"
    },
    {
      "id": "1732",
      "question": "The below figure shows a convex function. \n \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Machine Learning",
      "explanation": " Generally, our goal is to optimize the cost function. And the figure shows a non convex function. Functions like sigmoid function are non-convex function which means that there are multiple local minimums as shown in the figure. So, it\u2019s not guaranteed to converge to the global minimum. \n \n "
    },
    {
      "id": "1733",
      "question": "Given the cost function C(h \u03b8  (x), y) =  \\(\\begin{cases} -log (h_{\\theta} (x)) & if \\, y = 1 \\\\ \n\u2013 log (1 \u2013 h_{\\theta} (x)) & if \\, y = 0  \\\\ \n\\end{cases} \n\\) is used to make gradient descent algorithm, to be able to find the global minimum. \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " The given cost function is a log function which is used to make gradient descent algorithm, to be able to find the global minimum. In case where labeled value y is equal to 1 the hypothesis is \u2013log (h(x)) or \u2013log (1-h(x)) otherwise. And we are only interested in the (0, 1) x-axis interval since hypothesis can only take values in that range. \n \n "
    },
    {
      "id": "1734",
      "question": "What is the cost function from the following data by using MSE? \n \n \n Expected output \n 15 \n 17 \n 10 \n 26 \n 14 \n 12 \n 11 \n 13 \n \n \n Actual output \n 12 \n 19 \n 15 \n 24 \n 13 \n 14 \n 8 \n 11 \n \n \n ",
      "answerA": "5.5",
      "answerB": "6.5",
      "answerC": "7.5",
      "answerD": "8.5",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": " Mean squared error is a type of cost function. C = \\(\\frac {1}{n}\\)\u2211\\(_{i=1} ^{n}\\)(y i  \u2013 y i \u2018 ) 2 , where y is the expected output and y \u2018  is the actual predicted output. \nCost function, C = \\(\\frac {1}{8}\\) ((15 \u2013 12) 2  + (17 \u2013 19) 2  + (10 \u2013 15) 2  + (26 \u2013 24) 2  + (14 \u2013 13) 2  + (12 \u2013 14) 2  + (11 \u2013 8) 2  + (13 \u2013 11) 2 \n= \\(\\frac {1}{8}\\) (9 + 4 + 25 + 4 + 1 + 4 + 9 + 4) \n= \\(\\frac {60}{8}\\)  \n= 7.5 \n \n Sanfoundry Global Education & Learning Series \u2013 Neural Networks. \n To practice all areas of Neural Networks,  here is complete set on 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Neural Networks Questions and Answers \u2013 Multiclass Classification \u00bb  Next - Neural Networks Questions and Answers \u2013 Gradient Checking   Related Posts: Apply for  Electronics & Communication Engineering Internship \n Apply for  Electrical & Electronics Engineering Internship \n Practice  Electronics & Communication Engineering MCQs \n Check  Electrical & Electronics Engineering Books \n Practice  Electrical & Electronics Engineering MCQs \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Neural Networks Questions and Answers \u2013 Neurons and the Brain  \n Neural Network Questions and Answers \u2013 Applications of Neural Networks \u2013 1  \n Neural Network Questions and Answers \u2013 Applications of Neural Networks \u2013 2  \n Neural Networks Questions and Answers \u2013 Backpropagation Algorithm \u2013 Set 2  \n Neural Networks Questions and Answers \u2013 Random Initialization  \n Neural Networks MCQ (Multiple Choice Questions)  \n Artificial Intelligence Questions and Answers \u2013 Neural Networks \u2013 2  \n Neural Networks Questions and Answers \u2013 Gradient Checking  \n Neural Networks Questions and Answers \u2013 Introduction of Feedback Neural Network  \n Neural Networks Questions and Answers \u2013 Model Representation  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Neural Networks MCQ Questions Network Theory MCQ Questions Wireless and Mobile Communications MCQ Questions Mechanical Behaviour & Testing of Materials MCQ Questions Electrical Machine Design MCQ Questions Popular Pages: Visual Basic MCQ Questions Chemical Reaction Engineering MCQ Questions JavaScript MCQ Questions Control System MCQ Questions C++ Algorithm Library    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Neural Networks MCQs \n \n \n \n \n Introduction \n Neural Network Introduction \n \n Basics of Artificial Neural Networks \n Neural Characteristics - 1 \n Neural Characteristics - 2 \n Neural Characteristics - 3 \n Neural Networks History \n Neural Terminology \n Neural Networks Models - 1 \n Neural Networks Models - 2 \n Neural Networks Topology \n Neural Network Learning - 1 \n Neural Network Learning - 2 \n \n Activation & Synaptic Dynamics \n Neural Network Dynamics \n Activation Models \n Learning Basics - 1 \n Learning Basics - 2 \n Learning Laws - 1 \n Learning Laws - 2 \n Stability & Convergence \n Recall \n \n Feedforward Neural Networks \n Pattern Association - 1 \n Pattern Association - 2 \n Weight Determination \n Pattern Classification - 1 \n Pattern Classification - 2 \n Pattern Mapping \n Pattern Recognition \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Pattern Storage Analysis \n \n Feedback Neural Networks \n Feedback Neural Network \n FF Network Analysis \n Pattern Storage Networks-1 \n Pattern Storage Networks-2 \n Hopfield Model - 1 \n Hopfield Model - 2 \n Stochastic Networks \n Boltzman Machine - 1 \n Boltzman Machine - 2 \n \n Competitive Learning Neural Networks \n Learning Neural Network \n Feedback Layer \n Feature Mapping Network \n \n Complex Pattern Architectures & ANN Applications \n Associative Memories \n Multi Layer Neural Network \n ART \n Neural Applications - 1 \n Neural Applications - 2 \n \n Neural Networks in Machine Learning \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n Best Reference Books \n Neural Networks Books \n \n \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Neural Networks MCQ Questions Network Theory MCQ Questions Wireless and Mobile Communications MCQ Questions Mechanical Behaviour & Testing of Materials MCQ Questions Electrical Machine Design MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Visual Basic MCQ Questions Chemical Reaction Engineering MCQ Questions JavaScript MCQ Questions Control System MCQ Questions C++ Algorithm Library \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Neural Networks MCQs \n \n Introduction \n Neural Network Introduction \n \n Basics of Artificial Neural Networks \n Neural Characteristics - 1 \n Neural Characteristics - 2 \n Neural Characteristics - 3 \n Neural Networks History \n Neural Terminology \n Neural Networks Models - 1 \n Neural Networks Models - 2 \n Neural Networks Topology \n Neural Network Learning - 1 \n Neural Network Learning - 2 \n \n Activation & Synaptic Dynamics \n Neural Network Dynamics \n Activation Models \n Learning Basics - 1 \n Learning Basics - 2 \n Learning Laws - 1 \n Learning Laws - 2 \n Stability & Convergence \n Recall \n \n Feedforward Neural Networks \n Pattern Association - 1 \n Pattern Association - 2 \n Weight Determination \n Pattern Classification - 1 \n Pattern Classification - 2 \n Pattern Mapping \n Pattern Recognition \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Pattern Storage Analysis \n \n Feedback Neural Networks \n Feedback Neural Network \n FF Network Analysis \n Pattern Storage Networks-1 \n Pattern Storage Networks-2 \n Hopfield Model - 1 \n Hopfield Model - 2 \n Stochastic Networks \n Boltzman Machine - 1 \n Boltzman Machine - 2 \n \n Competitive Learning Neural Networks \n Learning Neural Network \n Feedback Layer \n Feature Mapping Network \n \n Complex Pattern Architectures & ANN Applications \n Associative Memories \n Multi Layer Neural Network \n ART \n Neural Applications - 1 \n Neural Applications - 2 \n \n Neural Networks in Machine Learning \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n Best Reference Books \n Neural Networks Books \n \n \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n \n  Dynamic page generated in 2.524 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 00:35:52  \n  Compression = gzip "
    },
    {
      "id": "1735",
      "question": "Who introduced the concept of PAC learning? \n",
      "answerA": " Francis Galton \n",
      "answerB": " Reverend Thomas Bayes \n",
      "answerC": " J.Ross Quinlan \n",
      "answerD": "Leslie Valiant",
      "correctAnswer": "d \n",
      "trackName": "Machine Learning",
      "explanation": " Valiant introduced PAC learning. Galton introduced Linear Regression. Quinlan introduced the Decision Tree. Bayes introduced Bayes\u2019 rule and Na\u00efve-Bayes theorem. \n \n \n \n \n \n \n "
    },
    {
      "id": "1736",
      "question": "When was PAC learning invented? \n",
      "answerA": "1874",
      "answerB": "1974",
      "answerC": "1984",
      "answerD": "1884",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": "Leslie Valiant was the inventor of PAC learning. He described it in"
    },
    {
      "id": "1737",
      "question": "The full form of PAC is ______ \n",
      "answerA": " Partly Approximation Computation \n",
      "answerB": " Probability Approximation Curve \n",
      "answerC": " Probably Approximately Correct \n",
      "answerD": "Partly Approximately Correct",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": " Probably Approximately Correct tries to build a hypothesis that can predict with low generalization error (approximately correct), with high probability (probably). \n \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1738",
      "question": "What can be explained by PAC learning? \n",
      "answerA": " Sample Complexity \n",
      "answerB": " Overfitting \n",
      "answerC": " Underfitting \n",
      "answerD": "Label Function",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " PAC learning can give a rough estimate of the number of training examples required by the learning algorithm to develop a hypothesis with the desired accuracy. \n \n "
    },
    {
      "id": "1739",
      "question": "What is the significance of epsilon in PAC learning? \n",
      "answerA": " Probability of approximation < epsilon \n",
      "answerB": " Maximum error < epsilon \n",
      "answerC": " Minimum error > epsilon \n",
      "answerD": "Probability of approximation = delta \u2013 epsilon",
      "correctAnswer": "b \n",
      "trackName": "Machine Learning",
      "explanation": " A concept is PAC learnable by L if L can output a hypothesis with error < epsilon. Hence the maximum error obtained by the hypothesis should be less than epsilon. Epsilon is usually 5% or 1%. \n \n \n \n \n \n \n "
    },
    {
      "id": "1740",
      "question": "What is the significance of delta in PAC learning? \n",
      "answerA": " Probability of approximation < delta \n",
      "answerB": " Error < delta \n",
      "answerC": " Probability = 1 \u2013 delta \n",
      "answerD": "Probability of approximation = delta \u2013 epsilon",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": " A concept C is PAC learnable by L if L can predict a hypothesis with a certain error with probability equal to 1-delta. Delta is usually very low. \n \n "
    },
    {
      "id": "1741",
      "question": "One of the goals of PAC learning is to give __________ \n",
      "answerA": " maximum accuracy \n",
      "answerB": " cross-validation complexity \n",
      "answerC": " error of classifier \n",
      "answerD": "computational complexity",
      "correctAnswer": "d \n",
      "trackName": "Machine Learning",
      "explanation": " PAC learning tells us about the amount of effort required for computation so that a learner can come up with a successful hypothesis with high probability. \n \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1742",
      "question": "A learner can be deemed consistent if it produces a hypothesis that perfectly fits the __________ \n",
      "answerA": " cross-validation data \n",
      "answerB": " overall dataset \n",
      "answerC": " test data \n",
      "answerD": "training data",
      "correctAnswer": "d \n",
      "trackName": "Machine Learning",
      "explanation": " PAC learning is concerned with the behavior of the learning algorithm. The learner has access to only the training data set. \n \n "
    },
    {
      "id": "1743",
      "question": "Find minimum number of training examples, m, required. \n",
      "answerA": "98.8",
      "answerB": "99.8",
      "answerC": "99",
      "answerD": "98",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": "Probability = 1 \u2013 delta (d) = 0.95"
    },
    {
      "id": "1744",
      "question": "In kNN too large value of K has a negative impact on the data points. \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " Too large value of K in kNN has a negative impact on the data points. A too large value of K is detrimental as it destroys the locality of information since farther examples are taken into account. It also increases the computational burden. \n \n \n \n \n \n \n "
    },
    {
      "id": "1745",
      "question": "It is good to use kNN for large data sets. \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Machine Learning",
      "explanation": " KNN works well with smaller dataset because it is a lazy learner. It needs to store all the data and then makes decision only at run time. So, if dataset is large, there will be a lot of processing which may adversely impact the performance of the algorithm. \n \n "
    },
    {
      "id": "1746",
      "question": "When we set K = 1 in kNN algorithm, the predictions become more stable. \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Machine Learning",
      "explanation": " As we decrease the value of K to 1, our predictions become less stable. Choosing smaller values for K can be noisy and will have a higher influence on the result.  In general, choosing the value of k is k = sqrt (N) where N stands for the number of samples in your training dataset. \n \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1747",
      "question": "Setting large values of K in kNN is computationally inexpensive. \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Machine Learning",
      "explanation": " Setting large values of K in kNN is computationally expensive. Larger values of K will have smoother decision boundaries which mean lower variance but increased bias. \u2018K\u2019 in kNN algorithm is based on feature similarity and choosing the right value of K is a process called parameter tuning. \n \n "
    },
    {
      "id": "1748",
      "question": "Which of the following statements is not a feature of kNN? \n",
      "answerA": " K-NN has assumptions \n",
      "answerB": " K-NN is pretty intuitive and simple \n",
      "answerC": " No Training Step \n",
      "answerD": "It constantly evolves",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " In kNN there are no assumptions to be met to implement kNN. Parametric models like linear regression has lots of assumptions to be met by data before it can be implemented which is not the case with kNN. All other three statements are the advantages of kNN. \n \n \n \n \n \n \n "
    },
    {
      "id": "1749",
      "question": "Which of the following statements is not a feature of kNN? \n",
      "answerA": " Very easy to implement for multi-class problem \n",
      "answerB": " One Hyper Parameter \n",
      "answerC": " Variety of distance criteria to be choose from \n",
      "answerD": "Fast algorithm for large dataset",
      "correctAnswer": "d \n",
      "trackName": "Machine Learning",
      "explanation": " kNN is a slow algorithm. KNN might be very easy to implement but as dataset grows efficiency or speed of algorithm declines very fast. So, it is a slow algorithm for large dataset. All other three statements are the advantages of kNN. \n \n "
    },
    {
      "id": "1750",
      "question": "Which of the following statements is not a feature of kNN? \n",
      "answerA": " K-NN does not need homogeneous features \n",
      "answerB": " Curse of Dimensionality \n",
      "answerC": " Optimal number of neighbors \n",
      "answerD": "Outlier sensitivity",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " K-NN needs homogeneous features. If you decide to build k-NN using a common distance, like Euclidean or Manhattan distances, it is completely necessary that features have the same scale, since absolute differences in features weight the same, i.e., a given distance in feature 1 must means the same for feature "
    },
    {
      "id": "1751",
      "question": "KNN performs well on imbalanced data. \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " k-NN doesn\u2019t perform well on imbalanced data. If we consider two classes, A and B, and the majority of the training data is labeled as A, then the model will ultimately give a lot of preference to A. This might result in getting the less common class B wrongly classified. \n \n "
    },
    {
      "id": "1752",
      "question": "In kNN low K value is sensitive to outliers. \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " KNN is sensitive to outliers. Low k-value is sensitive to outliers and a higher K-value is more flexible to outliers as it considers more voters to decide prediction. \n \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1753",
      "question": "Cross-validation is a smart way to find out the optimal K value. \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " Cross-validation is a smart way to find out the optimal K value. It estimates the validation error rate by holding out a subset of the training set from the model building process. \n \n Sanfoundry Global Education & Learning Series \u2013 Machine Learning . \n To practice all areas of Machine Learning,   here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - K-Nearest Neighbor Algorithm Questions and Answers \u00bb  Next - Naive-Bayes Algorithm Questions and Answers    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n K-Nearest Neighbor Algorithm Questions and Answers  \n Java Program to Implement Traveling Salesman Problem using Nearest Neighbour Algorithm  \n C++ Program to Implement Nearest Neighbour Algorithm  \n Linear Search Recursive Multiple Choice Questions and Answers (MCQs)  \n Java Program to Find Nearest Neighbour using Linear Search  \n MATLAB Questions and Answers \u2013 Fourier Analysis and Filtering \u2013 1  \n C Program to Find Nearest Sibling of a Node in Tree  \n Version Spaces Questions and Answers  \n Random Forest Algorithm Questions and Answers  \n Digital Signal Processing Questions and Answers \u2013 Frequency Analysis of Signals Using DFT  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: C++ Algorithm Library Design & Analysis of Algorithms MCQ Questions Searching and Sorting Algorithms in C Searching Algorithms in Java Sorting Algorithms in Java Popular Pages: String Programs in C++ Structural Analysis MCQ Questions Pavement Analysis and Design MCQ Questions Automata Theory MCQ Questions Python Programs on Graphs    .inside-article  \n  #post-##  \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Machine Learning MCQs \n \n \n \n \n Formal Learning Model \n Statistical Learning Framework \n Empirical Minimization Framework \n PAC Learning \n \n Version Spaces \n Version Spaces \n Find-S Algorithm \n Candidate Elimination Algorithm \n \n VC-Dimension \n VC-Dimension - Set 1 \n VC-Dimension - Set 2 \n PAC Learning Theorem \n \n Linear Regression \n Linear Regression \n Cost Function \n Gradient Descent \n \n Multivariate Linear Regression \n Multivariate Linear Regression \n Variables Gradient Descent \n Polynomial Regression \n \n Logistic Regression \n Logistic Regression \n Hypothesis Representation \n Decision Boundary \n Cost Function & Gradient Descent \n Advanced Optimization \n Multiple Classification \n \n Ensemble Learning \n Model Combination Schemes \n Ensemble Learning \n Error Correcting Codes \n Boosting Weak Learnability \n Adaboost Algorithm \n Stacking \n \n Stochastic Gradient Descent \n Gradient Descent Algorithm \n Subgradient Descent \n Stochastic Gradient Descent \n Stochastic Gradient Descent - 2 \n SGD Variants \n \n Kernels \n Kernels \n Kernel Trick \n \n Support Vector Machines \n Support Vector Machines \n Large Margin Intuition \n Margin & Hard SVM \n Soft SVM & Norm Regularization \n Optimality Conditions and Support Vectors \n Soft SVM Implementation \n \n Decision Trees \n Decision Trees \n Gain Measure Implementation \n Decision Tree Pruning - 1 \n Decision Tree Pruning - 2 \n Threshold Splitting Rules \n Inductive Bias \n Classification Tree \n Regression Trees \n Random Forest Algorithm \n \n Nearest Neighbour \n K-Nearest Neighbor Algorithm \n Nearest Neighbor Analysis \n \n Naive-Bayes Algorithm \n Naive-Bayes Algorithm \n \n Neural Networks in Machine Learning \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics C++ Algorithm Library Design & Analysis of Algorithms MCQ Questions Searching and Sorting Algorithms in C Searching Algorithms in Java Sorting Algorithms in Java \n   \n \n \n \n \n \n \n   Popular Pages String Programs in C++ Structural Analysis MCQ Questions Pavement Analysis and Design MCQ Questions Automata Theory MCQ Questions Python Programs on Graphs \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Machine Learning MCQs \n \n Formal Learning Model \n Statistical Learning Framework \n Empirical Minimization Framework \n PAC Learning \n \n Version Spaces \n Version Spaces \n Find-S Algorithm \n Candidate Elimination Algorithm \n \n VC-Dimension \n VC-Dimension - Set 1 \n VC-Dimension - Set 2 \n PAC Learning Theorem \n \n Linear Regression \n Linear Regression \n Cost Function \n Gradient Descent \n \n Multivariate Linear Regression \n Multivariate Linear Regression \n Variables Gradient Descent \n Polynomial Regression \n \n Logistic Regression \n Logistic Regression \n Hypothesis Representation \n Decision Boundary \n Cost Function & Gradient Descent \n Advanced Optimization \n Multiple Classification \n \n Ensemble Learning \n Model Combination Schemes \n Ensemble Learning \n Error Correcting Codes \n Boosting Weak Learnability \n Adaboost Algorithm \n Stacking \n \n Stochastic Gradient Descent \n Gradient Descent Algorithm \n Subgradient Descent \n Stochastic Gradient Descent \n Stochastic Gradient Descent - 2 \n SGD Variants \n \n Kernels \n Kernels \n Kernel Trick \n \n Support Vector Machines \n Support Vector Machines \n Large Margin Intuition \n Margin & Hard SVM \n Soft SVM & Norm Regularization \n Optimality Conditions and Support Vectors \n Soft SVM Implementation \n \n Decision Trees \n Decision Trees \n Gain Measure Implementation \n Decision Tree Pruning - 1 \n Decision Tree Pruning - 2 \n Threshold Splitting Rules \n Inductive Bias \n Classification Tree \n Regression Trees \n Random Forest Algorithm \n \n Nearest Neighbour \n K-Nearest Neighbor Algorithm \n Nearest Neighbor Analysis \n \n Naive-Bayes Algorithm \n Naive-Bayes Algorithm \n \n Neural Networks in Machine Learning \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.640 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 00:35:50  \n  Compression = gzip "
    },
    {
      "id": "1754",
      "question": "A Boolean-valued function can be an example of concept learning. \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " Any function which can describe some concept based on datasets can be part of concept learning. For e.g. a function over pictures of animals, that is true for pictures of cats, false for others. \n \n \n \n \n \n \n "
    },
    {
      "id": "1755",
      "question": "How do we learn concepts from training examples? \n",
      "answerA": " Arbitrarily \n",
      "answerB": " Decremental \n",
      "answerC": " Incrementally \n",
      "answerD": "Non-incremental",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": " From each training instance, a concept is enhanced. We start with a basic hypothesis. Then at each step, we go on developing the hypothesis based on the training example. \n \n "
    },
    {
      "id": "1756",
      "question": "What is the goal of concept learning? \n",
      "answerA": " To minimize cross-validation set error \n",
      "answerB": " To maximize test set accuracy \n",
      "answerC": " To find a hypothesis that is most suitable for training instances \n",
      "answerD": "To identify all possible predictors",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": " Concept learning algorithms are applied to the training set. They output the hypothesis which best suits the training set, irrespective of the possible overfitting. \n \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1757",
      "question": "Which is not a concept learning algorithm? \n",
      "answerA": " ID3 \n",
      "answerB": " Find-S \n",
      "answerC": " Candidate Elimination \n",
      "answerD": "List-Then-Eliminate",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " The ID3 algorithm is one of the decision tree algorithms. All the others \u2013 find-s, candidate elimination, and list-then-eliminate are concept learning algorithms. \n \n "
    },
    {
      "id": "1758",
      "question": "In the list-then-eliminate algorithm, the initial version space contains _____ \n",
      "answerA": " most specific hypothesis \n",
      "answerB": " all hypotheses in H \n",
      "answerC": " most accurate hypothesis \n",
      "answerD": "most general hypothesis",
      "correctAnswer": "b \n",
      "trackName": "Machine Learning",
      "explanation": " Initially, the version space contains all hypotheses in H, including the most specific and most general hypothesis. Gradually, it eliminates hypotheses which are not suitable for the training sets. Finally, it reaches the hypothesis which is most accurate for the training set. \n \n \n \n \n \n \n "
    },
    {
      "id": "1759",
      "question": "What happens to the version space in the list-then-eliminate algorithm, at each step? \n",
      "answerA": " Remains the same \n",
      "answerB": " Increases \n",
      "answerC": " Shrinks \n",
      "answerD": "Depends on dataset",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": " Since the version space initially contains all the hypotheses, it gradually shrinks. At every step, it applies all the hypotheses remaining in the version space and removes each one that does not satisfy the current training example. \n \n "
    },
    {
      "id": "1760",
      "question": "The list-then-eliminate algorithm can output more than one hypothesis. \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " If the data available to the learner is insufficient, the algorithm can output all the hypotheses that still remain in the version space \u2013 they are consistent with observed data. \n \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1761",
      "question": "What is the advantage of the list-then-eliminate algorithm? \n",
      "answerA": " Computation is less \n",
      "answerB": " Time-effective \n",
      "answerC": " Overfitting never occurs \n",
      "answerD": "Contains all hypotheses consistent with observed data",
      "correctAnswer": "d \n",
      "trackName": "Machine Learning",
      "explanation": " As the initial version space contains all hypotheses, the algorithm always outputs every hypothesis consistent with training data. A concept learning algorithm can always overfit. Since, all the hypotheses in version space are tried at every step, a lot of computation is done which takes a lot of time. \n \n "
    },
    {
      "id": "1762",
      "question": "For a dataset with 4 attributes, which is the most general hypothesis? \n",
      "answerA": " (Sunny, Warm, Strong, Humid) \n",
      "answerB": " (Sunny, ?, ?, ?) \n",
      "answerC": " (?, ?, ?, ?) \n",
      "answerD": " \nb) (Sunny, ?, ?, ?) \nc) (?, ?, ?, ?) \n",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": " The most general hypothesis is the one that can accept any training example. For any attribute, the most general notation is (?). So, any hypothesis which consists of only (?) is the most general hypothesis. \n \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1763",
      "question": "How is a hypothesis represented in concept learning? \n",
      "answerA": " Scalar \n",
      "answerB": " Vector \n",
      "answerC": " Polynomial \n",
      "answerD": "Either scalar or vector",
      "correctAnswer": "b \n",
      "trackName": "Machine Learning",
      "explanation": " The hypothesis is always expressed as a vector. If the dataset contains n independent variables, then the hypothesis is a vector with n constraints, each of which specifies one of the attributes. \n \n Sanfoundry Global Education & Learning Series \u2013 Machine Learning . \n To practice all areas of Machine Learning,   here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Machine Learning Questions and Answers \u2013 PAC Learning \u00bb  Next - Machine Learning Questions and Answers \u2013 Find-S Algorithm    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Machine Learning Questions and Answers \u2013 PAC Learning  \n Machine Learning Questions and Answers \u2013 Empirical Minimization Framework  \n IPv4 \u2013 Internet Protocol version 4 Training  \n IPv6 \u2013 Internet Protocol version 6 Training  \n Machine Learning Questions and Answers \u2013 Find-S Algorithm  \n Machine Learning Questions and Answers \u2013 Linear Regression \u2013 Cost Function  \n VC-Dimension Questions and Answers  \n Linear Regression in Machine Learning Questions and Answers  \n Machine Learning Questions and Answers \u2013 Statistical Learning Framework  \n Machine Learning Questions and Answers \u2013 Hypothesis Representation  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Probability and Statistics MCQ Questions Free Online Training Courses C++ Algorithm Library Online Trainings by CTO Neural Networks MCQ Questions Popular Pages: Tissue Engineering MCQ Questions JavaScript MCQ Questions Drug and Pharmaceutical Biotechnology MCQ Questions Automata Theory MCQ Questions Training Classes Photos    .inside-article  \n  #post-##  \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Machine Learning MCQs \n \n \n \n \n Formal Learning Model \n Statistical Learning Framework \n Empirical Minimization Framework \n PAC Learning \n \n Version Spaces \n Version Spaces \n Find-S Algorithm \n Candidate Elimination Algorithm \n \n VC-Dimension \n VC-Dimension - Set 1 \n VC-Dimension - Set 2 \n PAC Learning Theorem \n \n Linear Regression \n Linear Regression \n Cost Function \n Gradient Descent \n \n Multivariate Linear Regression \n Multivariate Linear Regression \n Variables Gradient Descent \n Polynomial Regression \n \n Logistic Regression \n Logistic Regression \n Hypothesis Representation \n Decision Boundary \n Cost Function & Gradient Descent \n Advanced Optimization \n Multiple Classification \n \n Ensemble Learning \n Model Combination Schemes \n Ensemble Learning \n Error Correcting Codes \n Boosting Weak Learnability \n Adaboost Algorithm \n Stacking \n \n Stochastic Gradient Descent \n Gradient Descent Algorithm \n Subgradient Descent \n Stochastic Gradient Descent \n Stochastic Gradient Descent - 2 \n SGD Variants \n \n Kernels \n Kernels \n Kernel Trick \n \n Support Vector Machines \n Support Vector Machines \n Large Margin Intuition \n Margin & Hard SVM \n Soft SVM & Norm Regularization \n Optimality Conditions and Support Vectors \n Soft SVM Implementation \n \n Decision Trees \n Decision Trees \n Gain Measure Implementation \n Decision Tree Pruning - 1 \n Decision Tree Pruning - 2 \n Threshold Splitting Rules \n Inductive Bias \n Classification Tree \n Regression Trees \n Random Forest Algorithm \n \n Nearest Neighbour \n K-Nearest Neighbor Algorithm \n Nearest Neighbor Analysis \n \n Naive-Bayes Algorithm \n Naive-Bayes Algorithm \n \n Neural Networks in Machine Learning \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Probability and Statistics MCQ Questions Free Online Training Courses C++ Algorithm Library Online Trainings by CTO Neural Networks MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Tissue Engineering MCQ Questions JavaScript MCQ Questions Drug and Pharmaceutical Biotechnology MCQ Questions Automata Theory MCQ Questions Training Classes Photos \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Machine Learning MCQs \n \n Formal Learning Model \n Statistical Learning Framework \n Empirical Minimization Framework \n PAC Learning \n \n Version Spaces \n Version Spaces \n Find-S Algorithm \n Candidate Elimination Algorithm \n \n VC-Dimension \n VC-Dimension - Set 1 \n VC-Dimension - Set 2 \n PAC Learning Theorem \n \n Linear Regression \n Linear Regression \n Cost Function \n Gradient Descent \n \n Multivariate Linear Regression \n Multivariate Linear Regression \n Variables Gradient Descent \n Polynomial Regression \n \n Logistic Regression \n Logistic Regression \n Hypothesis Representation \n Decision Boundary \n Cost Function & Gradient Descent \n Advanced Optimization \n Multiple Classification \n \n Ensemble Learning \n Model Combination Schemes \n Ensemble Learning \n Error Correcting Codes \n Boosting Weak Learnability \n Adaboost Algorithm \n Stacking \n \n Stochastic Gradient Descent \n Gradient Descent Algorithm \n Subgradient Descent \n Stochastic Gradient Descent \n Stochastic Gradient Descent - 2 \n SGD Variants \n \n Kernels \n Kernels \n Kernel Trick \n \n Support Vector Machines \n Support Vector Machines \n Large Margin Intuition \n Margin & Hard SVM \n Soft SVM & Norm Regularization \n Optimality Conditions and Support Vectors \n Soft SVM Implementation \n \n Decision Trees \n Decision Trees \n Gain Measure Implementation \n Decision Tree Pruning - 1 \n Decision Tree Pruning - 2 \n Threshold Splitting Rules \n Inductive Bias \n Classification Tree \n Regression Trees \n Random Forest Algorithm \n \n Nearest Neighbour \n K-Nearest Neighbor Algorithm \n Nearest Neighbor Analysis \n \n Naive-Bayes Algorithm \n Naive-Bayes Algorithm \n \n Neural Networks in Machine Learning \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.302 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 00:35:19  \n  Compression = gzip "
    },
    {
      "id": "1764",
      "question": "How are the points in the domain set given as input to the algorithm? \n",
      "answerA": " Vector of features \n",
      "answerB": " Scalar points \n",
      "answerC": " Polynomials \n",
      "answerD": "Clusters",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " The variables are converted into a vector of features, and then given as an input to the algorithm. The vector is of the size (number of features x number of training data sets). The output of the learner is usually given as a polynomial. \n \n \n \n \n \n \n "
    },
    {
      "id": "1765",
      "question": "To which input does the learner has access to? \n",
      "answerA": " Testing Data \n",
      "answerB": " Label Data \n",
      "answerC": " Training Data \n",
      "answerD": "Cross-Validation Data",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": " The learner gets access to a particular set of data on which it trains. This data is called as training data. Testing Data is used for testing of the learner\u2019s outputs. The best outputs are then used on the cross-validation data. The label data is a representation of different types of the dependent variables. \n \n "
    },
    {
      "id": "1766",
      "question": "The set which represents the different instances of the target variable is known as ______ \n",
      "answerA": " domain set \n",
      "answerB": " training set \n",
      "answerC": " label set \n",
      "answerD": "test set",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": " Label Set denotes all the possible forms the target variable can take (for e.g. {0,1} or {yes, no} in a logistic regression problem). Domain Set represents the vector of features, given as input to the learner. Training Set and Test Set are parts of the Domain Set which are used for training and testing respectively. \n \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1767",
      "question": "What is the learner\u2019s output also called? \n",
      "answerA": " Predictor, or Hypothesis, or Classifier \n",
      "answerB": " Predictor, or Hypothesis, or Trainer \n",
      "answerC": " Predictor, or Trainer, or Classifier \n",
      "answerD": " Trainer, or Hypothesis, or Classifier ",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " The output is called a predictor when it is used to predict the type or the numerical value of the target variable. It is called a hypothesis when it is a general statement about the data set. It is called a classifier when it is used to classify the training set in two or more types. \n \n "
    },
    {
      "id": "1768",
      "question": "It is assumed that the learner has prior knowledge about the probability distribution which generates the instances in a training set. \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Machine Learning",
      "explanation": " The learner has no prior knowledge about the distribution. It is assumed that the distribution is completely arbitrary. It is also assumed that there is a function which \u201ccorrectly\u201d labels the training examples. The learner\u2019s job is to find out this function. \n \n \n \n \n \n \n "
    },
    {
      "id": "1769",
      "question": "The labeling function is known to the learner in the beginning. \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Machine Learning",
      "explanation": " The function is unknown to the learner as this is what the learner is trying to find out. In the beginning, the learner just knows about the training set and the corresponding label set. \n \n "
    },
    {
      "id": "1770",
      "question": "The papaya learning algorithm is based on a dataset that consists of three variables \u2013 color, softness, tastiness of the papaya. Which is more likely to be the target variable? \n",
      "answerA": " Tastiness \n",
      "answerB": " Softness \n",
      "answerC": " Papaya \n",
      "answerD": "Color",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " The tastiness is dependent on how ripe the papaya is. The ripeness is determined by the color and softness. Hence color and softness are the independent variables and the tastiness is the dependent variable or target variable. \n \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1771",
      "question": "The error of classifier is measured with respect to _________ \n",
      "answerA": " variance of data instances \n",
      "answerB": " labeling function \n",
      "answerC": " probability distribution \n",
      "answerD": "probability distribution and labeling function",
      "correctAnswer": "d \n",
      "trackName": "Machine Learning",
      "explanation": " The error is the probability of choosing a random instance from the data set and then misclassifying it using the labeling function. \n \n "
    },
    {
      "id": "1772",
      "question": "What is not accessible to the learner? \n",
      "answerA": " Training Set \n",
      "answerB": " Label Set \n",
      "answerC": " Labeling Function \n",
      "answerD": "Domain Set",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": " The learner has access to the domain set, from which it extracts the training set. The label set is also given. Then the algorithm is applied to the training set to teach the learner, a function to determine the correct label of a given instance. This is the labeling function. \n \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1773",
      "question": "What are the possible values of A, B, and C in the following diagram? \n \n",
      "answerA": " A \u2013 Training Set, B \u2013 Domain Set, C \u2013 Cross-Validation Set \n",
      "answerB": " A \u2013 Training Set, B \u2013 Test Set, C \u2013 Cross-Validation Set \n",
      "answerC": " A \u2013 Training Set, B \u2013 Test Set, C \u2013 Domain Set \n",
      "answerD": " A \u2013 Test Set, B \u2013 Domain Set, C \u2013 Training Set ",
      "correctAnswer": "b \n",
      "trackName": "Machine Learning",
      "explanation": " Domain Set comprises of the total input data set. It is usually divided into a training set, a test set and a cross-validation set in the ratio 3:1:"
    },
    {
      "id": "1774",
      "question": "Any ERM rule is a successful PAC learner for hypothesis space H. \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " ERM rules try to reduce the hypothesis error on the training dataset, even if it overfits. PAC learner tries to calculate the probability of finding an instance in which the hypothesis cannot label correctly. \n \n \n \n \n \n \n "
    },
    {
      "id": "1775",
      "question": "If distribution D assigns zero probability to instances where h not equal to c, then an error will be ______ \n",
      "answerA": "1",
      "answerB": "0.5",
      "answerC": "0",
      "answerD": "infinite",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": " For every instance selected, h is equal to c. Thus no error occurs. Hence, the probability of finding an error will be zero. \n \n "
    },
    {
      "id": "1776",
      "question": "If distribution D assigns zero probability to instances where h = c, then an error will be ______ \n",
      "answerA": " Cannot be determined \n",
      "answerB": "0.5",
      "answerC": "1",
      "answerD": "0",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": " D assigned zero probability to instances where h = c. Thus, whichever instance is selected,  h is not equal to c i.e. error. Since for every instance error is raised, the probability of finding an error is "
    },
    {
      "id": "1777",
      "question": "Error strongly depends on distribution D. \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " If D is a uniform probability distribution that assigns the same probability to every instance in X, then the error for the hypothesis will be the fraction of the total instance space that falls into the region where h and c disagree. \n \n "
    },
    {
      "id": "1778",
      "question": "PAC learning was introduced by ____________ \n",
      "answerA": " Vapnik \n",
      "answerB": " Leslie Valiant \n",
      "answerC": " Chervonenkis \n",
      "answerD": "Reverend Thomas Bayes",
      "correctAnswer": "b \n",
      "trackName": "Machine Learning",
      "explanation": "Leslie Valiant introduced PAC Learning in"
    },
    {
      "id": "1779",
      "question": "Error is defined over the _____________ \n",
      "answerA": " training set \n",
      "answerB": " test Set \n",
      "answerC": " domain set \n",
      "answerD": "cross-validation set",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": " Error is defined over the entire distribution of instances-not simply over the training examples-because this is the true error one expects to encounter when actually using the learned hypothesis h on subsequent instances drawn from D. \n \n "
    },
    {
      "id": "1780",
      "question": "The error of h with respect to c is the probability that a randomly drawn instance will fall into the region where _________ \n",
      "answerA": " h and c disagree \n",
      "answerB": " h and c agree \n",
      "answerC": " h is greater than c but not less \n",
      "answerD": "h is lesser than c but not greater",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " The concepts c and h are depicted by the sets of instances within X that they label as positive.  If c says the label is positive but h says a negative, error has occurred, whose probability is to be calculated. \n \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1781",
      "question": "When was PAC learning invented? \n",
      "answerA": "1954",
      "answerB": "1964",
      "answerC": "1974",
      "answerD": "1984",
      "correctAnswer": "d \n",
      "trackName": "Machine Learning",
      "explanation": "PAC learning was introduced in the domain Computational Learning Theory. Leslie Valiant introduced the concept of PAC learning in"
    },
    {
      "id": "1782",
      "question": "Multivariate linear regression belongs to which category? \n",
      "answerA": " Neither supervised nor unsupervised learning \n",
      "answerB": " Both supervised and unsupervised learning \n",
      "answerC": " Supervised learning \n",
      "answerD": "Unsupervised learning",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": " In multivariate linear regression the dataset with correct values of the target variable is given to the learner. The correct answers are already given, from which the learner can learn. Hence, it is supervised learning. \n \n \n \n \n \n \n "
    },
    {
      "id": "1783",
      "question": "The learner is trying to predict housing prices based on the size of each house and number of bedrooms. What type of regression is this? \n",
      "answerA": "  Multivariate Logistic Regression \n",
      "answerB": " Logistic Regression \n",
      "answerC": " Linear Regression \n",
      "answerD": "Multivariate Linear Regression",
      "correctAnswer": "d \n",
      "trackName": "Machine Learning",
      "explanation": " Learner is trying to output a value which can be any number, instead of a binary output (yes or no / 0 or 1, etc.). Thus it is linear regression and not logistic regression.  Since there are two independent variables \u201csize\u201d and \u201cnumber of bedrooms\u201d, it is multivariate linear regression. \n \n "
    },
    {
      "id": "1784",
      "question": "What does x n (i)  represent? \n",
      "answerA": " Value of n th  variable is i \n",
      "answerB": " Value of i th  variable in the n th  training example \n",
      "answerC": " Value of n th  variable in the i th  training example \n",
      "answerD": "Value of i th  variable is n",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": " In multivariate linear regression, while representing an independent variable, the subscript denotes the feature number and the superscript denotes the number of the training example. \n \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1785",
      "question": "How is the hypothesis represented in multivariate regression? Transpose of matrix a is represented as a T . \n",
      "answerA": " h(X) = t T X \n",
      "answerB": " h(X) = tX \n",
      "answerC": " h(X) = tX T \n",
      "answerD": "h(X) = t T X T",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " In multivariate regression, t = [t 0  t 1  t 2  \u2026 t n ] T , X = [1 x 1  x 2  \u2026 x n ] T . t is the vector of coefficients of the features. X is the feature vector denoting all the features. \n \n "
    },
    {
      "id": "1786",
      "question": "Let there be n features. What is the dimension of the X vector in hypothesis h(X) = t T X? \n",
      "answerA": " n x 1 \n",
      "answerB": " (n + 1) x 1 \n",
      "answerC": " n x n \n",
      "answerD": "(n \u2013 1) x 1",
      "correctAnswer": "b \n",
      "trackName": "Machine Learning",
      "explanation": " The feature vector contains n features and 1 which represents x 0 . It is not a feature. It is used to match the dimension of vector t since vector t contains an extra element t 0  which is the intercept. \n \n \n \n \n \n \n "
    },
    {
      "id": "1787",
      "question": "What does X (I)  represent? \n",
      "answerA": " A vector denoting all the values of the i th  feature \n",
      "answerB": " i th  feature in the i th  example \n",
      "answerC": " A feature vector denoting the independent variables in the i th  example \n",
      "answerD": "Depends on the dataset",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": " The feature vector is of dimension n x 1, where n is the number of features. Values of all the features in the i th  row of training examples are values of this vector, where the value of feature a is represented in a row an of the feature vector. \n \n "
    },
    {
      "id": "1788",
      "question": "What is the minimum number of variables required to represent a linear regression model? \n",
      "answerA": "3",
      "answerB": "2",
      "answerC": "1",
      "answerD": "4",
      "correctAnswer": "d \n",
      "trackName": "Machine Learning",
      "explanation": " At least four variables are required. One is required to represent the number of training examples, another should represent the target variable. Since it is multivariate linear regression, there should be at least two independent variables and they are represented by two more variables. \n \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1789",
      "question": "What does (x 1 (4) , x 2 (4) , y (4) ) represent or imply? \n",
      "answerA": " There are 4 training examples \n",
      "answerB": " The values of x 1 , x 2 , and y are 4 \n",
      "answerC": " The fourth training example and there are two independent variables \n",
      "answerD": "The second training example and there are two independent variables",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": " In a linear regression model, the set (x 1 (i) , \u2026, x n (i) , y (i) ) represents the i th  example in the training set. x n (i)  gives the value of i th  x n , y (i)  gives the i th  value of y. (x 1 (i) , \u2026, x n (i) , y (i) ) implies that there are n independent variables. \n \n "
    },
    {
      "id": "1790",
      "question": "There is no upper bound on the number of the independent variable(s). \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " In multivariate linear regression, there is no upper bound on the number of independent variables. The number of independent variables can be 2 to n, where n is any positive number above 2, and not infinite. They can be represented as a vector and the target variable is represented as the function of these independent variables. \n \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1791",
      "question": "There is no upper bound on the number of the target variable(s). \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Machine Learning",
      "explanation": "The maximum number of target variables that can be predicted by a learner is"
    },
    {
      "id": "1792",
      "question": "What is the objective of backpropagation algorithm? \n",
      "answerA": " to develop learning algorithm for multilayer feedforward neural network \n",
      "answerB": " to develop learning algorithm for single layer feedforward neural network \n",
      "answerC": " to develop learning algorithm for multilayer feedforward neural network, so that network can be trained to capture the mapping implicitly \n",
      "answerD": "none of the mentioned",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": " The objective of backpropagation algorithm  is to to develop learning algorithm for multilayer feedforward neural network, so that network can be trained to capture the mapping implicitly. \n \n \n \n \n \n "
    },
    {
      "id": "1793",
      "question": "What is true regarding backpropagation rule? \n",
      "answerA": " it is also called generalized delta rule \n",
      "answerB": " error in output is propagated backwards only to determine weight updates \n",
      "answerC": " there is no feedback of signal at nay stage \n",
      "answerD": "all of the mentioned",
      "correctAnswer": "d \n",
      "trackName": "Machine Learning",
      "explanation": " These all statements defines backpropagation algorithm. \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1794",
      "question": "What is true regarding backpropagation rule? \n",
      "answerA": " it is a feedback neural network \n",
      "answerB": " actual output is determined by computing the outputs of units for each hidden layer \n",
      "answerC": " hidden layers output is not all important, they are only meant for supporting input and output layers \n",
      "answerD": "none of the mentioned",
      "correctAnswer": "b \n",
      "trackName": "Machine Learning",
      "explanation": " In backpropagation rule, actual output is determined by computing the outputs of units for each hidden layer. \n \n \n    \nSubscribe Now:  Neural Network Newsletter  |  Important Subjects Newsletters \n \n \n \n \n \n \n \n "
    },
    {
      "id": "1795",
      "question": "What is meant by generalized in statement \u201cbackpropagation is a generalized delta rule\u201d ? \n",
      "answerA": " because delta rule can be extended to hidden layer units \n",
      "answerB": " because delta is applied to only input and output layers, thus making it more simple and generalized \n",
      "answerC": " it has no significance \n",
      "answerD": "none of the mentioned",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " The term generalized is used because delta rule could be extended to hidden layer units. \n "
    },
    {
      "id": "1796",
      "question": "What are general limitations of back propagation rule? \n",
      "answerA": " local minima problem \n",
      "answerB": " slow convergence \n",
      "answerC": " scaling \n",
      "answerD": "all of the mentioned",
      "correctAnswer": "d \n",
      "trackName": "Machine Learning",
      "explanation": " These all are limitations of backpropagation algorithm in general. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1797",
      "question": "What are the general tasks that are performed with backpropagation algorithm? \n",
      "answerA": " pattern mapping \n",
      "answerB": " function approximation \n",
      "answerC": " prediction \n",
      "answerD": "all of the mentioned",
      "correctAnswer": "d \n",
      "trackName": "Machine Learning",
      "explanation": " These all are the tasks that can be performed with backpropagation algorithm in general. \n "
    },
    {
      "id": "1798",
      "question": "Does backpropagaion learning is based on gradient descent along error surface? \n",
      "answerA": " yes \n",
      "answerB": " no \n",
      "answerC": " cannot be said \n",
      "answerD": "it depends on gradient descent but not error surface",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " Weight adjustment is proportional to negative gradient of error with respect to weight. \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1799",
      "question": "How can learning process be stopped in backpropagation rule? \n",
      "answerA": " there is convergence involved \n",
      "answerB": " no heuristic criteria exist \n",
      "answerC": " on basis of average gradient value \n",
      "answerD": "none of the mentioned",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": " If average gadient value fall below a preset threshold value, the process may be stopped. \n Sanfoundry Global Education & Learning Series \u2013 Neural Networks. \n To practice all areas of Neural Networks,  here is complete set on 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Neural Network Questions and Answers \u2013 Pattern Recognition \u00bb  Next - Neural Networks Questions and Answers \u2013 Backpropagation Algorithm \u2013 Set 2   Related Posts: Check  Neural Networks Books \n Practice  Electronics & Communication Engineering MCQs \n Apply for  Electronics & Communication Engineering Internship \n Check  Electrical & Electronics Engineering Books \n Apply for  Electrical & Electronics Engineering Internship \n    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Neural Networks Questions and Answers \u2013 Backpropagation Algorithm \u2013 Set 2  \n Neural Network Questions and Answers \u2013 Pattern Association \u2013 2  \n Neural Network Questions and Answers \u2013 Multi Layer Feedforward Neural Network  \n Neural Networks Questions and Answers \u2013 Backpropagation Algorithm \u2013 Set 3  \n Neural Networks Questions and Answers \u2013 Introduction of Feedback Neural Network  \n Neural Network Questions and Answers \u2013 Competitive Learning Neural Nework Introduction  \n Neural Network Questions and Answers \u2013 Applications of Neural Networks \u2013 1  \n Neural Network Questions and Answers \u2013 Applications of Neural Networks \u2013 2  \n Neural Networks MCQ (Multiple Choice Questions)  \n Neural Network Questions and Answers \u2013 Analysis of Linear Autoassociative FF Network  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Neural Networks MCQ Questions Cryptography and Network Security MCQ Questions C++ Algorithm Library Network Theory MCQ Questions Computer Network MCQ Questions Popular Pages: Searching and Sorting Algorithms in C R Programming MCQ Questions Searching Algorithms in Java Electronics and Communication Engineering Questions and Answers Sorting Algorithms in Java    .inside-article  \n  #post-##  \n \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Neural Networks MCQs \n \n \n \n \n Introduction \n Neural Network Introduction \n \n Basics of Artificial Neural Networks \n Neural Characteristics - 1 \n Neural Characteristics - 2 \n Neural Characteristics - 3 \n Neural Networks History \n Neural Terminology \n Neural Networks Models - 1 \n Neural Networks Models - 2 \n Neural Networks Topology \n Neural Network Learning - 1 \n Neural Network Learning - 2 \n \n Activation & Synaptic Dynamics \n Neural Network Dynamics \n Activation Models \n Learning Basics - 1 \n Learning Basics - 2 \n Learning Laws - 1 \n Learning Laws - 2 \n Stability & Convergence \n Recall \n \n Feedforward Neural Networks \n Pattern Association - 1 \n Pattern Association - 2 \n Weight Determination \n Pattern Classification - 1 \n Pattern Classification - 2 \n Pattern Mapping \n Pattern Recognition \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Pattern Storage Analysis \n \n Feedback Neural Networks \n Feedback Neural Network \n FF Network Analysis \n Pattern Storage Networks-1 \n Pattern Storage Networks-2 \n Hopfield Model - 1 \n Hopfield Model - 2 \n Stochastic Networks \n Boltzman Machine - 1 \n Boltzman Machine - 2 \n \n Competitive Learning Neural Networks \n Learning Neural Network \n Feedback Layer \n Feature Mapping Network \n \n Complex Pattern Architectures & ANN Applications \n Associative Memories \n Multi Layer Neural Network \n ART \n Neural Applications - 1 \n Neural Applications - 2 \n \n Neural Networks in Machine Learning \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n Best Reference Books \n Neural Networks Books \n \n \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Neural Networks MCQ Questions Cryptography and Network Security MCQ Questions C++ Algorithm Library Network Theory MCQ Questions Computer Network MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Searching and Sorting Algorithms in C R Programming MCQ Questions Searching Algorithms in Java Electronics and Communication Engineering Questions and Answers Sorting Algorithms in Java \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Neural Networks MCQs \n \n Introduction \n Neural Network Introduction \n \n Basics of Artificial Neural Networks \n Neural Characteristics - 1 \n Neural Characteristics - 2 \n Neural Characteristics - 3 \n Neural Networks History \n Neural Terminology \n Neural Networks Models - 1 \n Neural Networks Models - 2 \n Neural Networks Topology \n Neural Network Learning - 1 \n Neural Network Learning - 2 \n \n Activation & Synaptic Dynamics \n Neural Network Dynamics \n Activation Models \n Learning Basics - 1 \n Learning Basics - 2 \n Learning Laws - 1 \n Learning Laws - 2 \n Stability & Convergence \n Recall \n \n Feedforward Neural Networks \n Pattern Association - 1 \n Pattern Association - 2 \n Weight Determination \n Pattern Classification - 1 \n Pattern Classification - 2 \n Pattern Mapping \n Pattern Recognition \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Pattern Storage Analysis \n \n Feedback Neural Networks \n Feedback Neural Network \n FF Network Analysis \n Pattern Storage Networks-1 \n Pattern Storage Networks-2 \n Hopfield Model - 1 \n Hopfield Model - 2 \n Stochastic Networks \n Boltzman Machine - 1 \n Boltzman Machine - 2 \n \n Competitive Learning Neural Networks \n Learning Neural Network \n Feedback Layer \n Feature Mapping Network \n \n Complex Pattern Architectures & ANN Applications \n Associative Memories \n Multi Layer Neural Network \n ART \n Neural Applications - 1 \n Neural Applications - 2 \n \n Neural Networks in Machine Learning \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n Best Reference Books \n Neural Networks Books \n \n \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.489 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-02 23:50:40  \n  Compression = gzip "
    },
    {
      "id": "1800",
      "question": "The cost function for logistic regression and linear regression are the same. \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "d \n",
      "trackName": "Machine Learning",
      "explanation": " Logistic regression deals with classification based problems or probability based, whereas linear regression is more based on regression problems. Obviously, the two cost functions are different. \n \n \n \n \n \n \n "
    },
    {
      "id": "1801",
      "question": "h(x) = y. What is the cost (h(x), y)? \n",
      "answerA": " -infinite \n",
      "answerB": " infinite \n",
      "answerC": "0",
      "answerD": "always h(x)",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": " The cost function is used to determine the similarity between the two parameters. The more the similarity, higher is the tendency of cost function approaching zero. Since h(x) = y here, the cost function is "
    },
    {
      "id": "1802",
      "question": "What is the generalized cost function? \n",
      "answerA": " cost(h(x),y) = -y*log(h(x)) \u2013 (1 \u2013 y)*log(1-h(x)) \n",
      "answerB": " cost(h(x),y) = \u2013 (1 \u2013 y)*log(1-h(x)) \n",
      "answerC": " cost(h(x),y) = -y*log(h(x)) \n",
      "answerD": " cost(h(x),y) = y*log(h(x)) + (1 \u2013 y)*log(1-h(x)) ",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " cost(h(x),y) = -y*log(h(x)) when y = 1, and \u2013 (1 \u2013 y)*log(1-h(x)) when y = 0 \nThus the generalized function cost(h(x),y) = -y*log(h(x)) \u2013 (1 \u2013 y)*log(1-h(x)) becomes \ncost(h(x),y) = -y*log(h(x)) when y = 1 as (1 \u2013 y) is 0 and becomes \u2013 (1 \u2013 y)*log(1-h(x)) when y = "
    },
    {
      "id": "1803",
      "question": "Let m be the number of training instances. What is the summation of cost function multiplied by to get the gradient descent? \n",
      "answerA": " 1/m \n",
      "answerB": " m \n",
      "answerC": " 1 + m \n",
      "answerD": "1 \u2013 m",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " Since the summation is taken of all the cost functions starting from training instance 1 to training instance m, an average needs to be taken to get the actual cost function. So, it is multiplied by 1/m. \n \n "
    },
    {
      "id": "1804",
      "question": "How does cost(h(x), y) change with h(x)? \n",
      "answerA": " cost(h(x), y) = infinite when h(x) = 1 \n",
      "answerB": " cost(h(x), y) = 0 when h(x) = 0 \n",
      "answerC": " cost(h(x), y) = 0 when h(x) = 1 \n",
      "answerD": "it is independent of h(x)",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": " Since, the actual output is 1, the calculated output tending toward 1 will reduce the cost function. Thus cost function is 0 when h(x) is 1 and it is infinite when h(x) = "
    },
    {
      "id": "1805",
      "question": "Who invented gradient descent? \n",
      "answerA": " Ross Quinlan \n",
      "answerB": " Leslie Valiant \n",
      "answerC": " Thomas Bayes \n",
      "answerD": "Augustin-Louis Cauchy",
      "correctAnswer": "d \n",
      "trackName": "Machine Learning",
      "explanation": "Cauchy invented gradient descent in"
    },
    {
      "id": "1806",
      "question": "When was gradient descent invented? \n",
      "answerA": "1847",
      "answerB": "1947",
      "answerC": "1857",
      "answerD": "1957",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " Augustin-Louis Cauchy, a French mathematician invented the concept of gradient descent in "
    },
    {
      "id": "1807",
      "question": "What is the cost (h(x), y)? \n",
      "answerA": " -infinite \n",
      "answerB": " infinite \n",
      "answerC": "0",
      "answerD": "always h(x)",
      "correctAnswer": "b \n",
      "trackName": "Machine Learning",
      "explanation": " The cost function determines the similarity between the actual output and the calculated output. The lesser the similarity, the higher is the cost function. It is maximum (infinite) when h(x) and y are the exact opposite. \n \n Sanfoundry Global Education & Learning Series \u2013 Machine Learning . \n \n advertisement \n \n \n \n \n To practice all areas of Machine Learning,   here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Machine Learning Questions and Answers \u2013 Logistic Regression \u2013 Decision Boundary \u00bb  Next - Machine Learning Questions and Answers \u2013 Logistic Regression \u2013 Advanced Optimization    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Machine Learning Questions and Answers \u2013 Logistic Regression \u2013 Decision Boundary  \n Machine Learning Questions and Answers \u2013 Linear Regression \u2013 Gradient Descent  \n Machine Learning Questions and Answers \u2013 Linear Regression \u2013 Cost Function  \n Machine Learning Questions and Answers \u2013 Logistic Regression \u2013 Multiple Classification  \n Machine Learning Questions and Answers \u2013 Logistic Regression \u2013 Advanced Optimization  \n Logistic Regression Questions and Answers  \n Machine Learning Questions and Answers \u2013 Gradient Descent for Multiple Variables  \n Linear Regression in Machine Learning Questions and Answers  \n Polynomial Regression in Machine learning Questions and Answers  \n Machine Learning Questions and Answers \u2013 Hypothesis Representation  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Electrical Machine Design MCQ Questions Machine Design MCQ Questions Probability and Statistics MCQ Questions Machine Tools MCQ Questions Data Science MCQ Questions Popular Pages: Theory of Machine MCQ Questions Machine Drawing MCQ Questions R Programming MCQ Questions Automata Theory MCQ Questions C++ Algorithm Library    .inside-article  \n  #post-##  \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Machine Learning MCQs \n \n \n \n \n Formal Learning Model \n Statistical Learning Framework \n Empirical Minimization Framework \n PAC Learning \n \n Version Spaces \n Version Spaces \n Find-S Algorithm \n Candidate Elimination Algorithm \n \n VC-Dimension \n VC-Dimension - Set 1 \n VC-Dimension - Set 2 \n PAC Learning Theorem \n \n Linear Regression \n Linear Regression \n Cost Function \n Gradient Descent \n \n Multivariate Linear Regression \n Multivariate Linear Regression \n Variables Gradient Descent \n Polynomial Regression \n \n Logistic Regression \n Logistic Regression \n Hypothesis Representation \n Decision Boundary \n Cost Function & Gradient Descent \n Advanced Optimization \n Multiple Classification \n \n Ensemble Learning \n Model Combination Schemes \n Ensemble Learning \n Error Correcting Codes \n Boosting Weak Learnability \n Adaboost Algorithm \n Stacking \n \n Stochastic Gradient Descent \n Gradient Descent Algorithm \n Subgradient Descent \n Stochastic Gradient Descent \n Stochastic Gradient Descent - 2 \n SGD Variants \n \n Kernels \n Kernels \n Kernel Trick \n \n Support Vector Machines \n Support Vector Machines \n Large Margin Intuition \n Margin & Hard SVM \n Soft SVM & Norm Regularization \n Optimality Conditions and Support Vectors \n Soft SVM Implementation \n \n Decision Trees \n Decision Trees \n Gain Measure Implementation \n Decision Tree Pruning - 1 \n Decision Tree Pruning - 2 \n Threshold Splitting Rules \n Inductive Bias \n Classification Tree \n Regression Trees \n Random Forest Algorithm \n \n Nearest Neighbour \n K-Nearest Neighbor Algorithm \n Nearest Neighbor Analysis \n \n Naive-Bayes Algorithm \n Naive-Bayes Algorithm \n \n Neural Networks in Machine Learning \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Electrical Machine Design MCQ Questions Machine Design MCQ Questions Probability and Statistics MCQ Questions Machine Tools MCQ Questions Data Science MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Theory of Machine MCQ Questions Machine Drawing MCQ Questions R Programming MCQ Questions Automata Theory MCQ Questions C++ Algorithm Library \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Machine Learning MCQs \n \n Formal Learning Model \n Statistical Learning Framework \n Empirical Minimization Framework \n PAC Learning \n \n Version Spaces \n Version Spaces \n Find-S Algorithm \n Candidate Elimination Algorithm \n \n VC-Dimension \n VC-Dimension - Set 1 \n VC-Dimension - Set 2 \n PAC Learning Theorem \n \n Linear Regression \n Linear Regression \n Cost Function \n Gradient Descent \n \n Multivariate Linear Regression \n Multivariate Linear Regression \n Variables Gradient Descent \n Polynomial Regression \n \n Logistic Regression \n Logistic Regression \n Hypothesis Representation \n Decision Boundary \n Cost Function & Gradient Descent \n Advanced Optimization \n Multiple Classification \n \n Ensemble Learning \n Model Combination Schemes \n Ensemble Learning \n Error Correcting Codes \n Boosting Weak Learnability \n Adaboost Algorithm \n Stacking \n \n Stochastic Gradient Descent \n Gradient Descent Algorithm \n Subgradient Descent \n Stochastic Gradient Descent \n Stochastic Gradient Descent - 2 \n SGD Variants \n \n Kernels \n Kernels \n Kernel Trick \n \n Support Vector Machines \n Support Vector Machines \n Large Margin Intuition \n Margin & Hard SVM \n Soft SVM & Norm Regularization \n Optimality Conditions and Support Vectors \n Soft SVM Implementation \n \n Decision Trees \n Decision Trees \n Gain Measure Implementation \n Decision Tree Pruning - 1 \n Decision Tree Pruning - 2 \n Threshold Splitting Rules \n Inductive Bias \n Classification Tree \n Regression Trees \n Random Forest Algorithm \n \n Nearest Neighbour \n K-Nearest Neighbor Algorithm \n Nearest Neighbor Analysis \n \n Naive-Bayes Algorithm \n Naive-Bayes Algorithm \n \n Neural Networks in Machine Learning \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.662 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 00:35:28  \n  Compression = gzip "
    },
    {
      "id": "1808",
      "question": "In error-correcting output codes (ECOC), the main classification task is defined in terms of a number of subtasks that are implemented by the base-learners. \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " In multi-class problems the original task of separating one class from all other classes may be difficult. So we want to define a set of simpler classification problems, where each specializing in one aspect of the task. And we get the final classifier by combining these simpler classifiers. \n \n \n \n \n \n \n "
    },
    {
      "id": "1809",
      "question": "Which of the following statements is not true about error-correcting output codes (ECOC)? \n",
      "answerA": " It is a method for solving multi-class classification problems \n",
      "answerB": " It is a method for decomposing a multiway classification problem into many binary classification tasks \n",
      "answerC": " It is a method for solving binary classification problems \n",
      "answerD": "It is a method for converting a  k -class supervised learning problem into a large number of two class supervised learning problem",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": " Error-correcting output coding is not a method for solving binary classification problems. It is a method for solving multi-class classification problems. Here a  k -class supervised learning problem (multiway classification problem) is converted into a large number  L  of two class supervised learning problems (binary classification tasks). \n \n "
    },
    {
      "id": "1810",
      "question": "Which of the following statements is not true about multi-class classification? \n",
      "answerA": " An input can belong to one of  K  classes \n",
      "answerB": " Each input belongs to exactly one class \n",
      "answerC": " Each training data associated with class labels which is a number from  1  to  K \n",
      "answerD": "Each input belongs to more than one class",
      "correctAnswer": "d \n",
      "trackName": "Machine Learning",
      "explanation": " In a multi-class classification problem, an input cannot belong to more than one class. Here an input can belong to one of  K  classes, but each input belongs to exactly one class. And the training data input is associated with a class label (a number from  1  to  K ). \n \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1811",
      "question": "Which of the following statements is false about error-correcting output codes (ECOC)? \n",
      "answerA": " It is based on the embedding of binary classifiers \n",
      "answerB": " The ECOC designs are independent of the base classifier applied \n",
      "answerC": " ECOC framework consists of designing a codeword for each of the classes \n",
      "answerD": "The ECOC designs are dependent on the base classifier applied",
      "correctAnswer": "d \n",
      "trackName": "Machine Learning",
      "explanation": " ECOC designs are not dependent on the base classifier applied and are independent of the base classifier applied. ECOC is the powerful framework based on the embedding of binary classifiers. It consists of designing a codeword for each of the classes and these codewords encode the membership information of each class for a given binary problem. \n \n "
    },
    {
      "id": "1812",
      "question": "Which of the following is not a problem independent ECOC design? \n",
      "answerA": " One-versus-all \n",
      "answerB": " SFFS criterion \n",
      "answerC": " One-versus-one \n",
      "answerD": "Dense Random",
      "correctAnswer": "b \n",
      "trackName": "Machine Learning",
      "explanation": " Sequential Forward Floating Search (SFFS) is not a problem independent ECOC design. It is a method used in problem dependent ECOC design for feature selection. And all other three are the problem independent ECOC designs. \n \n \n \n \n \n \n "
    },
    {
      "id": "1813",
      "question": "Which of the following is not a problem dependent ECOC design? \n",
      "answerA": " Sparse Random \n",
      "answerB": " DECOC \n",
      "answerC": " ECOC-ONE \n",
      "answerD": "Forest-ECOC",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " Sparse Random is not a problem dependent ECOC design and it is a problem independent ECOC design. It uses  n = 15 \u00b7 logNc  dichotomizers. All other three are the problem dependent ECOC designs. \n \n "
    },
    {
      "id": "1814",
      "question": "Which of the following ECOC designs uses  n = (Nc\u22121).T  dichotomizers, where  T  stands for the number of binary tree structures to be embedded? \n",
      "answerA": " DECOC \n",
      "answerB": " One-versus-all \n",
      "answerC": " Forest-ECOC \n",
      "answerD": "One-versus-one",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": " Forest-ECOC design uses  n = (Nc\u22121).T  dichotomizers, where  T  stands for the number of binary tree structures to be embedded. Whereas the DECOC design uses  n = Nc\u22121  dichotomizers, One-versus-all uses  Nc  dichotomizers and One-versus-one uses  n = Nc(Nc\u22121)/2  dichotomizers. \n \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1815",
      "question": "Forest-ECOC design which uses  n = (Nc\u22121).T  dichotomizers, extends the variability of the classifiers of the DECOC design. \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " Forest-ECOC design uses  n = (Nc\u22121).T  dichotomizers, where  T  stands for the number of binary tree structures to be embedded. Whereas the DECOC design uses  n = Nc\u22121  dichotomizers. So Forest-ECOC design extends the variability of the classifiers of the DECOC design by including extra dichotomizers  T  (number of binary tree structures to be embedded). \n \n "
    },
    {
      "id": "1816",
      "question": "Problem independent ECOC design and Problem dependent ECOC design are the two types of  ECOC decoding strategies. \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Machine Learning",
      "explanation": " Problem independent ECOC design and Problem dependent ECOC design are not the two types of ECOC decoding strategies. The ECOC coding designs are mainly divided into two main groups: problem-independent approaches, and the problem-dependent designs. Hamming decoding, Euclidean decoding etc. are the ECOC decoding strategies. \n \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1817",
      "question": "Given the two strings \u201ccats\u201d and \u201cdogs\u201d. What is the Hamming distance between two strings? \n",
      "answerA": "4",
      "answerB": "3",
      "answerC": "2",
      "answerD": "5",
      "correctAnswer": "b \n",
      "trackName": "Machine Learning",
      "explanation": " The Hamming distance between two strings of equal length is the number of positions at which the corresponding symbols are different. It is the number of substitutions required to transform one string into another. \ncats \u21d2 dats (substitute \u2018d\u2019 for \u2018c\u2019) \ndats \u21d2 dots (substitute \u2018o\u2019 for \u2018a\u2019) \ndots \u21d2 dogs (substitute \u2018g\u2019 for \u2018t\u2019) \nSo hamming distance is 3 as it requires 3 edit operations to convert \u201ccats\u201d to \u201cdogs\u201d. \n \n "
    },
    {
      "id": "1818",
      "question": "What is the hamming distance between the binary values 100111010 and 101111111? \n",
      "answerA": "9",
      "answerB": "7",
      "answerC": "5",
      "answerD": "3",
      "correctAnswer": "d \n",
      "trackName": "Machine Learning",
      "explanation": " Hamming distance between two strings of equal length is the minimum number of substitutions required to change one string into the other. \n100111010 \u21d2 101111010 \n101111010 \u21d2 101111110 \n101111110 \u21d2 101111111 \nSo hamming distance is 3 as it requires 3 edit operations to convert 100111010 to "
    },
    {
      "id": "1819",
      "question": "How many single bit errors take to turn \u201ccow\u201d to \u201cfox\u201d? \n",
      "answerA": "2",
      "answerB": "0",
      "answerC": "1",
      "answerD": "3",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " The number of single bit errors taken to turn one string into another is known as the hamming distance. \ncow \u21d2 fow (substitute \u2018f\u2019 for \u2018c\u2019) \nfow \u21d2 fox (substitute \u2018x\u2019 for \u2018w\u2019) \nSo the number of single bit errors taken to turn \u201ccow\u201d to \u201cfox\u201d is "
    },
    {
      "id": "1820",
      "question": "The Soft SVM assumes that the training set is linearly separable. \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Machine Learning",
      "explanation": " The Soft SVM did not assume that the training set is linearly separable. But the Hard SVM assumes that the training set is linearly separable. And Soft SVM can be applied even if the training set is not linearly separable. \n \n \n \n \n \n \n "
    },
    {
      "id": "1821",
      "question": "Soft SVM is an extended version of Hard SVM. \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " Soft SVM is an extended version of Hard SVM. Hard SVM can work only when data is completely linearly separable without any errors (noise or outliers). If there are errors then either the margin is smaller or hard margin SVM fails. And Soft SVM was proposed to solve this problem by introducing slack variables. \n \n "
    },
    {
      "id": "1822",
      "question": "Linear Soft margin SVM can only be used when the training data are linearly separable. \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Machine Learning",
      "explanation": " The Linear Soft margins SVM are not used when the training data are linearly separable but can use Hard SVM only. Because linear separability of the training data is a strong assumption in Hard SVM. And Soft SVM can be applied if the training set is not linearly separable. \n \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1823",
      "question": "The problem can be solved using Soft SVM. \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " The given problem is a one dimensional two-class classification problem. Here the points x 1 , x 2 , and x 3  have class labels +1 and x 4  has class label -"
    },
    {
      "id": "1824",
      "question": "The problem can never be solved using Hard SVM. \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Machine Learning",
      "explanation": " The given problem is a one dimensional two-class classification problem and the data points are non-linearly separable. So the problem cannot be solved by the Hard SVM directly. But it can be solved using Hard SVM if the one dimensional data set is transformed into a 2-dimensional dataset using some function like (x, x 2 ). Then the problem is linearly separable and can be solved by Hard SVM. \n \n \n \n \n \n \n "
    },
    {
      "id": "1825",
      "question": "Which of the following statements is not true about the picture shown below? \n \n",
      "answerA": " The data are not completely separable \n",
      "answerB": " Slack variables can be introduced to the objective function to allow error in the misclassification \n",
      "answerC": " Soft SVM can be used here to classify the data correctly \n",
      "answerD": "Hard SVM can be used here to classify the data flawlessly",
      "correctAnswer": "d \n",
      "trackName": "Machine Learning",
      "explanation": " Here we cannot use Hard SVM to classify the data flawlessly, because the data are not completely separable. But we can use Soft SVM for the same classification purpose. And can introduce slack variables to the SVM objective function to allow the error in the misclassification. \n \n "
    },
    {
      "id": "1826",
      "question": "The SVM relies on hinge loss. \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " The SVM relies on hinge loss. Because hinge loss is convex and, therefore minimizing the hinge loss can be performed efficiently. But the problem of minimising the other losses is computationally intractable. \n \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1827",
      "question": "Which of the following statements is not true about Soft SVM classification? \n",
      "answerA": " If the data are non separable it needs to introduce some tolerance to outlier data points \n",
      "answerB": " If the data are non separable, slack variable can be added to allow misclassification of noisy examples \n",
      "answerC": " If the data are non separable it will add one slack variable greater than or equal to zero for each training data point \n",
      "answerD": "The slack variable value is greater than one for the  points that are on the correct side of the margin",
      "correctAnswer": "d \n",
      "trackName": "Machine Learning",
      "explanation": " The slack variable value is equal to zero for the points that are on the correct side of the margin. And if the data are non-separable it introduces some tolerance to outlier data points (slack variable). And the value of the slack variable will be greater than or equal to zero. \n \n "
    },
    {
      "id": "1828",
      "question": "The slack variable value of the point on the decision boundary of the Soft SVM is equal to one. \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " The slack variable value of the point on the decision boundary of the Soft SVM is equal to one. Slack variables are introduced to allow certain constraints to be violated. That is, certain training points will be allowed to be within the margin. \n \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1829",
      "question": "The slack variables value \u03be i  \u2265 1 for misclassified points, and 0 < \u03be i  < 1 for points close to the decision boundary. \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " The slack variables \u03be i  \u2265 1 for misclassified points, and 0 < \u03be i  < 1 for points close to the decision boundary. For non separable data it aims to both maximize the margin and minimize violation of the margin constraints. So one slack variable \u03be must be optimized for each data point. \n \n "
    },
    {
      "id": "1830",
      "question": "The bounds derived for Soft-SVM do not depend on the dimension of the instance space. \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " The bounds derived for Soft-SVM do not depend on the dimension of the instance space. The bounds depend on the norm of the examples, the norm of the half-space. And in the non-separable case, the bounds also depend on the minimum hinge loss of all half-spaces of norm less than or equal to half-space. \n \n Sanfoundry Global Education & Learning Series \u2013 Machine Learning . \n To practice all areas of Machine Learning,   here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Machine Learning Questions and Answers \u2013 Margin and Hard SVM \u00bb  Next - Machine Learning Questions and Answers \u2013 Optimality Conditions and Support Vectors    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Machine Learning Questions and Answers \u2013 Implementing Soft SVM with SGD  \n Machine Learning Questions and Answers \u2013 Margin and Hard SVM  \n Machine Learning Questions and Answers \u2013 Kernels  \n Machine Learning Questions and Answers \u2013 Large Margin Intuition  \n Machine Learning Questions and Answers \u2013 Statistical Learning Framework  \n Machine Learning MCQ (Multiple Choice Questions)  \n Linear Regression in Machine Learning Questions and Answers  \n Machine Learning Questions and Answers \u2013 PAC Learning  \n Machine Learning Questions and Answers \u2013 Find-S Algorithm  \n Machine Learning Questions and Answers \u2013 Empirical Minimization Framework  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Electrical Machine Design MCQ Questions Machine Design MCQ Questions Theory of Machine MCQ Questions Machine Tools MCQ Questions Machine Drawing MCQ Questions Popular Pages: Free Online Training Courses Online Trainings by CTO Searching and Sorting Algorithms in C Advanced C Programming R Programming MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Machine Learning MCQs \n \n \n \n \n Formal Learning Model \n Statistical Learning Framework \n Empirical Minimization Framework \n PAC Learning \n \n Version Spaces \n Version Spaces \n Find-S Algorithm \n Candidate Elimination Algorithm \n \n VC-Dimension \n VC-Dimension - Set 1 \n VC-Dimension - Set 2 \n PAC Learning Theorem \n \n Linear Regression \n Linear Regression \n Cost Function \n Gradient Descent \n \n Multivariate Linear Regression \n Multivariate Linear Regression \n Variables Gradient Descent \n Polynomial Regression \n \n Logistic Regression \n Logistic Regression \n Hypothesis Representation \n Decision Boundary \n Cost Function & Gradient Descent \n Advanced Optimization \n Multiple Classification \n \n Ensemble Learning \n Model Combination Schemes \n Ensemble Learning \n Error Correcting Codes \n Boosting Weak Learnability \n Adaboost Algorithm \n Stacking \n \n Stochastic Gradient Descent \n Gradient Descent Algorithm \n Subgradient Descent \n Stochastic Gradient Descent \n Stochastic Gradient Descent - 2 \n SGD Variants \n \n Kernels \n Kernels \n Kernel Trick \n \n Support Vector Machines \n Support Vector Machines \n Large Margin Intuition \n Margin & Hard SVM \n Soft SVM & Norm Regularization \n Optimality Conditions and Support Vectors \n Soft SVM Implementation \n \n Decision Trees \n Decision Trees \n Gain Measure Implementation \n Decision Tree Pruning - 1 \n Decision Tree Pruning - 2 \n Threshold Splitting Rules \n Inductive Bias \n Classification Tree \n Regression Trees \n Random Forest Algorithm \n \n Nearest Neighbour \n K-Nearest Neighbor Algorithm \n Nearest Neighbor Analysis \n \n Naive-Bayes Algorithm \n Naive-Bayes Algorithm \n \n Neural Networks in Machine Learning \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Electrical Machine Design MCQ Questions Machine Design MCQ Questions Theory of Machine MCQ Questions Machine Tools MCQ Questions Machine Drawing MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Free Online Training Courses Online Trainings by CTO Searching and Sorting Algorithms in C Advanced C Programming R Programming MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Machine Learning MCQs \n \n Formal Learning Model \n Statistical Learning Framework \n Empirical Minimization Framework \n PAC Learning \n \n Version Spaces \n Version Spaces \n Find-S Algorithm \n Candidate Elimination Algorithm \n \n VC-Dimension \n VC-Dimension - Set 1 \n VC-Dimension - Set 2 \n PAC Learning Theorem \n \n Linear Regression \n Linear Regression \n Cost Function \n Gradient Descent \n \n Multivariate Linear Regression \n Multivariate Linear Regression \n Variables Gradient Descent \n Polynomial Regression \n \n Logistic Regression \n Logistic Regression \n Hypothesis Representation \n Decision Boundary \n Cost Function & Gradient Descent \n Advanced Optimization \n Multiple Classification \n \n Ensemble Learning \n Model Combination Schemes \n Ensemble Learning \n Error Correcting Codes \n Boosting Weak Learnability \n Adaboost Algorithm \n Stacking \n \n Stochastic Gradient Descent \n Gradient Descent Algorithm \n Subgradient Descent \n Stochastic Gradient Descent \n Stochastic Gradient Descent - 2 \n SGD Variants \n \n Kernels \n Kernels \n Kernel Trick \n \n Support Vector Machines \n Support Vector Machines \n Large Margin Intuition \n Margin & Hard SVM \n Soft SVM & Norm Regularization \n Optimality Conditions and Support Vectors \n Soft SVM Implementation \n \n Decision Trees \n Decision Trees \n Gain Measure Implementation \n Decision Tree Pruning - 1 \n Decision Tree Pruning - 2 \n Threshold Splitting Rules \n Inductive Bias \n Classification Tree \n Regression Trees \n Random Forest Algorithm \n \n Nearest Neighbour \n K-Nearest Neighbor Algorithm \n Nearest Neighbor Analysis \n \n Naive-Bayes Algorithm \n Naive-Bayes Algorithm \n \n Neural Networks in Machine Learning \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.215 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 00:35:41  \n  Compression = gzip "
    },
    {
      "id": "1831",
      "question": "Which of the following is not a variant of stochastic gradient descent? \n",
      "answerA": " Adding a projection step \n",
      "answerB": " Variable step size \n",
      "answerC": " Strongly convex functions \n",
      "answerD": "Strongly non convex functions",
      "correctAnswer": "d \n",
      "trackName": "Machine Learning",
      "explanation": " There are several variants of Stochastic Gradient Descent (SGD). Strongly non convex functions are not a variant of stochastic gradient descent. Where adding a projection step, variable step size, and strongly convex functions are three variants of (SGD) which is used to improve it. \n \n \n \n \n \n \n "
    },
    {
      "id": "1832",
      "question": "Projection step is used to overcome the problem while maintaining the same convergence rate. \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " Gradient descent and stochastic gradient descent are restricting  w*  to a  B -bounded hypothesis class ( w*  is in the set  H = {w : \u2225w\u2225 \u2264 B} ). So any step in the opposite direction of the gradient might result in stepping out of this bound. And projection step is used to overcome this problem while maintaining the same convergence rate. \n \n "
    },
    {
      "id": "1833",
      "question": "Which of the following statements is not true about two-step update rule? \n",
      "answerA": " Two-step update rule is a way to add a projection step \n",
      "answerB": " First subtract a sub-gradient from the current value of  w  and then project the resulting vector onto  H \n",
      "answerC": " First add a sub-gradient to the current value of  w  and then project the resulting vector onto  H \n",
      "answerD": "The projection step replaces the current value of  w  by the vector in  H  closest to it",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": " In two-step update rule, we are not adding a sub-gradient to the current value of  w . The two-step rule is a way to add a projection step, where we first subtract a sub-gradient from the current value of  w  and then project the resulting vector onto  H . Then it replaces the current value of w by the vector in  H  closest to it. \n \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1834",
      "question": "Variable step size decrease the step size as a function of iteration,  t . \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " Variable step size decrease the step size as a function of iteration,  t . It updates the value of  w  with  \u03b7 t  rather than updating with a constant  \u03b7 . When it is closer to the minimum of the function, it takes the steps more carefully, so as not to overshoot the minimum. \n \n "
    },
    {
      "id": "1835",
      "question": "Which of the following statements is not true about kernel? \n",
      "answerA": " Kernel is used to describe inner products in the feature space \n",
      "answerB": " The kernel function  K  specify the similarity between instances \n",
      "answerC": " The kernel function  K  specify the embedding as mapping the domain set into a space \n",
      "answerD": "The kernel function does the mapping of the domain set into a space where the similarities are realised as outer products",
      "correctAnswer": "d \n",
      "trackName": "Machine Learning",
      "explanation": " Mathematical meaning of a kernel is the inner product in some Hilbert space not the outer products. And it is a type of a similarity measure between instances. When we are embedding the data into a high dimensional feature space we introduce the idea of kernels. \n \n "
    },
    {
      "id": "1836",
      "question": "Many learning algorithms for half-spaces can be carried out just on the basis of the values of the kernel function over pairs of domain points. \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " Many learning algorithms for half-spaces can be carried out just on the basis of the values of the kernel function over pairs of domain points. One of the main advantages of such algorithms is that they implement linear separators in high dimensional feature spaces without having to specify points in that space or expressing the embedding explicitly. \n \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1837",
      "question": "Which of the following statements is not true about the learning algorithms? \n",
      "answerA": " A feature mapping can be viewed as expanding the class of linear classifiers to a richer class \n",
      "answerB": " The suitability of any hypothesis class to a given learning task depends on the nature of that task \n",
      "answerC": " An embedding is a way to express and utilise prior knowledge about the problem at hand \n",
      "answerD": "The sample complexity required to learn with some kinds of kernels is independent of the margin in the feature space",
      "correctAnswer": "d \n",
      "trackName": "Machine Learning",
      "explanation": " Sample complexity required to learn with some kinds of kernels (Gaussian kernels) depends on the margin in the feature space which will be large, but can in general be arbitrarily small. All three other statements are true about learning algorithms. \n \n "
    },
    {
      "id": "1838",
      "question": "A Hilbert space is a vector space with an inner product, which is also complete. \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " A Hilbert space is a vector space with an inner product, which is also complete. An inner product space  X  is called a Hilbert space if it is a complete metric space. And it is complete if all Cauchy sequences in the space converge. In feature mapping it maps the original instances into some Hilbert space. \n \n \n \n \n \n \n "
    },
    {
      "id": "1839",
      "question": "The  k  degree polynomial kernel is defined as K(x, x \u2019 ) = (1 + <x, x \u2019 >) k . \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " The k degree polynomial kernel is defined as K(x, x \u2019 ) = (1 + <x, x \u2019 >) k  where  k  is the degree of the polynomial. It is popular in image processing. \n \n "
    },
    {
      "id": "1840",
      "question": "Which of the following statements is not true about kernel trick? \n",
      "answerA": " It allows one to incorporate prior knowledge of the problem domain \n",
      "answerB": " The training data only enter the algorithm through their entries in the kernel matrix \n",
      "answerC": " The training data only enter the algorithm through their individual attributes \n",
      "answerD": "The number of operations required is not necessarily proportional to the number of features",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": " The training data only enter the algorithm through their entries in the kernel matrix (Gram matrix), and never through their individual attributes. All three are the advantages of kernel trick. \n \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1841",
      "question": "The Gaussian kernel is also called the RBF kernel, for Radial Basis Functions. \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " The Gaussian kernel is also called the RBF kernel, for Radial Basis Functions. RBF kernel is a kernel that is in the form of a radial basis function (more specifically, a Gaussian function). The RBF kernel is defined as :  K RBF (x, x\u2019) = exp[-\u01b4 \u01c1x \u2013 x\u2019\u01c1 2 ]. \n \n "
    },
    {
      "id": "1842",
      "question": "Spectrum Kernel count the number of substrings in common. \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " Spectrum Kernel counts the number of substrings in common. It is a kernel since it is a dot product between vectors of indicators of all the substrings. Other kernels like: Gaussian kernel is a general-purpose kernel, Polynomial kernel is popular in image processing and sigmoid kernel can be used as the proxy for neural networks. \n \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1843",
      "question": "Which of the following statements is not true about kernel trick? \n",
      "answerA": " It provides a bridge from linearity to non-linearity to any algorithm that can expressed solely on terms of dot products between two vectors \n",
      "answerB": " If we first map the input data into a higher-dimensional space, a linear algorithm operating in this space will behave non-linearly in the original input space \n",
      "answerC": " The mapping is always need to be computed \n",
      "answerD": " If the algorithm can be expressed only in terms of an inner product between two vectors, all it need is replacing this inner product with the inner product from some other suitable space ",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": " Kernel trick is really interesting because that mapping does not need to be ever computed. That is where the trick resides, so wherever a dot product is used; it is replaced with a Kernel function. All other three statements best explain the kernel trick. \n \n "
    },
    {
      "id": "1844",
      "question": "Which of the following statements is not true about kernel properties? \n",
      "answerA": " Kernel functions must be continuous \n",
      "answerB": " Kernel functions must be symmetric \n",
      "answerC": " Kernels which are said to satisfy the Mercer\u2019s theorem are negative semi-definite \n",
      "answerD": "Kernel functions most preferably should have a positive (semi-) definite Gram matrix",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": " Kernels which are said to satisfy the Mercer\u2019s theorem are positive semi-definite as there is a property that kernel functions most preferably should have a positive (semi-) definite Gram matrix. And positive semi-definite means that their kernel matrices have only non-negative Eigen values. \n \n "
    },
    {
      "id": "1845",
      "question": "Which of the following statements is not true about choosing the right kernel? \n",
      "answerA": " Linear kernel allows to picking out hyper spheres \n",
      "answerB": " A polynomial kernel allows to model feature conjunctions up to the order of the polynomial \n",
      "answerC": " Radial basis functions allow to pick out circles \n",
      "answerD": "Linear kernel allows picking out lines",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " A linear kernel allows only to picking out lines (hyper planes) and not to picking out hyper spheres (circles). Radial basis functions allow picking out circles and a polynomial kernel allows to model feature conjunctions up to the order of the polynomial. \n \n "
    },
    {
      "id": "1846",
      "question": "As per the given figure Kernel trick illustrates some fundamental ideas about different ways to represent data and how machine learning algorithms see these different data representations. \n \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " It is a kernel trick used in an SVM. Implementing support vector classifiers requires specifying a kernel function (\u03a6). Here in the picture the easily inseparable data is then transformed into a high dimensional feature space which is easily separable now using a kernel function. Kernel trick illustrates some fundamental ideas about different ways to represent data. \n \n Sanfoundry Global Education & Learning Series \u2013 Machine Learning . \n To practice all areas of Machine Learning,   here is complete set of 1000+ Multiple Choice Questions and Answers . \n \u00ab  Prev - Machine Learning Questions and Answers \u2013 Kernels \u00bb  Next - Support Vector Machines Questions and Answers    .entry-content  \n \n  .entry-meta  \n \n advertisement \n \n \n \n \n \n \n  YARPP List  \n Recommended Articles: \n Machine Learning Questions and Answers \u2013 Kernels  \n Linux Kernel Internals Training \u2013 VII \u2013 Process Address Space  \n Linux Kernel Internals Training \u2013 V \u2013 Kernel Data Structures  \n Linux Kernel Internals Training \u2013 IV \u2013 System Calls  \n Linux Kernel Debugging Training  \n Linux Kernel Internals Training \u2013 II \u2013 Process Management  \n Linux Kernel Internals Training \u2013 VI \u2013 Memory Management  \n Operating System Questions and Answers \u2013 User and Kernel Threads  \n Linux Kernel Internals Training \u2013 IX \u2013 Virtual Filesystem  \n Training on Kernel Level CDP Software Design & Implementation on Linux  \n \n \n \n \n advertisement \n \n \n \n \n Additional Resources: Signals and Systems MCQ Questions String Programs in C++ Computer Graphics MCQ Questions Free Online Training Courses JavaScript MCQ Questions Popular Pages: Operating System MCQ Questions Visual Basic MCQ Questions Digital Image Processing MCQ Questions Advanced C Programming Linux MCQ Questions    .inside-article  \n  #post-##  \n \n \n \n \nSubscribe to our  Newsletters (Subject-wise) . Participate in the Sanfoundry Certification  contest  to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs! \n Youtube  |  Telegram  |  LinkedIn  |  Instagram  |  Facebook  |  Twitter  |  Pinterest \n \n \n \n \n \n \n Manish Bhojasia , a technology veteran with 20+ years @ Cisco & Wipro, is Founder and    CTO at  Sanfoundry . He lives in Bangalore, and focuses on development of Linux Kernel, SAN Technologies, Advanced C,      Data Structures & Alogrithms.\nStay connected with him at  LinkedIn .\n \n \nSubscribe to his free Masterclasses at  Youtube  & discussions at  Telegram    SanfoundryClasses .\n \n \n  #main  \n  #primary  \n \n \n \n 1000 Machine Learning MCQs \n \n \n \n \n Formal Learning Model \n Statistical Learning Framework \n Empirical Minimization Framework \n PAC Learning \n \n Version Spaces \n Version Spaces \n Find-S Algorithm \n Candidate Elimination Algorithm \n \n VC-Dimension \n VC-Dimension - Set 1 \n VC-Dimension - Set 2 \n PAC Learning Theorem \n \n Linear Regression \n Linear Regression \n Cost Function \n Gradient Descent \n \n Multivariate Linear Regression \n Multivariate Linear Regression \n Variables Gradient Descent \n Polynomial Regression \n \n Logistic Regression \n Logistic Regression \n Hypothesis Representation \n Decision Boundary \n Cost Function & Gradient Descent \n Advanced Optimization \n Multiple Classification \n \n Ensemble Learning \n Model Combination Schemes \n Ensemble Learning \n Error Correcting Codes \n Boosting Weak Learnability \n Adaboost Algorithm \n Stacking \n \n Stochastic Gradient Descent \n Gradient Descent Algorithm \n Subgradient Descent \n Stochastic Gradient Descent \n Stochastic Gradient Descent - 2 \n SGD Variants \n \n Kernels \n Kernels \n Kernel Trick \n \n Support Vector Machines \n Support Vector Machines \n Large Margin Intuition \n Margin & Hard SVM \n Soft SVM & Norm Regularization \n Optimality Conditions and Support Vectors \n Soft SVM Implementation \n \n Decision Trees \n Decision Trees \n Gain Measure Implementation \n Decision Tree Pruning - 1 \n Decision Tree Pruning - 2 \n Threshold Splitting Rules \n Inductive Bias \n Classification Tree \n Regression Trees \n Random Forest Algorithm \n \n Nearest Neighbour \n K-Nearest Neighbor Algorithm \n Nearest Neighbor Analysis \n \n Naive-Bayes Algorithm \n Naive-Bayes Algorithm \n \n Neural Networks in Machine Learning \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n \n   \n \n \n \n \n \n \n    .inside-left-sidebar  \n  #secondary  \n \n \n   \n   \n \n \n \n \n \n \n   Related Topics Signals and Systems MCQ Questions String Programs in C++ Computer Graphics MCQ Questions Free Online Training Courses JavaScript MCQ Questions \n   \n \n \n \n \n \n \n   Popular Pages Operating System MCQ Questions Visual Basic MCQ Questions Digital Image Processing MCQ Questions Advanced C Programming Linux MCQ Questions \n   \n \n \n \n \n \n \n    .inside-right-sidebar  \n  #secondary  \n  #content  \n  #page  \n \n \n \n \n \n \n About  |  Certifications  |  Internships  |  Jobs  |  Privacy Policy  |  Terms  |  Copyright  |  Contact \n   \n \n \n \n \n \n \n\t\t\t\t\t\u00a9 2011-2024 Sanfoundry. All Rights Reserved.\t\t\t\t \n \n  .site-info  \n  .site-footer  \n \n Scroll back to top \n \n \n \n   \n \n Branchwise MCQs \n \n \n \n CS \u2013 IT \u2013 IS \n \n \n \n Programming \n CS \n IT \n IS \n \n \n ECE \u2013 EEE \u2013 EE \n \n \n \n ECE \n EEE \n EE \n \n \n Civil \n Mechanical \n Chemical \n Metallurgy \n Mining \n Instrumentation \n Aerospace \n Aeronautical \n Biotechnology \n Agriculture \n Marine \n Mechatronics \n MCA \n BCA \n \n \n School MCQs \n \n \n \n Class 8 \n \n \n \n Mathematics \u2013 8 \n \n \n Class 9 \n \n \n \n Mathematics \u2013 9 \n \n \n Class 10 \n \n \n \n Mathematics \u2013 10 \n \n \n Class 11 \n \n \n \n Physics \u2013 11 \n Chemistry \u2013 11 \n Mathematics \u2013 11 \n Biology \u2013 11 \n \n \n Class 12 \n \n \n \n Physics \u2013 12 \n Chemistry \u2013 12 \n Mathematics \u2013 12 \n Biology \u2013 12 \n \n \n \n \n DSA \n \n \n \n C Programs \n Algorithms in C \n Data Structures in C \n C++ Programs \n C++ Algorithms \n Data Structures in C++ \n Java Programs \n Java Algorithms \n Data Structures in Java \n Python Programs \n C# Programs \n \n \n Test \n \n \n \n All-Tests \n Certification \n Download Certificates \n \n \n Job \n \n \n \n Jobs & Placements \n Job Tests \n \n \n Internship \n \n \n \n All Internships \n Internship Tests \n \n \n Training \n Videos \n \n \n \n Advanced C Programming \n C Interview Questions \n Training Videos \n \n \n Books \n Contact \n \n 1000 Machine Learning MCQs \n \n Formal Learning Model \n Statistical Learning Framework \n Empirical Minimization Framework \n PAC Learning \n \n Version Spaces \n Version Spaces \n Find-S Algorithm \n Candidate Elimination Algorithm \n \n VC-Dimension \n VC-Dimension - Set 1 \n VC-Dimension - Set 2 \n PAC Learning Theorem \n \n Linear Regression \n Linear Regression \n Cost Function \n Gradient Descent \n \n Multivariate Linear Regression \n Multivariate Linear Regression \n Variables Gradient Descent \n Polynomial Regression \n \n Logistic Regression \n Logistic Regression \n Hypothesis Representation \n Decision Boundary \n Cost Function & Gradient Descent \n Advanced Optimization \n Multiple Classification \n \n Ensemble Learning \n Model Combination Schemes \n Ensemble Learning \n Error Correcting Codes \n Boosting Weak Learnability \n Adaboost Algorithm \n Stacking \n \n Stochastic Gradient Descent \n Gradient Descent Algorithm \n Subgradient Descent \n Stochastic Gradient Descent \n Stochastic Gradient Descent - 2 \n SGD Variants \n \n Kernels \n Kernels \n Kernel Trick \n \n Support Vector Machines \n Support Vector Machines \n Large Margin Intuition \n Margin & Hard SVM \n Soft SVM & Norm Regularization \n Optimality Conditions and Support Vectors \n Soft SVM Implementation \n \n Decision Trees \n Decision Trees \n Gain Measure Implementation \n Decision Tree Pruning - 1 \n Decision Tree Pruning - 2 \n Threshold Splitting Rules \n Inductive Bias \n Classification Tree \n Regression Trees \n Random Forest Algorithm \n \n Nearest Neighbour \n K-Nearest Neighbor Algorithm \n Nearest Neighbor Analysis \n \n Naive-Bayes Algorithm \n Naive-Bayes Algorithm \n \n Neural Networks in Machine Learning \n Backpropagation Algorithm \n Backpropagation Algorithm - 2 \n Backpropagation Algorithm - 3 \n Non-Linear Hypothesis \n Neurons and the Brain \n Model Representation \n Multiclass Classification \n Cost Function \n Gradient Checking \n Random Initialization \n \n \n      .inside-navigation  \n  #site-navigation  \n \n \n \n \n \n \n   Close \n \n \n \n \n \u00a0 \n \n \n \n \n \n \n \n \n \n [if lte IE 11]>\n<script type='text/javascript' src='https://www.sanfoundry.com/wp-content/themes/generatepress/js/classList.min.js'></script>\n<![endif] \n \n \n \n \n  Dynamic page generated in 2.266 seconds.  \n  Cached page generated by WP-Super-Cache on 2024-02-03 00:35:38  \n  Compression = gzip "
    },
    {
      "id": "1847",
      "question": "What does VC dimension do? \n",
      "answerA": " Reduces complexity of hypothesis space \n",
      "answerB": " Removes noise from dataset \n",
      "answerC": " Measures complexity of training dataset \n",
      "answerD": "Measures the complexity of hypothesis space H",
      "correctAnswer": "d \n",
      "trackName": "Machine Learning",
      "explanation": " The VC dimension measures the complexity of the hypothesis space H, not by the number of distinct hypotheses |H|, but by the number of distinct instances from X that can be completely discriminated using H. \n \n \n \n \n \n \n "
    },
    {
      "id": "1848",
      "question": "An instance set S is given. How many dichotomies are possible? \n",
      "answerA": " 2*|S| \n",
      "answerB": " 2/|S| \n",
      "answerC": " 2^|S| \n",
      "answerD": "|S|",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": " Given some instance set S, there are 2 ISI possible dichotomies. H shatters S if every possible dichotomy of S can be represented by some hypothesis from H. \n \n "
    },
    {
      "id": "1849",
      "question": "If h is a straight line, what is the maximum number of points that can be shattered? \n",
      "answerA": "4",
      "answerB": "2",
      "answerC": "3",
      "answerD": "5",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": " The main concept is to separate the positive data points from negative data points. Thus, is done using the line. So, the maximum number of points that can be shattered (or separated) is "
    },
    {
      "id": "1850",
      "question": "What is the VC dimension of a straight line? \n",
      "answerA": "3",
      "answerB": "2",
      "answerC": "4",
      "answerD": "0",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": "The maximum number of points shattered by the straight line is"
    },
    {
      "id": "1851",
      "question": "A set of 3 instances is shattered by _____ hypotheses. \n",
      "answerA": "4",
      "answerB": "8",
      "answerC": "3",
      "answerD": "2",
      "correctAnswer": "b \n",
      "trackName": "Machine Learning",
      "explanation": " A set of S instances can be shattered by 2^|S| hypotheses. Here, number of instances is "
    },
    {
      "id": "1852",
      "question": "What is the relation between VC dimension and hypothesis space H? \n",
      "answerA": " VC(H) <= |H| \n",
      "answerB": " VC(H) != log 2 |H| \n",
      "answerC": " VC(H) <= log 2 |H| \n",
      "answerD": "VC(H) > log 2 |H|",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": " Suppose that, VC(H) = d. Then H will require 2d distinct hypotheses to shatter d instances. Hence, 2d <= IHI, and d = VC(H) <= log 2 (H). \n \n "
    },
    {
      "id": "1853",
      "question": "VC Dimension can be infinite. \n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " The VC dimension is defined as the largest number of points in set X that can be shattered (or separated) successfully by the chosen hypothesis space. If the hypothesis space H can separate arbitrarily large number of data points in a given set, then VC(H) = \u221e. \n \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1854",
      "question": "Who invented VC dimension? \n",
      "answerA": " Francis Galton \n",
      "answerB": " J. Ross Quinlan \n",
      "answerC": " Leslie Valiant \n",
      "answerD": "Vapnik and Chervonenkis",
      "correctAnswer": "d \n",
      "trackName": "Machine Learning",
      "explanation": " Vapnik and Chervonenkis introduced VC dimension. Valiant introduced the concept of PAC learning. Galton introduced Linear Regression. Quinlan introduced the Decision Tree. \n \n "
    },
    {
      "id": "1855",
      "question": "What is the advantage of VC dimension over PAC learning? \n",
      "answerA": " VC dimension reduces complexity of training data \n",
      "answerB": " VC dimension outputs more accurate predictors \n",
      "answerC": " VC dimension can work for infinite hypothesis space \n",
      "answerD": "There is no advantage",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": " In the case of infinite hypothesis spaces we cannot apply m >= 1/\u03b5 ((ln |H| + ln (1/\u03b4) (PAC Learning). Hence, we consider VC dimension of H. If training set X is too large, VC(H) = \u221e. \n \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1856",
      "question": "What function is used for hypothesis representation in logistic regression? \n",
      "answerA": " Cos function \n",
      "answerB": " Laplace transformation \n",
      "answerC": " Lagrange\u2019s function \n",
      "answerD": "Sigmoid function",
      "correctAnswer": "d \n",
      "trackName": "Machine Learning",
      "explanation": " In logistic regression, the output is based on a probability and thus must be within the range of 0 and "
    },
    {
      "id": "1857",
      "question": "\n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Machine Learning",
      "explanation": "Sigmoid function can be used for machine learning models where output is based on the prediction of a probability. The function only exists between 0 and"
    },
    {
      "id": "1858",
      "question": "How is the hypothesis represented? Transpose of t is t T . \n",
      "answerA": " h(X) = t 0  + t 1 x 1 \n",
      "answerB": " h(X) = 1/(1 + e (t T x) ) \n",
      "answerC": " h(X) = e (-t T x) /(1 + e (-t T x) ) \n",
      "answerD": "h(X) = 1/(1 + e (-t T x) )",
      "correctAnswer": "d \n",
      "trackName": "Machine Learning",
      "explanation": " The hypothesis is a function of the term t T x. Since its value should be between 0 and 1, sigmoid function is used. Sigmoid function is given by g(a) = 1/(1 + e -a ). \nh(x) = g (t T x) \n\u21e8h(X) = 1/(1 + e (-t T x) ). \n \n \n advertisement \n \n \n \n \n \n advertisement \n \n \n \n \n \n \n "
    },
    {
      "id": "1859",
      "question": "What is the value of g(",
      "answerA": "? \n",
      "answerB": "1/4",
      "answerC": "1",
      "answerD": "0",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " The sigmoid function is given by g(x) = 1/1+e -x . a=0 \nHence, g(a) = 1/1+e -0 \n= 1/1+1 \n= 1/"
    },
    {
      "id": "1860",
      "question": "What is odds ratio? \n",
      "answerA": " 6:1 \n",
      "answerB": " -6:1 \n",
      "answerC": " Undefined \n",
      "answerD": "1:2",
      "correctAnswer": "c \n",
      "trackName": "Machine Learning",
      "explanation": "Probability p has to be within the range of 0 to"
    },
    {
      "id": "1861",
      "question": "What is odds ratio? \n",
      "answerA": " 0.9:1 \n",
      "answerB": " 9:1 \n",
      "answerC": " 1:9 \n",
      "answerD": "1:0.9",
      "correctAnswer": "b \n",
      "trackName": "Machine Learning",
      "explanation": " p = 0.9 i.e. 9/10, hence (1-p) = 1 \u2013 9/10 = 1/10 \nOdds ratio = p/(1-p) \n= (9/10)/(1/10) = 9:"
    },
    {
      "id": "1862",
      "question": "What is the odds ratio? \n",
      "answerA": " p/(1-p) \n",
      "answerB": " p \n",
      "answerC": " 1-p \n",
      "answerD": "p*(1-p)",
      "correctAnswer": "a \n",
      "trackName": "Machine Learning",
      "explanation": " p is the probability that event y occurs. Then the probability of event y not occurring can be given as (1-p). Odds ratio is given by the ratio of the probability of an event occurring and the probability that an event is not occurring. Thus, odds ratio is p/(1-p). \n \n \n advertisement \n \n \n \n \n "
    },
    {
      "id": "1863",
      "question": "\n",
      "answerA": " True \n",
      "answerB": "FALSE",
      "answerC": "NULL",
      "answerD": "NULL",
      "correctAnswer": "b \n",
      "trackName": "Machine Learning",
      "explanation": "The output of logistic regression is not always 0 or"
    }
  ]
}
